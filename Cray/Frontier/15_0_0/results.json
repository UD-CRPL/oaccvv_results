var jsonResults = {
    "configs": [
        {
            "CC": "",
            "CCFlags": [],
            "CC_ACC_Version": null,
            "CPP": "",
            "CPPFlags": [],
            "CPP_ACC_Version": null,
            "FC": "ftn",
            "FCFlags": [
                "-h",
                "acc,noomp",
                "-h",
                "msgs"
            ],
            "FC_ACC_Version": "2.7",
            "PostCompileCommands": [],
            "PostRunCommands": [],
            "PreCompileCommands": [],
            "PreRunCommands": [],
            "build_dir": "/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build",
            "config_id": -1,
            "config_name": "init_config.txt",
            "env": null,
            "exclude_tags": [],
            "exclude_tests": [
                "acc_testsuite.Fh",
                "acc_testsuite.h",
                "acc_testsuite_declare.h"
            ],
            "export_format": "json",
            "fast": false,
            "id": 1,
            "include_by_default": true,
            "include_tags": [],
            "include_tests": [],
            "keep_build_dir": false,
            "keep_mutated_tests": false,
            "keep_partial_results": false,
            "keep_policy": "on-error",
            "mutated_test_dir": "/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/mutated_tests",
            "mutators": [],
            "partial": false,
            "partial_results_dir": "/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/partial_results",
            "runAll": true,
            "runtime_prefix": "",
            "seed": null,
            "system_name": null,
            "tag_evaluation": null,
            "test_dir": "/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests",
            "timeout": 10
        }
    ],
    "runs": {
        "acc_async_test.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 181 \n  A loop starting at line 181 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 191 \n  A loop starting at line 191 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0389 seconds\nCray Fortran : 246 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9848/acc_async_test_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb0): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9848/acc_async_test_1.o: in function `test2_':\nThe Cpu Module:(.text+0x215): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9848/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x2ea): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x37f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9848/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9848/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9848/acc_async_test_1.o:(.data+0x80): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 4.4921003370545805
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 191 \n  A loop starting at line 191 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9862/acc_async_test_1.o: in function `test2_':\nThe Cpu Module:(.text+0xa5): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9862/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x17a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x20f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9862/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9862/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3655061712488532
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 181 \n  A loop starting at line 181 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0091 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9876/acc_async_test_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb0): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9876/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x18a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x21f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9876/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9876/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3654516958631575
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 191 \n  A loop starting at line 191 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9890/acc_async_test_1.o: in function `test2_':\nThe Cpu Module:(.text+0xa5): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9890/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x17a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x20f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9890/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9890/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3656837251037359
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 181 \n  A loop starting at line 181 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 191 \n  A loop starting at line 191 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9904/acc_async_test_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb0): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9904/acc_async_test_1.o: in function `test2_':\nThe Cpu Module:(.text+0x215): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9904/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9904/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36546846898272634
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 191 \n  A loop starting at line 191 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9918/acc_async_test_1.o: in function `test2_':\nThe Cpu Module:(.text+0xa5): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9918/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x17a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x20f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9918/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9918/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3655314389616251
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 181 \n  A loop starting at line 181 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9932/acc_async_test_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb0): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9932/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x18a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x21f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9932/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9932/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36548919789493084
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test.F90/acc_async_test.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 75 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 95 \n  A loop starting at line 95 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 124.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A loop starting at line 128 was fused with the loop starting at line 124.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 128 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 126.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 126.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 148 \n  A loop starting at line 148 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 191 \n  A loop starting at line 191 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 237 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9946/acc_async_test_1.o: in function `test2_':\nThe Cpu Module:(.text+0xa5): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9946/acc_async_test_1.o: in function `test3_':\nThe Cpu Module:(.text+0x17a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x20f): undefined reference to `acc_async_test'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9946/acc_async_test_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9946/acc_async_test_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36553049832582474
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_async_test_all.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 20 \n   A loop nest at line 20 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 20.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 46 \n  A loop starting at line 46 was collapsed into the loop starting at line 47.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 79 \n   A loop nest at line 79 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 80 \n   A loop nest at line 80 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 81 \n   A loop nest at line 81 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 89 \n  A loop starting at line 89 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 95 \n  A loop starting at line 95 was fused with the loop starting at line 81.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 105 \n  A loop starting at line 105 was collapsed into the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 200 \n  A loop starting at line 200 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 209 \n  A loop starting at line 209 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0115 seconds\nCray Fortran : 263 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9961/acc_async_test_all_1.o: in function `test1_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9961/acc_async_test_all_1.o: in function `test2_':\nThe Cpu Module:(.text+0x21d): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9961/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x398): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x404): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9961/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9961/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9961/acc_async_test_all_1.o:(.data+0x80): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.41645179595798254
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 79 \n   A loop nest at line 79 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 80 \n   A loop nest at line 80 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 81 \n   A loop nest at line 81 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 89 \n  A loop starting at line 89 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 95 \n  A loop starting at line 95 was fused with the loop starting at line 81.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 105 \n  A loop starting at line 105 was collapsed into the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 209 \n  A loop starting at line 209 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9975/acc_async_test_all_1.o: in function `test2_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9975/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x228): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x294): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9975/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9975/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36559778917580843
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 20 \n   A loop nest at line 20 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 20.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 46 \n  A loop starting at line 46 was collapsed into the loop starting at line 47.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 200 \n  A loop starting at line 200 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9989/acc_async_test_all_1.o: in function `test1_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9989/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x228): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x294): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9989/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_9989/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3657221677713096
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 79 \n   A loop nest at line 79 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 80 \n   A loop nest at line 80 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 81 \n   A loop nest at line 81 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 89 \n  A loop starting at line 89 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 95 \n  A loop starting at line 95 was fused with the loop starting at line 81.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 105 \n  A loop starting at line 105 was collapsed into the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 209 \n  A loop starting at line 209 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10003/acc_async_test_all_1.o: in function `test2_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10003/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x228): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x294): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10003/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10003/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36551453825086355
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 20 \n   A loop nest at line 20 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 20.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 46 \n  A loop starting at line 46 was collapsed into the loop starting at line 47.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 79 \n   A loop nest at line 79 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 80 \n   A loop nest at line 80 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 81 \n   A loop nest at line 81 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 89 \n  A loop starting at line 89 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 95 \n  A loop starting at line 95 was fused with the loop starting at line 81.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 105 \n  A loop starting at line 105 was collapsed into the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 200 \n  A loop starting at line 200 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 209 \n  A loop starting at line 209 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0091 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10017/acc_async_test_all_1.o: in function `test1_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10017/acc_async_test_all_1.o: in function `test2_':\nThe Cpu Module:(.text+0x21d): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10017/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10017/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36552121117711067
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 79 \n   A loop nest at line 79 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 80 \n   A loop nest at line 80 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 81 \n   A loop nest at line 81 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 89 \n  A loop starting at line 89 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 95 \n  A loop starting at line 95 was fused with the loop starting at line 81.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 105 \n  A loop starting at line 105 was collapsed into the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 209 \n  A loop starting at line 209 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10031/acc_async_test_all_1.o: in function `test2_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10031/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x228): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x294): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10031/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10031/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3654898786917329
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 20 \n   A loop nest at line 20 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 20.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 46 \n  A loop starting at line 46 was collapsed into the loop starting at line 47.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 200 \n  A loop starting at line 200 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10045/acc_async_test_all_1.o: in function `test1_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10045/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x228): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x294): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10045/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10045/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36555119790136814
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_async_test_all.F90/acc_async_test_all.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 79 \n   A loop nest at line 79 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 80 \n   A loop nest at line 80 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 81 \n   A loop nest at line 81 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 83 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 89 \n  A loop starting at line 89 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 95 \n  A loop starting at line 95 was fused with the loop starting at line 81.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 105 \n  A loop starting at line 105 was collapsed into the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 106 \n  A loop starting at line 106 was vectorized.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 138 \n   A loop nest at line 138 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 139 \n   A loop nest at line 139 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 140 \n   A loop nest at line 140 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 141 \n  A loop starting at line 141 was fused with the loop starting at line 138.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A loop starting at line 142 was fused with the loop starting at line 138.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 142 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 149 \n  A loop starting at line 149 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 155 \n  A loop starting at line 155 was fused with the loop starting at line 149.\n\n\nftn-6003 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 165 \n  A loop starting at line 165 was collapsed into the loop starting at line 166.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 166 \n  A loop starting at line 166 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 209 \n  A loop starting at line 209 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_async_test_all.F90, Line = 218 \n  A loop starting at line 218 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 254 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10059/acc_async_test_all_1.o: in function `test2_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10059/acc_async_test_all_1.o: in function `test3_':\nThe Cpu Module:(.text+0x228): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x294): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10059/acc_async_test_all_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10059/acc_async_test_all_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3665781207382679
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyin.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3873536791652441
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.08705121977254748,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 406 \n  A loop starting at line 406 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10091/acc_copyin_1.o: in function `test1_':\nThe Cpu Module:(.text+0x98): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xda): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10091/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.315425596665591
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 64.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 65 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 73 \n  A loop starting at line 73 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 73 \n  A loop starting at line 73 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 82 \n  A loop starting at line 82 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 82 \n  A loop starting at line 82 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 415 \n  A loop starting at line 415 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0064 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10105/acc_copyin_1.o: in function `test2_':\nThe Cpu Module:(.text+0xc3): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x105): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x19b): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1f4): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10105/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3660172480158508
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 134 \n  A loop starting at line 134 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 142 \n  A loop starting at line 142 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 424 \n  A loop starting at line 424 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0065 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10119/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31549168284982443
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 181 \n  A loop starting at line 181 was fused with the loop starting at line 180.\n\n\nftn-6005 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 189 \n  A loop starting at line 189 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 189 \n  A loop starting at line 189 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 197 \n  A loop starting at line 197 was fused with the loop starting at line 189.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 433 \n  A loop starting at line 433 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10133/acc_copyin_1.o: in function `test4_':\nThe Cpu Module:(.text+0x98): undefined reference to `acc_pcopyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xda): undefined reference to `acc_pcopyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10133/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3160773338750005
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 229 \n  A loop starting at line 229 was fused with the loop starting at line 228.\n\n\nftn-6005 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 237 \n  A loop starting at line 237 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 237 \n  A loop starting at line 237 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 245 \n  A loop starting at line 245 was fused with the loop starting at line 237.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 442 \n  A loop starting at line 442 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0064 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10147/acc_copyin_1.o: in function `test5_':\nThe Cpu Module:(.text+0x98): undefined reference to `acc_p_or_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xda): undefined reference to `acc_p_or_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10147/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31567390635609627
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 277 \n  A loop starting at line 277 was fused with the loop starting at line 276.\n\n\nftn-6005 ftn: SCALAR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 287 \n  A loop starting at line 287 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 287 \n  A loop starting at line 287 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 296 \n  A loop starting at line 296 was fused with the loop starting at line 287.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 451 \n  A loop starting at line 451 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10161/acc_copyin_1.o: in function `test6_':\nThe Cpu Module:(.text+0x98): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xd2): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x114): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x14e): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10161/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158916267566383
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT6 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST7, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 352 \n  A loop starting at line 352 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST7, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 361 \n  A loop starting at line 361 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90, Line = 460 \n  A loop starting at line 460 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0066 seconds\nCray Fortran : 488 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10175/acc_copyin_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31602117605507374
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin.F90/acc_copyin.F908 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31573807913810015
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016988058108836412,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyin_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3289344762451947
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017032823991030455,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 30 \n  A loop starting at line 30 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 30.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 30.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 30.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 302 \n  A loop starting at line 302 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 365 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10224/acc_copyin_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x97): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xbc): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10224/acc_copyin_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.32499566301703453
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 78.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 90 \n  A loop starting at line 90 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 90 \n  A loop starting at line 90 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 98 \n  A loop starting at line 98 was fused with the loop starting at line 90.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 311 \n  A loop starting at line 311 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 365 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10238/acc_copyin_async_1.o: in function `test2_':\nThe Cpu Module:(.text+0x7f): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xa4): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xab): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10238/acc_copyin_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3275502440519631
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 131 \n  A loop starting at line 131 was fused with the loop starting at line 130.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 140 \n  A loop starting at line 140 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 140 \n  A loop starting at line 140 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 148 \n  A loop starting at line 148 was fused with the loop starting at line 140.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 320 \n  A loop starting at line 320 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 365 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10252/acc_copyin_async_1.o: in function `test3_':\nThe Cpu Module:(.text+0x84): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xa9): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10252/acc_copyin_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3307370273396373
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 181 \n  A loop starting at line 181 was fused with the loop starting at line 179.\n\n\nftn-6231 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 181 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 183 \n  A loop starting at line 183 was fused with the loop starting at line 179.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 189 \n  A loop starting at line 189 was fused with the loop starting at line 182.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 197 \n  A loop starting at line 197 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 204 \n  A loop starting at line 204 was fused with the loop starting at line 197.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 329 \n  A loop starting at line 329 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 365 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10266/acc_copyin_async_1.o: in function `test4_':\nThe Cpu Module:(.text+0xd6): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10266/acc_copyin_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3279194259084761
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 239 \n  A loop starting at line 239 was fused with the loop starting at line 238.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 241 \n  A loop starting at line 241 was fused with the loop starting at line 240.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 242 \n  A loop starting at line 242 was fused with the loop starting at line 240.\n\n\nftn-6005 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 247 \n  A loop starting at line 247 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 247 \n  A loop starting at line 247 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 248 \n  A loop starting at line 248 was fused with the loop starting at line 247.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 254 \n  A loop starting at line 254 was fused with the loop starting at line 247.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 262 \n  A loop starting at line 262 was fused with the loop starting at line 247.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90, Line = 338 \n  A loop starting at line 338 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 365 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10280/acc_copyin_async_1.o: in function `test5_':\nThe Cpu Module:(.text+0x97): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xbc): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10280/acc_copyin_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.32818973902612925
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async.F90/acc_copyin_async.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3275444130413234
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017313614953309298,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyin_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31631345953792334
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01701263478025794,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 30.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 30.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 48 \n  A loop starting at line 48 was fused with the loop starting at line 30.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 297 \n  A loop starting at line 297 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 361 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10329/acc_copyin_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xaa): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xdd): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10329/acc_copyin_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31518642511218786
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 79.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 91 \n  A loop starting at line 91 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 91 \n  A loop starting at line 91 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was fused with the loop starting at line 91.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 306 \n  A loop starting at line 306 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 361 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10343/acc_copyin_async_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x90): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xc3): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xca): undefined reference to `acc_async_test_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10343/acc_copyin_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3161741616204381
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 132 \n  A loop starting at line 132 was fused with the loop starting at line 131.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 141 \n  A loop starting at line 141 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 141 \n  A loop starting at line 141 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 149 \n  A loop starting at line 149 was fused with the loop starting at line 141.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 315 \n  A loop starting at line 315 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 361 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10357/acc_copyin_async_with_len_1.o: in function `test3_':\nThe Cpu Module:(.text+0x97): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xca): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10357/acc_copyin_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158453172072768
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 182 \n  A loop starting at line 182 was fused with the loop starting at line 180.\n\n\nftn-6231 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 182 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 184 \n  A loop starting at line 184 was fused with the loop starting at line 180.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 190 \n  A loop starting at line 190 was fused with the loop starting at line 183.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 198 \n  A loop starting at line 198 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 205 \n  A loop starting at line 205 was fused with the loop starting at line 198.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 324 \n  A loop starting at line 324 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 361 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10371/acc_copyin_async_with_len_1.o: in function `test4_':\nThe Cpu Module:(.text+0xe9): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10371/acc_copyin_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31532671488821507
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 241 \n  A loop starting at line 241 was fused with the loop starting at line 240.\n\n\nftn-6005 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 250 \n  A loop starting at line 250 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 250 \n  A loop starting at line 250 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 258 \n  A loop starting at line 258 was fused with the loop starting at line 250.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90, Line = 333 \n  A loop starting at line 333 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 361 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10385/acc_copyin_async_with_len_1.o: in function `test5_':\nThe Cpu Module:(.text+0x9c): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xcf): undefined reference to `acc_copyin_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10385/acc_copyin_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3156057237647474
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_async_with_len.F90/acc_copyin_async_with_len.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3158739721402526
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017491098027676344,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyin_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3157663741149008
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01750366296619177,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 408 \n  A loop starting at line 408 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10439/acc_copyin_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x7d): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x8f): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x10e): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x150): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10439/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3290418740361929
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 67 \n  A loop starting at line 67 was fused with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 74 \n  A loop starting at line 74 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 74 \n  A loop starting at line 74 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 74.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 417 \n  A loop starting at line 417 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0064 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10453/acc_copyin_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x6b): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x7d): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10453/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3160854112356901
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 135 \n  A loop starting at line 135 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 144 \n  A loop starting at line 144 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 426 \n  A loop starting at line 426 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0066 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10467/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3160754512064159
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 183 \n  A loop starting at line 183 was fused with the loop starting at line 182.\n\n\nftn-6005 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 191 \n  A loop starting at line 191 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 191 \n  A loop starting at line 191 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 199 \n  A loop starting at line 199 was fused with the loop starting at line 191.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 435 \n  A loop starting at line 435 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10481/acc_copyin_with_len_1.o: in function `test4_':\nThe Cpu Module:(.text+0x6b): undefined reference to `acc_pcopyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x7d): undefined reference to `acc_pcopyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10481/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31612651888281107
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 231 \n  A loop starting at line 231 was fused with the loop starting at line 230.\n\n\nftn-6005 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 239 \n  A loop starting at line 239 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 239 \n  A loop starting at line 239 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 247 \n  A loop starting at line 247 was fused with the loop starting at line 239.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 444 \n  A loop starting at line 444 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10495/acc_copyin_with_len_1.o: in function `test5_':\nThe Cpu Module:(.text+0x6b): undefined reference to `acc_p_or_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x7d): undefined reference to `acc_p_or_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10495/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31611319398507476
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 279 \n  A loop starting at line 279 was fused with the loop starting at line 278.\n\n\nftn-6005 ftn: SCALAR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 289 \n  A loop starting at line 289 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 289 \n  A loop starting at line 289 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST6, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 298 \n  A loop starting at line 298 was fused with the loop starting at line 289.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 453 \n  A loop starting at line 453 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10509/acc_copyin_with_len_1.o: in function `test6_':\nThe Cpu Module:(.text+0x6e): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x7b): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x90): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x9d): undefined reference to `acc_copyin_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10509/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3293726718984544
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT6 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST7, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 354 \n  A loop starting at line 354 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST7, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 363 \n  A loop starting at line 363 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90, Line = 462 \n  A loop starting at line 462 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0064 seconds\nCray Fortran : 490 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10523/acc_copyin_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31587674794718623
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -DT6 -DT7 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyin_with_len.F90/acc_copyin_with_len.F908 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyin_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3156864899210632
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017349333968013525,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3158456366509199
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017478453926742077,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 274 \n  A loop starting at line 274 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 338 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10572/acc_copyout_1.o: in function `test1_':\nThe Cpu Module:(.text+0xc8): undefined reference to `acc_create_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x163): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10572/acc_copyout_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31518364883959293
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 63.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 65 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 64.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 283 \n  A loop starting at line 283 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 338 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10586/acc_copyout_1.o: in function `test2_':\nThe Cpu Module:(.text+0xc6): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10586/acc_copyout_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.5160730136558414
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 125 \n  A loop starting at line 125 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 132 \n  A loop starting at line 132 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 292 \n  A loop starting at line 292 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 338 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10600/acc_copyout_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3159938734024763
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 164 \n  A loop starting at line 164 was fused with the loop starting at line 162.\n\n\nftn-6231 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 164 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 171 \n  A loop starting at line 171 was fused with the loop starting at line 163.\n\n\nftn-6005 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 179 \n  A loop starting at line 179 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 179 \n  A loop starting at line 179 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 301 \n  A loop starting at line 301 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 338 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10614/acc_copyout_1.o: in function `test4_':\nThe Cpu Module:(.text+0xc6): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10614/acc_copyout_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31555835297331214
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 225 \n  A loop starting at line 225 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 233 \n  A loop starting at line 233 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90, Line = 310 \n  A loop starting at line 310 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 338 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10628/acc_copyout_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31544448295608163
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout.F90/acc_copyout.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31570760114118457
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01688235206529498,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_async.F90/acc_copyout_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 44 \n  A loop starting at line 44 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0066 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10660/acc_copyout_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1f0): undefined reference to `acc_copyout_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x215): undefined reference to `acc_copyout_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10660/acc_copyout_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.32938725082203746
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_async.F90/acc_copyout_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.327166142873466
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017041299026459455,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_async_with_len.F90/acc_copyout_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 44 \n  A loop starting at line 44 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10692/acc_copyout_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x206): undefined reference to `acc_copyout_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x239): undefined reference to `acc_copyout_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10692/acc_copyout_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31612733099609613
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_async_with_len.F90/acc_copyout_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3153135599568486
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016795395873486996,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_finalize.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize.F90/acc_copyout_finalize.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 92 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10724/acc_copyout_finalize_1.o: in function `test1_':\nThe Cpu Module:(.text+0xa0): undefined reference to `acc_copyout_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10724/acc_copyout_finalize_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3164539523422718
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize.F90/acc_copyout_finalize.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3156914892606437
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017014598939567804,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_finalize_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize_async.F90/acc_copyout_finalize_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10756/acc_copyout_finalize_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1f0): undefined reference to `acc_copyout_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x215): undefined reference to `acc_copyout_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10756/acc_copyout_finalize_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36610070895403624
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize_async.F90/acc_copyout_finalize_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3156883339397609
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017114569898694754,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_finalize_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize_async_with_len.F90/acc_copyout_finalize_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10788/acc_copyout_finalize_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x206): undefined reference to `acc_copyout_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x239): undefined reference to `acc_copyout_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10788/acc_copyout_finalize_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3159062140621245
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize_async_with_len.F90/acc_copyout_finalize_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.315342185087502
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017015770077705383,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_finalize_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize_with_len.F90/acc_copyout_finalize_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90, Line = 64 \n  A loop starting at line 64 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10820/acc_copyout_finalize_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb3): undefined reference to `acc_copyout_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10820/acc_copyout_finalize_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31621699361130595
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_finalize_with_len.F90/acc_copyout_finalize_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_finalize_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31572881201282144
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017025178764015436,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_copyout_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_with_len.F90/acc_copyout_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 63.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 65 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 64.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 111 \n  A loop starting at line 111 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 157 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10852/acc_copyout_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb2): undefined reference to `acc_create_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x109): undefined reference to `acc_copyout_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10852/acc_copyout_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x249): undefined reference to `acc_copyout_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10852/acc_copyout_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10852/acc_copyout_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36617397982627153
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_with_len.F90/acc_copyout_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 63.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 65 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 64.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10866/acc_copyout_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x99): undefined reference to `acc_copyout_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10866/acc_copyout_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3153521651402116
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_with_len.F90/acc_copyout_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 111 \n  A loop starting at line 111 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10880/acc_copyout_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb2): undefined reference to `acc_create_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x109): undefined reference to `acc_copyout_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10880/acc_copyout_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31588489282876253
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_copyout_with_len.F90/acc_copyout_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 63.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 65 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 64.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_copyout_with_len.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10894/acc_copyout_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x99): undefined reference to `acc_copyout_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10894/acc_copyout_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3152948240749538
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create.F90/acc_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3161458168178797
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06515042809769511,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create.F90/acc_create.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 210 \n  A loop starting at line 210 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 266 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10926/acc_create_1.o: in function `test1_':\nThe Cpu Module:(.text+0xc3): undefined reference to `acc_create_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x15e): undefined reference to `acc_copyout_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10926/acc_create_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158774981275201
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create.F90/acc_create.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 65.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 66 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 73 \n  A loop starting at line 73 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 73 \n  A loop starting at line 73 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 81 \n  A loop starting at line 81 was fused with the loop starting at line 73.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 219 \n  A loop starting at line 219 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 266 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10940/acc_create_1.o: in function `test2_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_create_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10940/acc_create_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158901431597769
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create.F90/acc_create.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 112 \n  A loop starting at line 112 was fused with the loop starting at line 111.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 112 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 119 \n  A loop starting at line 119 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 119 \n  A loop starting at line 119 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 119.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 228 \n  A loop starting at line 228 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 266 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10954/acc_create_1.o: in function `test3_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_pcreate_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10954/acc_create_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3159368238411844
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create.F90/acc_create.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 158 \n  A loop starting at line 158 was fused with the loop starting at line 157.\n\n\nftn-6231 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 158 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 165 \n  A loop starting at line 165 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 165 \n  A loop starting at line 165 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 173 \n  A loop starting at line 173 was fused with the loop starting at line 165.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90, Line = 237 \n  A loop starting at line 237 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 266 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10968/acc_create_1.o: in function `test4_':\nThe Cpu Module:(.text+0xad): undefined reference to `acc_p_or_create_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_10968/acc_create_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.316131629049778
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create.F90/acc_create.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31599645782262087
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017032512929290533,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_create_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_async.F90/acc_create_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 22.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 31 \n  A loop starting at line 31 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 31.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 31.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 106 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11000/acc_create_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0xf7): undefined reference to `acc_create_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x11c): undefined reference to `acc_create_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11000/acc_create_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3666902268305421
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_async.F90/acc_create_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31565829599276185
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0168512430973351,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_create_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_async_with_len.F90/acc_create_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 22.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 31 \n  A loop starting at line 31 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 31.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 31.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11032/acc_create_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x10f): undefined reference to `acc_create_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x142): undefined reference to `acc_create_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11032/acc_create_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3665998028591275
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_async_with_len.F90/acc_create_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155350382439792
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01727944891899824,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_create_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_with_len.F90/acc_create_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31688886182382703
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016800004057586193,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_with_len.F90/acc_create_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 14, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 15, Column = 22 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 16, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0058 seconds\nCray Fortran : 267 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16485120030120015
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_with_len.F90/acc_create_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 65.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 66 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 73 \n  A loop starting at line 73 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 73 \n  A loop starting at line 73 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 81 \n  A loop starting at line 81 was fused with the loop starting at line 73.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 220 \n  A loop starting at line 220 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0057 seconds\nCray Fortran : 267 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11092/acc_create_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x80): undefined reference to `acc_create_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11092/acc_create_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3156220456585288
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_with_len.F90/acc_create_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 112 \n  A loop starting at line 112 was fused with the loop starting at line 111.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 112 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 119 \n  A loop starting at line 119 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 119 \n  A loop starting at line 119 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 119.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 229 \n  A loop starting at line 229 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 267 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11106/acc_create_with_len_1.o: in function `test3_':\nThe Cpu Module:(.text+0x80): undefined reference to `acc_pcreate_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11106/acc_create_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154892888851464
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_with_len.F90/acc_create_with_len.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 158 \n  A loop starting at line 158 was fused with the loop starting at line 157.\n\n\nftn-6231 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 158 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 165 \n  A loop starting at line 165 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 165 \n  A loop starting at line 165 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 173 \n  A loop starting at line 173 was fused with the loop starting at line 165.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90, Line = 238 \n  A loop starting at line 238 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 267 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11120/acc_create_with_len_1.o: in function `test4_':\nThe Cpu Module:(.text+0x80): undefined reference to `acc_p_or_create_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11120/acc_create_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3153463932685554
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_create_with_len.F90/acc_create_with_len.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_create_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3158616190776229
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01689852261915803,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete.F90/acc_delete.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 67 \n  A loop starting at line 67 was fused with the loop starting at line 66.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 67 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 84 \n  A loop starting at line 84 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 84 \n  A loop starting at line 84 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 115 \n  A loop starting at line 115 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0088 seconds\nCray Fortran : 161 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11152/acc_delete_1.o: in function `test1_':\nThe Cpu Module:(.text+0xbc): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xfe): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11152/acc_delete_1.o: in function `test2_':\nThe Cpu Module:(.text+0x25e): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x2a0): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x336): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x38f): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11152/acc_delete_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11152/acc_delete_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3666873211041093
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete.F90/acc_delete.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 67 \n  A loop starting at line 67 was fused with the loop starting at line 66.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 67 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 84 \n  A loop starting at line 84 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 84 \n  A loop starting at line 84 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11166/acc_delete_1.o: in function `test2_':\nThe Cpu Module:(.text+0xbe): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x100): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x196): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1ef): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11166/acc_delete_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3656718321144581
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete.F90/acc_delete.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 115 \n  A loop starting at line 115 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11180/acc_delete_1.o: in function `test1_':\nThe Cpu Module:(.text+0xbc): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xfe): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11180/acc_delete_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3153677638620138
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete.F90/acc_delete.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 67 \n  A loop starting at line 67 was fused with the loop starting at line 66.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 67 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 84 \n  A loop starting at line 84 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 84 \n  A loop starting at line 84 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11194/acc_delete_1.o: in function `test2_':\nThe Cpu Module:(.text+0xbe): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x100): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x196): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1ef): undefined reference to `acc_delete_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11194/acc_delete_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3658908340148628
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async.F90/acc_delete_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 21.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 137 \n  A loop starting at line 137 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 146 \n  A loop starting at line 146 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 183 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11209/acc_delete_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1f0): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x215): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x23a): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x25f): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11209/acc_delete_async_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11209/acc_delete_async_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3667220179922879
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async.F90/acc_delete_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 146 \n  A loop starting at line 146 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11223/acc_delete_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31592534109950066
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async.F90/acc_delete_async.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 21.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 137 \n  A loop starting at line 137 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11237/acc_delete_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1f0): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x215): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x23a): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x25f): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11237/acc_delete_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31590330926701427
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async.F90/acc_delete_async.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async.F90, Line = 146 \n  A loop starting at line 146 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11251/acc_delete_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3155930801294744
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async_with_len.F90/acc_delete_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 137 \n  A loop starting at line 137 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 146 \n  A loop starting at line 146 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 183 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11266/acc_delete_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x206): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x239): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x26c): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x29f): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11266/acc_delete_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11266/acc_delete_async_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36646802769973874
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async_with_len.F90/acc_delete_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 146 \n  A loop starting at line 146 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11280/acc_delete_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31544981338083744
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async_with_len.F90/acc_delete_async_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 137 \n  A loop starting at line 137 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11294/acc_delete_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x206): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x239): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x26c): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x29f): undefined reference to `acc_delete_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11294/acc_delete_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36587673565372825
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_async_with_len.F90/acc_delete_async_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_async_with_len.F90, Line = 146 \n  A loop starting at line 146 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11309/acc_delete_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31543134804815054
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_finalize.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize.F90/acc_delete_finalize.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 61 \n  A loop starting at line 61 was fused with the loop starting at line 60.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 61 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 71 \n  A loop starting at line 71 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 71 \n  A loop starting at line 71 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 111 \n  A loop starting at line 111 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0089 seconds\nCray Fortran : 157 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11324/acc_delete_finalize_1.o: in function `test1_':\nThe Cpu Module:(.text+0x97): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xae): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11324/acc_delete_finalize_1.o: in function `test2_':\nThe Cpu Module:(.text+0x1f6): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x230): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x272): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x2ac): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x301): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x318): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11324/acc_delete_finalize_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11324/acc_delete_finalize_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3662004307843745
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize.F90/acc_delete_finalize.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 61 \n  A loop starting at line 61 was fused with the loop starting at line 60.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 61 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 71 \n  A loop starting at line 71 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 71 \n  A loop starting at line 71 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11338/acc_delete_finalize_1.o: in function `test2_':\nThe Cpu Module:(.text+0x96): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xd0): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x112): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x14c): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1a1): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1b8): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11338/acc_delete_finalize_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3658793312497437
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize.F90/acc_delete_finalize.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 111 \n  A loop starting at line 111 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11352/acc_delete_finalize_1.o: in function `test1_':\nThe Cpu Module:(.text+0x97): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xae): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11352/acc_delete_finalize_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36590449092909694
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize.F90/acc_delete_finalize.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 61 \n  A loop starting at line 61 was fused with the loop starting at line 60.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 61 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 71 \n  A loop starting at line 71 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 71 \n  A loop starting at line 71 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11366/acc_delete_finalize_1.o: in function `test2_':\nThe Cpu Module:(.text+0x96): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xd0): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x112): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x14c): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1a1): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1b8): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11366/acc_delete_finalize_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3660556930117309
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_finalize_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async.F90/acc_delete_finalize_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 75.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 77 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 96 \n  A loop starting at line 96 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 96 \n  A loop starting at line 96 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 104 \n  A loop starting at line 104 was fused with the loop starting at line 96.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 135 \n  A loop starting at line 135 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 144 \n  A loop starting at line 144 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0091 seconds\nCray Fortran : 181 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11381/acc_delete_finalize_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1eb): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x210): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x235): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x25a): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11381/acc_delete_finalize_async_1.o: in function `test2_':\nThe Cpu Module:(.text+0x3ac): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11381/acc_delete_finalize_async_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11381/acc_delete_finalize_async_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36666034907102585
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async.F90/acc_delete_finalize_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 75.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 77 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 96 \n  A loop starting at line 96 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 96 \n  A loop starting at line 96 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 104 \n  A loop starting at line 104 was fused with the loop starting at line 96.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 144 \n  A loop starting at line 144 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 172 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11395/acc_delete_finalize_async_1.o: in function `test2_':\nThe Cpu Module:(.text+0x9c): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11395/acc_delete_finalize_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3159610000438988
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async.F90/acc_delete_finalize_async.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 22.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 135 \n  A loop starting at line 135 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 172 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11409/acc_delete_finalize_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1eb): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x210): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x235): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x25a): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11409/acc_delete_finalize_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.32892352622002363
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async.F90/acc_delete_finalize_async.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 75.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 77 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 96 \n  A loop starting at line 96 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 96 \n  A loop starting at line 96 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 104 \n  A loop starting at line 104 was fused with the loop starting at line 96.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async.F90, Line = 144 \n  A loop starting at line 144 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 172 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11423/acc_delete_finalize_async_1.o: in function `test2_':\nThe Cpu Module:(.text+0x9c): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11423/acc_delete_finalize_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31581046897917986
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_finalize_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async_with_len.F90/acc_delete_finalize_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 21.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 78.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 80 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 79.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 107 \n  A loop starting at line 107 was fused with the loop starting at line 99.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 138 \n  A loop starting at line 138 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 147 \n  A loop starting at line 147 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 184 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11438/acc_delete_finalize_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x206): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x239): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x26c): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x29f): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11438/acc_delete_finalize_async_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x436): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11438/acc_delete_finalize_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11438/acc_delete_finalize_async_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36658026510849595
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async_with_len.F90/acc_delete_finalize_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 78.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 80 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 79.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 107 \n  A loop starting at line 107 was fused with the loop starting at line 99.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 147 \n  A loop starting at line 147 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11452/acc_delete_finalize_async_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0xc6): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11452/acc_delete_finalize_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.315856188070029
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async_with_len.F90/acc_delete_finalize_async_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 21.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 138 \n  A loop starting at line 138 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0064 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11466/acc_delete_finalize_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x206): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x239): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x26c): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x29f): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11466/acc_delete_finalize_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36595327500253916
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_async_with_len.F90/acc_delete_finalize_async_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 78.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 80 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 79.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 99 \n  A loop starting at line 99 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 107 \n  A loop starting at line 107 was fused with the loop starting at line 99.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_async_with_len.F90, Line = 147 \n  A loop starting at line 147 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11480/acc_delete_finalize_async_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0xc6): undefined reference to `acc_delete_finalize_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11480/acc_delete_finalize_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154837591573596
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_finalize_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_with_len.F90/acc_delete_finalize_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 37 \n  A loop starting at line 37 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 68 \n  A loop starting at line 68 was fused with the loop starting at line 67.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 68 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 87 \n  A loop starting at line 87 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 87 \n  A loop starting at line 87 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 126 \n  A loop starting at line 126 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0089 seconds\nCray Fortran : 163 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11495/acc_delete_finalize_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xa8): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xcd): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11495/acc_delete_finalize_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x21a): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x254): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x296): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x2d0): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x33b): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x360): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11495/acc_delete_finalize_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11495/acc_delete_finalize_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3665704960003495
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_with_len.F90/acc_delete_finalize_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 68 \n  A loop starting at line 68 was fused with the loop starting at line 67.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 68 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 87 \n  A loop starting at line 87 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 87 \n  A loop starting at line 87 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 126 \n  A loop starting at line 126 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11509/acc_delete_finalize_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0xaa): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xe4): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x126): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x160): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1cb): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1f0): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11509/acc_delete_finalize_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3155230740085244
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_with_len.F90/acc_delete_finalize_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 37 \n  A loop starting at line 37 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11523/acc_delete_finalize_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xa8): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xcd): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11523/acc_delete_finalize_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154290630482137
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_finalize_with_len.F90/acc_delete_finalize_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 68 \n  A loop starting at line 68 was fused with the loop starting at line 67.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 68 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 87 \n  A loop starting at line 87 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 87 \n  A loop starting at line 87 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_finalize_with_len.F90, Line = 126 \n  A loop starting at line 126 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11537/acc_delete_finalize_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0xaa): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xe4): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x126): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x160): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1cb): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1f0): undefined reference to `acc_delete_finalize_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11537/acc_delete_finalize_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36558776814490557
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_delete_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_with_len.F90/acc_delete_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 68 \n  A loop starting at line 68 was fused with the loop starting at line 67.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 68 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 76 \n  A loop starting at line 76 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 76 \n  A loop starting at line 76 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 115 \n  A loop starting at line 115 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0089 seconds\nCray Fortran : 161 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11552/acc_delete_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x8f): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xa1): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11552/acc_delete_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x1e8): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x22a): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x27c): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x28e): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11552/acc_delete_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11552/acc_delete_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.366432199254632
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_with_len.F90/acc_delete_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 68 \n  A loop starting at line 68 was fused with the loop starting at line 67.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 68 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 76 \n  A loop starting at line 76 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 76 \n  A loop starting at line 76 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11566/acc_delete_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0xa8): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xea): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x13c): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x14e): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11566/acc_delete_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31556579610332847
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_with_len.F90/acc_delete_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 115 \n  A loop starting at line 115 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11580/acc_delete_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x8f): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xa1): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11580/acc_delete_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31552678160369396
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_delete_with_len.F90/acc_delete_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 68 \n  A loop starting at line 68 was fused with the loop starting at line 67.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 68 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 76 \n  A loop starting at line 76 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 76 \n  A loop starting at line 76 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_delete_with_len.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11594/acc_delete_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0xa8): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xea): undefined reference to `acc_copyin_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x13c): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x14e): undefined reference to `acc_delete_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11594/acc_delete_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3157591512426734
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_deviceptr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_deviceptr.F90/acc_deviceptr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-352 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 10, Column = 27 \n  \"X\" has the VALUE attribute, therefore it must be a dummy argument.\n\n\nftn-352 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 10, Column = 30 \n  \"I\" has the VALUE attribute, therefore it must be a dummy argument.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 14, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 15, Column = 26 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 16, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-356 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 28, Column = 15 \n  Assignment of a Cray pointer expression to a DOUBLE PRECISION variable is not allowed.\n\n\nftn-356 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 29, Column = 15 \n  Assignment of a Cray pointer expression to a DOUBLE PRECISION variable is not allowed.\n\n\nftn-356 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90, Line = 30, Column = 15 \n  Assignment of a Cray pointer expression to a DOUBLE PRECISION variable is not allowed.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0059 seconds\nCray Fortran : 96 source lines\nCray Fortran : 8 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16598015930503607
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_deviceptr.F90/acc_deviceptr.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_deviceptr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31518612429499626
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016823939979076385,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_free.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_free.F90/acc_free.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_free.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_free.F90, Line = 11, Column = 26 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"ACC_GET_PROPERTY\".\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_free.F90, Line = 11, Column = 109 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_FREE_MEMORY\".\n\n\nftn-281 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_free.F90, Line = 15, Column = 9 \n  The left hand side of an assignment statement must be a variable or a function result.\n\n\nftn-410 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_free.F90, Line = 21, Column = 13 \n  The conditional expression must be scalar.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 71 source lines\nCray Fortran : 4 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16604453278705478
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_free.F90/acc_free.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_free.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3153224866837263
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017191599123179913,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_default_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_default_async.F90/acc_get_default_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90, Line = 20 \n  A loop starting at line 20 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90, Line = 20 \n  A loop starting at line 20 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90, Line = 65 \n  A loop starting at line 65 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11667/acc_get_default_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1a): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x156): undefined reference to `acc_get_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11667/acc_get_default_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3166309832595289
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_default_async.F90/acc_get_default_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_default_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155721202492714
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017388800159096718,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_device_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_device_num.F90/acc_get_device_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_device_num.F90, Line = 42 \n  A loop starting at line 42 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11699/acc_get_device_num_1.o: in function `test1_':\nThe Cpu Module:(.text+0xc): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1a): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x22): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x35): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x40): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x47): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x4f): undefined reference to `acc_get_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11699/acc_get_device_num_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3162157409824431
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_device_num.F90/acc_get_device_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3156627048738301
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016859438735991716,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_num_devices.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_num_devices.F90/acc_get_num_devices.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_num_devices.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_num_devices.F90, Line = 38 \n  A loop starting at line 38 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11731/acc_get_num_devices_1.o: in function `test1_':\nThe Cpu Module:(.text+0x6): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x12): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1a): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11731/acc_get_num_devices_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3164124824106693
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_num_devices.F90/acc_get_num_devices.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_num_devices.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3655289658345282
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016951024997979403,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_property.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_property.F90/acc_get_property.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property.F90, Line = 9, Column = 20 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"ACC_GET_PROPERTY\".\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property.F90, Line = 9, Column = 103 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_MEMORY\".\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property.F90, Line = 10, Column = 103 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_FREE_MEMORY\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0057 seconds\nCray Fortran : 58 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16637778701260686
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_property.F90/acc_get_property.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155476921238005
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017058784142136574,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_get_property_string.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_property_string.F90/acc_get_property_string.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property_string.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property_string.F90, Line = 14, Column = 59 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_NAME\".\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property_string.F90, Line = 16, Column = 59 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_VENDOR\".\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property_string.F90, Line = 18, Column = 59 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_DRIVER\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0058 seconds\nCray Fortran : 65 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16582310665398836
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_get_property_string.F90/acc_get_property_string.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_get_property_string.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.315161996986717
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016808790620416403,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_hostptr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_hostptr.F90/acc_hostptr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_hostptr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-303 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_hostptr.F90, Line = 12, Column = 15 \n  Data type REAL is not allowed with Cray pointer for the operation \"ne\".\n\n\nftn-389 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_hostptr.F90, Line = 16, Column = 14 \n  No specific match can be found for the generic subprogram call \"ACC_DELETE\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 69 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16634374158456922
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_hostptr.F90/acc_hostptr.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_hostptr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31556635722517967
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01690270286053419,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_init.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_init.F90/acc_init.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_init.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_init.F90, Line = 29 \n  A loop starting at line 29 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11850/acc_init_1.o: in function `test1_':\nThe Cpu Module:(.text+0x4): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x10): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x18): undefined reference to `acc_init'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11850/acc_init_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3162190290167928
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_init.F90/acc_init.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_init.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3154918639920652
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01700791623443365,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_is_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_is_present.F90/acc_is_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_is_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_is_present.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11882/acc_is_present_1.o: in function `test1_':\nThe Cpu Module:(.text+0x49): undefined reference to `acc_is_present_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11882/acc_is_present_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31605080422014
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_is_present.F90/acc_is_present.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_is_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3153965501114726
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01724347984418273,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_is_present_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_is_present_with_len.F90/acc_is_present_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_is_present_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_is_present_with_len.F90, Line = 52 \n  A loop starting at line 52 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11914/acc_is_present_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x48): undefined reference to `acc_is_present_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_11914/acc_is_present_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31628993386402726
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_is_present_with_len.F90/acc_is_present_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_is_present_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.5161115080118179
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01703981775790453,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_malloc.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_malloc.F90/acc_malloc.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 11, Column = 26 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"ACC_GET_PROPERTY\".\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 11, Column = 109 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"ACC_PROPERTY_FREE_MEMORY\".\n\n\nftn-281 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 13, Column = 9 \n  The left hand side of an assignment statement must be a variable or a function result.\n\n\nftn-410 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 15, Column = 13 \n  The conditional expression must be scalar.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 21, Column = 12 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-410 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 22, Column = 15 \n  The conditional expression must be scalar.\n\n\nftn-281 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90, Line = 27, Column = 9 \n  The left hand side of an assignment statement must be a variable or a function result.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0058 seconds\nCray Fortran : 79 source lines\nCray Fortran : 7 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16535210702568293
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_malloc.F90/acc_malloc.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_malloc.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.2786068548448384
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016973880119621754,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_map_data.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_map_data.F90/acc_map_data.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90, Line = 12, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90, Line = 13, Column = 26 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90, Line = 14, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90, Line = 20, Column = 27 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"C_LOC\".\n\n\nftn-436 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90, Line = 41, Column = 23 \n  Illegal association of an array-valued actual argument with a scalar dummy argument \"ADDR\".\n\n\nftn-1108 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90, Line = 41, Column = 23 \n  The type of the actual argument, \"DOUBLE PRECISION\", does not match \"Cray pointer\", the type of the dummy argument.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0059 seconds\nCray Fortran : 90 source lines\nCray Fortran : 6 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12780290469527245
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_map_data.F90/acc_map_data.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_map_data.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.26524826511740685
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01751004485413432,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_memcpy_d2d.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_memcpy_d2d.F90/acc_memcpy_d2d.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 23 \n  A loop starting at line 23 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 25 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 44 \n  A loop starting at line 44 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 44 \n  A loop starting at line 44 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12004/acc_memcpy_d2d_1.o: in function `test1_':\nThe Cpu Module:(.text+0x4c): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x5b): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xb9): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xc8): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xd4): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x15f): undefined reference to `acc_memcpy_d2d_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x16e): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12004/acc_memcpy_d2d_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3157257563434541
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_memcpy_d2d.F90/acc_memcpy_d2d.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_memcpy_d2d.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31599645921960473
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017420411109924316,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_on_device.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_on_device.F90/acc_on_device.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_on_device.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1698 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_on_device.F90, Line = 13, Column = 31 \n  Type INTEGER(kind=4) is not allowed for the \"DEVICE\" argument of intrinsic ACC_ON_DEVICE.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 75 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16597198275849223
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_on_device.F90/acc_on_device.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_on_device.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32801022194325924
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017500475980341434,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_default_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_set_default_async.F90/acc_set_default_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 34.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 34.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12065/acc_set_default_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x8a): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xd8): undefined reference to `acc_set_default_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12065/acc_set_default_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31626654090359807
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_set_default_async.F90/acc_set_default_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_default_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3156415829434991
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016938671935349703,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_device_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_set_device_num.F90/acc_set_device_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 31 \n  A loop starting at line 31 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 31 \n  A loop starting at line 31 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 41 \n  A loop starting at line 41 was unrolled 2 times.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 41 \n  A loop starting at line 41 was partially vector pipelined.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 41 \n  A loop starting at line 41 was partially vectorized.\n\n\nftn-6008 ftn: SCALAR TEST_ACC_SET_DEVICE_NUM, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 98 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12097/acc_set_device_num_1.o: in function `test1_':\nThe Cpu Module:(.text+0x7d): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x85): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x13e): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x153): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x15b): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1c9): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1dc): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1fb): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x203): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x21b): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x226): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x277): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x27f): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x2af): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x2bb): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x390): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x39b): undefined reference to `acc_set_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12097/acc_set_device_num_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3665436338633299
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_set_device_num.F90/acc_set_device_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31549609219655395
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016997605562210083,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_set_device_type.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_set_device_type.F90/acc_set_device_type.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_type.F90, Line = 11, Column = 34 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 66 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16571816289797425
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_set_device_type.F90/acc_set_device_type.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3152025961317122
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017430230975151062,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_shutdown.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_shutdown.F90/acc_shutdown.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_shutdown.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_shutdown.F90, Line = 29 \n  A loop starting at line 29 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12158/acc_shutdown_1.o: in function `test1_':\nThe Cpu Module:(.text+0x4): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x10): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x18): undefined reference to `acc_shutdown'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12158/acc_shutdown_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31575130531564355
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_shutdown.F90/acc_shutdown.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_shutdown.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31555326329544187
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016862935852259398,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_unmap_data.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_unmap_data.F90/acc_unmap_data.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_unmap_data.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_unmap_data.F90, Line = 13, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_unmap_data.F90, Line = 14, Column = 26 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_unmap_data.F90, Line = 15, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_unmap_data.F90, Line = 21, Column = 27 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"C_LOC\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0059 seconds\nCray Fortran : 90 source lines\nCray Fortran : 4 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16604161681607366
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_unmap_data.F90/acc_unmap_data.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_unmap_data.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3151571676135063
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.065075873862952,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_device.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device.F90/acc_update_device.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 77 \n  A loop starting at line 77 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 90 \n  A loop starting at line 90 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 122 \n  A loop starting at line 122 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 131 \n  A loop starting at line 131 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0090 seconds\nCray Fortran : 168 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12219/acc_update_device_1.o: in function `test1_':\nThe Cpu Module:(.text+0x98): undefined reference to `acc_update_device_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xda): undefined reference to `acc_update_device_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12219/acc_update_device_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12219/acc_update_device_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3665408487431705
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device.F90/acc_update_device.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 77 \n  A loop starting at line 77 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 90 \n  A loop starting at line 90 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 131 \n  A loop starting at line 131 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 159 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12233/acc_update_device_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31599325174465775
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device.F90/acc_update_device.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 122 \n  A loop starting at line 122 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 159 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12247/acc_update_device_1.o: in function `test1_':\nThe Cpu Module:(.text+0x98): undefined reference to `acc_update_device_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xda): undefined reference to `acc_update_device_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12247/acc_update_device_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3660160657018423
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device.F90/acc_update_device.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 77 \n  A loop starting at line 77 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 90 \n  A loop starting at line 90 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device.F90, Line = 131 \n  A loop starting at line 131 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 159 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12261/acc_update_device_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31556099792942405
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_device_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async.F90/acc_update_device_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 34.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 34.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 91 \n  A loop starting at line 91 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 145 \n  A loop starting at line 145 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 182 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12276/acc_update_device_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x91): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xef): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12276/acc_update_device_async_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12276/acc_update_device_async_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3658407269977033
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async.F90/acc_update_device_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 91 \n  A loop starting at line 91 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 145 \n  A loop starting at line 145 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 173 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12290/acc_update_device_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3160387999378145
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async.F90/acc_update_device_async.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 34.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 34.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 173 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12304/acc_update_device_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x91): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xef): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12304/acc_update_device_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.315882608294487
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async.F90/acc_update_device_async.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 91 \n  A loop starting at line 91 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async.F90, Line = 145 \n  A loop starting at line 145 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 173 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12318/acc_update_device_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31557425297796726
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_device_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async_with_len.F90/acc_update_device_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 48 \n  A loop starting at line 48 was fused with the loop starting at line 35.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 86 \n  A loop starting at line 86 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 93 \n  A loop starting at line 93 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 100 \n  A loop starting at line 100 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 107 \n  A loop starting at line 107 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 139 \n  A loop starting at line 139 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 185 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12333/acc_update_device_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x9f): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x110): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12333/acc_update_device_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12333/acc_update_device_async_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36618062388151884
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async_with_len.F90/acc_update_device_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 86 \n  A loop starting at line 86 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 93 \n  A loop starting at line 93 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 100 \n  A loop starting at line 100 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 107 \n  A loop starting at line 107 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 176 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12347/acc_update_device_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158406768925488
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async_with_len.F90/acc_update_device_async_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 48 \n  A loop starting at line 48 was fused with the loop starting at line 35.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 139 \n  A loop starting at line 139 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 176 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12361/acc_update_device_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x9f): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x110): undefined reference to `acc_update_device_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12361/acc_update_device_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154946700669825
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_async_with_len.F90/acc_update_device_async_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 86 \n  A loop starting at line 86 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 93 \n  A loop starting at line 93 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 100 \n  A loop starting at line 100 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 107 \n  A loop starting at line 107 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_async_with_len.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 176 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12375/acc_update_device_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3155271620489657
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_device_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_with_len.F90/acc_update_device_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 35.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 87 \n  A loop starting at line 87 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 94 \n  A loop starting at line 94 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 101 \n  A loop starting at line 101 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 107 \n  A loop starting at line 107 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 145 \n  A loop starting at line 145 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0091 seconds\nCray Fortran : 181 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12390/acc_update_device_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x6b): undefined reference to `acc_update_device_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x7d): undefined reference to `acc_update_device_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12390/acc_update_device_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12390/acc_update_device_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.5665982570499182
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_with_len.F90/acc_update_device_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 87 \n  A loop starting at line 87 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 94 \n  A loop starting at line 94 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 101 \n  A loop starting at line 101 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 107 \n  A loop starting at line 107 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 145 \n  A loop starting at line 145 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 172 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12404/acc_update_device_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154453542083502
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_with_len.F90/acc_update_device_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 35.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 172 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12418/acc_update_device_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x6b): undefined reference to `acc_update_device_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x7d): undefined reference to `acc_update_device_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12418/acc_update_device_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154615368694067
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_device_with_len.F90/acc_update_device_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 87 \n  A loop starting at line 87 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 94 \n  A loop starting at line 94 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 101 \n  A loop starting at line 101 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 107 \n  A loop starting at line 107 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_device_with_len.F90, Line = 145 \n  A loop starting at line 145 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 172 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12432/acc_update_device_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31537101324647665
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_self.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self.F90/acc_update_self.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 33 \n  A loop starting at line 33 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 64.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 65.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 85.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0089 seconds\nCray Fortran : 164 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12447/acc_update_self_1.o: in function `test1_':\nThe Cpu Module:(.text+0xc6): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12447/acc_update_self_1.o: in function `test2_':\nThe Cpu Module:(.text+0x22c): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x2c4): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12447/acc_update_self_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12447/acc_update_self_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3659725529141724
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self.F90/acc_update_self.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 64.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 65.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 85.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12461/acc_update_self_1.o: in function `test2_':\nThe Cpu Module:(.text+0xbc): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x154): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12461/acc_update_self_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31569917500019073
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self.F90/acc_update_self.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 33 \n  A loop starting at line 33 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12475/acc_update_self_1.o: in function `test1_':\nThe Cpu Module:(.text+0xc6): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12475/acc_update_self_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31572755984961987
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self.F90/acc_update_self.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 64.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 65.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 85.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12490/acc_update_self_1.o: in function `test2_':\nThe Cpu Module:(.text+0xbc): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x154): undefined reference to `acc_update_self_1_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12490/acc_update_self_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154396852478385
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_self_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async.F90/acc_update_self_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 28 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 29 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 27.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 112 \n  A loop starting at line 112 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 118 \n  A loop starting at line 118 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 124 \n  A loop starting at line 124 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 130 \n  A loop starting at line 130 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 159 \n  A loop starting at line 159 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 168 \n  A loop starting at line 168 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 204 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12506/acc_update_self_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0xe1): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x106): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12506/acc_update_self_async_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12506/acc_update_self_async_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36586879193782806
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async.F90/acc_update_self_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 112 \n  A loop starting at line 112 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 118 \n  A loop starting at line 118 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 124 \n  A loop starting at line 124 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 130 \n  A loop starting at line 130 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 168 \n  A loop starting at line 168 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 195 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12520/acc_update_self_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158359290100634
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async.F90/acc_update_self_async.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 28 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 29 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 27.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 159 \n  A loop starting at line 159 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 195 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12534/acc_update_self_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0xe1): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x106): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12534/acc_update_self_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3156649679876864
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async.F90/acc_update_self_async.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 98 \n  A loop starting at line 98 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 105 \n  A loop starting at line 105 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 112 \n  A loop starting at line 112 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 118 \n  A loop starting at line 118 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 124 \n  A loop starting at line 124 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 130 \n  A loop starting at line 130 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async.F90, Line = 168 \n  A loop starting at line 168 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 195 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12548/acc_update_self_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158540138974786
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_self_async_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async_with_len.F90/acc_update_self_async_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 28 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 29 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 27.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 97 \n  A loop starting at line 97 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 104 \n  A loop starting at line 104 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 111 \n  A loop starting at line 111 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 117 \n  A loop starting at line 117 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 123 \n  A loop starting at line 123 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 130 \n  A loop starting at line 130 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 159 \n  A loop starting at line 159 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 168 \n  A loop starting at line 168 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 204 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12563/acc_update_self_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xf9): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x12c): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12563/acc_update_self_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12563/acc_update_self_async_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36614554608240724
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async_with_len.F90/acc_update_self_async_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 97 \n  A loop starting at line 97 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 104 \n  A loop starting at line 104 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 111 \n  A loop starting at line 111 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 117 \n  A loop starting at line 117 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 123 \n  A loop starting at line 123 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 130 \n  A loop starting at line 130 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 168 \n  A loop starting at line 168 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 195 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12577/acc_update_self_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31556804198771715
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async_with_len.F90/acc_update_self_async_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 28 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 26.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 29 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 27.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 159 \n  A loop starting at line 159 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 195 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12591/acc_update_self_async_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0xf9): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x12c): undefined reference to `acc_update_self_async_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12591/acc_update_self_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3163546589203179
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_async_with_len.F90/acc_update_self_async_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 97 \n  A loop starting at line 97 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 104 \n  A loop starting at line 104 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 111 \n  A loop starting at line 111 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 117 \n  A loop starting at line 117 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 123 \n  A loop starting at line 123 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 130 \n  A loop starting at line 130 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_async_with_len.F90, Line = 168 \n  A loop starting at line 168 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 195 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12605/acc_update_self_async_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31535482220351696
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_update_self_with_len.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_with_len.F90/acc_update_self_with_len.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 33 \n  A loop starting at line 33 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 64.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 65.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 85.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0089 seconds\nCray Fortran : 164 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12620/acc_update_self_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x99): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12620/acc_update_self_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x1c8): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x21c): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12620/acc_update_self_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12620/acc_update_self_with_len_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3661654959432781
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_with_len.F90/acc_update_self_with_len.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 64.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 65.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 85.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12634/acc_update_self_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x78): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xcc): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12634/acc_update_self_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31546383164823055
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_with_len.F90/acc_update_self_with_len.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 33 \n  A loop starting at line 33 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12648/acc_update_self_with_len_1.o: in function `test1_':\nThe Cpu Module:(.text+0x99): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12648/acc_update_self_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31562879914417863
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_update_self_with_len.F90/acc_update_self_with_len.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 64.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 65.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 85 \n  A loop starting at line 85 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 85 \n  A loop starting at line 85 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 85.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_update_self_with_len.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12662/acc_update_self_with_len_1.o: in function `test2_':\nThe Cpu Module:(.text+0x78): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xcc): undefined reference to `acc_update_self_2_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12662/acc_update_self_with_len_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.5160605539567769
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait.F90/acc_wait.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 43 \n  A loop starting at line 43 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90, Line = 70 \n  A loop starting at line 70 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 97 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12677/acc_wait_1.o: in function `test1_':\nThe Cpu Module:(.text+0xb8): undefined reference to `acc_wait'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12677/acc_wait_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31575465202331543
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait.F90/acc_wait.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31531906221061945
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016834910959005356,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait_all.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait_all.F90/acc_wait_all.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 21.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 49 \n  A loop starting at line 49 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 55 \n  A loop starting at line 55 was fused with the loop starting at line 49.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90, Line = 80 \n  A loop starting at line 80 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 107 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12709/acc_wait_all_1.o: in function `test1_':\nThe Cpu Module:(.text+0x1b2): undefined reference to `acc_wait_all'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12709/acc_wait_all_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31656638626009226
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait_all.F90/acc_wait_all.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3153687189333141
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017027741763740778,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait_all_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait_all_async.F90/acc_wait_all_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 21.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 21.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 26 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 28 \n  A loop starting at line 28 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 21.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 29 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 21.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 30 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 39 \n  A loop starting at line 39 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 51 \n  A loop starting at line 51 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 58 \n  A loop starting at line 58 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 58 \n  A loop starting at line 58 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 64 \n  A loop starting at line 64 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 58.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 83 \n  A loop starting at line 83 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 83 \n  A loop starting at line 83 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 90 \n  A loop starting at line 90 was fused with the loop starting at line 83.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0067 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12741/acc_wait_all_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x289): undefined reference to `acc_wait_all_async'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x371): undefined reference to `acc_wait_all_async'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12741/acc_wait_all_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.36667076824232936
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait_all_async.F90/acc_wait_all_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_all_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3154560374096036
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0168263241648674,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "acc_wait_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait_async.F90/acc_wait_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 24 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 26 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 25.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 39 \n  A loop starting at line 39 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 39.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 52 \n  A loop starting at line 52 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 52 \n  A loop starting at line 52 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 52.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90, Line = 84 \n  A loop starting at line 84 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 111 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12773/acc_wait_async_1.o: in function `test1_':\nThe Cpu Module:(.text+0x122): undefined reference to `acc_wait_async'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1b3): undefined reference to `acc_wait_async'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_12773/acc_wait_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3667671838775277
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/acc_wait_async.F90/acc_wait_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/acc_wait_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31580946780741215
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06547193508595228,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_and_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_and_x.F90/atomic_capture_assign_expr_and_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 17 \n  A loop starting at line 17 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 54 \n   A loop nest at line 54 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 55 \n  A loop starting at line 55 was interchanged with the loop starting at line 56.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 55 \n  A loop starting at line 55 was fused with the loop starting at line 54.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 56 \n  A loop starting at line 56 was fused with the loop starting at line 54.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 65 \n  A loop starting at line 65 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 66 \n  A loop starting at line 66 was fused with the loop starting at line 65.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 71 \n  A loop starting at line 71 was interchanged with the loop starting at line 72.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 71 \n  A loop starting at line 71 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 71 \n  A loop starting at line 71 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 82 \n  A loop starting at line 82 was interchanged with the loop starting at line 83.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 72.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 96 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 96 \n  A loop starting at line 96 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_and_x.F90, Line = 125 \n  A loop starting at line 125 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 152 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.6167567269876599
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.03295016521587968,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_divided_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_divided_x.F90/atomic_capture_assign_expr_divided_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 98 \n   A loop nest at line 98 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 100 \n  A loop starting at line 100 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 105 \n  A loop starting at line 105 was interchanged with the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 105 \n  A loop starting at line 105 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 105 \n  A loop starting at line 105 was vectorized.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 117 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 156 \n  A loop starting at line 156 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 183 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.46672001387923956
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_divided_x.F90/atomic_capture_assign_expr_divided_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_divided_x.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41822909796610475
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01706279907375574,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_eqv_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_eqv_x.F90/atomic_capture_assign_expr_eqv_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 93 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 93 \n  A loop starting at line 93 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_eqv_x.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4168731397949159
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01718861097469926,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_minus_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_minus_x.F90/atomic_capture_assign_expr_minus_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 91 \n   A loop nest at line 91 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 93 \n  A loop starting at line 93 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 98 \n  A loop starting at line 98 was interchanged with the loop starting at line 99.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 98 \n  A loop starting at line 98 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 98 \n  A loop starting at line 98 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 110 \n  A loop starting at line 110 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 113, Column = 52 \n  Procedure \"IS_POSSIBLE\" is defined at line 37 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 119 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4665112728253007
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_minus_x.F90/atomic_capture_assign_expr_minus_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 166 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41828613774850965
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06558657018467784,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_neqv_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_neqv_x.F90/atomic_capture_assign_expr_neqv_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 58 \n  A loop starting at line 58 was interchanged with the loop starting at line 59.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 58 \n  A loop starting at line 58 was fused with the loop starting at line 57.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 57.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 68 \n  A loop starting at line 68 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 69 \n  A loop starting at line 69 was fused with the loop starting at line 68.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 74 \n  A loop starting at line 74 was interchanged with the loop starting at line 75.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 74 \n  A loop starting at line 74 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 74 \n  A loop starting at line 74 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 74.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 99 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_neqv_x.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4165851539000869
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01712803402915597,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_or_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_or_x.F90/atomic_capture_assign_expr_or_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 100 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 100 \n  A loop starting at line 100 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_or_x.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41625747224316
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01737153483554721,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_plus_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_plus_x.F90/atomic_capture_assign_expr_plus_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_plus_x.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4160691676661372
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0172452200204134,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_expr_times_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_expr_times_x.F90/atomic_capture_assign_expr_times_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_expr_times_x.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4164583692327142
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.032853259705007076,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_iand_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_iand_expr_x.F90/atomic_capture_assign_iand_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 51 \n   A loop nest at line 51 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 52 \n   A loop nest at line 52 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 52 \n  A loop starting at line 52 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 53 \n  A loop starting at line 53 was interchanged with the loop starting at line 55.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 53 \n  A loop starting at line 53 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 53 \n  A loop starting at line 53 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 54 \n  A loop starting at line 54 was collapsed into the loop starting at line 53.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 62 \n  A loop starting at line 62 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 64 \n  A loop starting at line 64 was fused with the loop starting at line 62.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 65 \n  A loop starting at line 65 was vectorized as part of the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 74 \n  A loop starting at line 74 was interchanged with the loop starting at line 75.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 74 \n  A loop starting at line 74 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 74 \n  A loop starting at line 74 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 84 \n  A loop starting at line 84 was interchanged with the loop starting at line 85.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 74.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 97 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 97 \n  A loop starting at line 97 was unwound.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 102 \n  Loop has been flattened.\n\n\nftn-6205 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 102 \n  A loop starting at line 102 was vectorized with a single vector iteration.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_expr_x.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41668561892583966
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01734384009614587,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_iand_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_iand_x_expr.F90/atomic_capture_assign_iand_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 69 \n  A loop starting at line 69 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 69.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 72 \n  A loop starting at line 72 was vectorized as part of the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 81 \n  A loop starting at line 81 was interchanged with the loop starting at line 82.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 81 \n  A loop starting at line 81 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 81 \n  A loop starting at line 81 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 91 \n  A loop starting at line 91 was interchanged with the loop starting at line 92.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 92 \n  A loop starting at line 92 was fused with the loop starting at line 82.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 104 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 104 \n  A loop starting at line 104 was unwound.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 109 \n  Loop has been flattened.\n\n\nftn-6205 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 109 \n  A loop starting at line 109 was vectorized with a single vector iteration.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_iand_x_expr.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 163 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41628046706318855
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017092015128582716,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_ior_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_ior_expr_x.F90/atomic_capture_assign_ior_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_expr_x.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4162855758331716
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017299465369433165,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_ior_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_ior_x_expr.F90/atomic_capture_assign_ior_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ior_x_expr.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41674321983009577
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01688585663214326,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_ixor_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_ixor_expr_x.F90/atomic_capture_assign_ixor_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_expr_x.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41690345807000995
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06552142277359962,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_ixor_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_ixor_x_expr.F90/atomic_capture_assign_ixor_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_ixor_x_expr.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4163516629487276
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.032886544708162546,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_max_expr_list_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_max_expr_list_x.F90/atomic_capture_assign_max_expr_list_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 61 \n  A loop starting at line 61 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 62 \n  A loop starting at line 62 was fused with the loop starting at line 61.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 67 \n  A loop starting at line 67 was interchanged with the loop starting at line 68.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 67 \n  A loop starting at line 67 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 67 \n  A loop starting at line 67 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 77 \n  A loop starting at line 77 was interchanged with the loop starting at line 78.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 67.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 90 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 90 \n  A loop starting at line 90 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_list_x.F90, Line = 123 \n  A loop starting at line 123 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 150 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.416261610109359
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01720855012536049,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_max_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_max_expr_x.F90/atomic_capture_assign_max_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_expr_x.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41648637410253286
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06553078209981322,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_max_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_max_x_expr.F90/atomic_capture_assign_max_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41647020168602467
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01742807263508439,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_max_x_expr_list.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_max_x_expr_list.F90/atomic_capture_assign_max_x_expr_list.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_max_x_expr_list.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41600998397916555
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016770594287663698,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_min_expr_list_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_min_expr_list_x.F90/atomic_capture_assign_min_expr_list_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_list_x.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4666678048670292
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017093597911298275,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_min_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_min_expr_x.F90/atomic_capture_assign_min_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_expr_x.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4161548539996147
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01686299266293645,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_min_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_min_x_expr.F90/atomic_capture_assign_min_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4164545009844005
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017043331172317266,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_min_x_expr_list.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_min_x_expr_list.F90/atomic_capture_assign_min_x_expr_list.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_min_x_expr_list.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41609116084873676
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01686276216059923,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_and_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_and_expr.F90/atomic_capture_assign_x_and_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 17 \n  A loop starting at line 17 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 55 \n   A loop nest at line 55 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 56 \n  A loop starting at line 56 was interchanged with the loop starting at line 57.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 56 \n  A loop starting at line 56 was fused with the loop starting at line 55.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 57 \n  A loop starting at line 57 was fused with the loop starting at line 55.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 66 \n  A loop starting at line 66 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 67 \n  A loop starting at line 67 was fused with the loop starting at line 66.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 72 \n  A loop starting at line 72 was interchanged with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 72 \n  A loop starting at line 72 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 72 \n  A loop starting at line 72 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 83 \n  A loop starting at line 83 was interchanged with the loop starting at line 84.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 73.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 97 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 97 \n  A loop starting at line 97 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_and_expr.F90, Line = 126 \n  A loop starting at line 126 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 153 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41658066492527723
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017399858683347702,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_divided_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_divided_expr.F90/atomic_capture_assign_x_divided_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 98 \n   A loop nest at line 98 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 100 \n  A loop starting at line 100 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 105 \n  A loop starting at line 105 was interchanged with the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 105 \n  A loop starting at line 105 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 105 \n  A loop starting at line 105 was vectorized.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 117 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 156 \n  A loop starting at line 156 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 183 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4661996611393988
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_divided_expr.F90/atomic_capture_assign_x_divided_expr.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_divided_expr.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41824224311858416
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017051316797733307,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_eqv_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_eqv_expr.F90/atomic_capture_assign_x_eqv_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 93 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 93 \n  A loop starting at line 93 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_eqv_expr.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4164255070500076
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0169009561650455,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_minus_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_minus_expr.F90/atomic_capture_assign_x_minus_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 91 \n   A loop nest at line 91 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 93 \n  A loop starting at line 93 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 98 \n  A loop starting at line 98 was interchanged with the loop starting at line 99.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 98 \n  A loop starting at line 98 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 98 \n  A loop starting at line 98 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 110 \n  A loop starting at line 110 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 113, Column = 46 \n  Procedure \"IS_POSSIBLE\" is defined at line 37 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 119 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4662602278403938
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_minus_expr.F90/atomic_capture_assign_x_minus_expr.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_minus_expr.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 166 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4179651979357004
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01688070734962821,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_neqv_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_neqv_expr.F90/atomic_capture_assign_x_neqv_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 58 \n  A loop starting at line 58 was interchanged with the loop starting at line 59.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 58 \n  A loop starting at line 58 was fused with the loop starting at line 57.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 57.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 68 \n  A loop starting at line 68 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 69 \n  A loop starting at line 69 was fused with the loop starting at line 68.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 74 \n  A loop starting at line 74 was interchanged with the loop starting at line 75.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 74 \n  A loop starting at line 74 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 74 \n  A loop starting at line 74 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 74.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 99 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_neqv_expr.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41632517194375396
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017199852969497442,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_or_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_or_expr.F90/atomic_capture_assign_x_or_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 100 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 100 \n  A loop starting at line 100 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_or_expr.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.416349277831614
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01706324005499482,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_plus_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_plus_expr.F90/atomic_capture_assign_x_plus_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_plus_expr.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41623642994090915
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016792345326393843,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_assign_x_times_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_assign_x_times_expr.F90/atomic_capture_assign_x_times_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_assign_x_times_expr.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4166887439787388
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.017054820898920298,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_and_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_and_x_assign.F90/atomic_capture_expr_and_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 17 \n  A loop starting at line 17 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 54 \n  A loop starting at line 54 was interchanged with the loop starting at line 55.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 54 \n  A loop starting at line 54 was fused with the loop starting at line 53.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 55 \n  A loop starting at line 55 was fused with the loop starting at line 53.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 64 \n  A loop starting at line 64 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 64.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 70 \n  A loop starting at line 70 was interchanged with the loop starting at line 71.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 70 \n  A loop starting at line 70 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 70 \n  A loop starting at line 70 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 81 \n  A loop starting at line 81 was interchanged with the loop starting at line 82.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 81 \n  A loop starting at line 81 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 71.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_and_x_assign.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 146 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4161290330812335
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0173850292339921,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_divided_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_divided_x_assign.F90/atomic_capture_expr_divided_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 98 \n   A loop nest at line 98 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 100 \n  A loop starting at line 100 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 105 \n  A loop starting at line 105 was interchanged with the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 105 \n  A loop starting at line 105 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 105 \n  A loop starting at line 105 was vectorized.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 117 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 156 \n  A loop starting at line 156 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 183 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4665272659622133
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_divided_x_assign.F90/atomic_capture_expr_divided_x_assign.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_divided_x_assign.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41808435739949346
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017307227943092585,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_eqv_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_eqv_x_assign.F90/atomic_capture_expr_eqv_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 93 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 93 \n  A loop starting at line 93 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_eqv_x_assign.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41662673419341445
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017441967967897654,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_minus_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_minus_x_assign.F90/atomic_capture_expr_minus_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 91 \n   A loop nest at line 91 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 93 \n  A loop starting at line 93 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 98 \n  A loop starting at line 98 was interchanged with the loop starting at line 99.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 98 \n  A loop starting at line 98 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 98 \n  A loop starting at line 98 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 110 \n  A loop starting at line 110 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 113, Column = 52 \n  Procedure \"IS_POSSIBLE\" is defined at line 37 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 119 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4669322781264782
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_minus_x_assign.F90/atomic_capture_expr_minus_x_assign.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_minus_x_assign.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 166 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36787364492192864
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016826349310576916,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_neqv_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_neqv_x_assign.F90/atomic_capture_expr_neqv_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 58 \n  A loop starting at line 58 was interchanged with the loop starting at line 59.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 58 \n  A loop starting at line 58 was fused with the loop starting at line 57.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 57.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 68 \n  A loop starting at line 68 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 69 \n  A loop starting at line 69 was fused with the loop starting at line 68.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 74 \n  A loop starting at line 74 was interchanged with the loop starting at line 75.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 74 \n  A loop starting at line 74 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 74 \n  A loop starting at line 74 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 74.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 99 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_neqv_x_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41626536613330245
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01685133809223771,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_or_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_or_x_assign.F90/atomic_capture_expr_or_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 100 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 100 \n  A loop starting at line 100 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_or_x_assign.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4167707720771432
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01711074821650982,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_plus_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_plus_x_assign.F90/atomic_capture_expr_plus_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_plus_x_assign.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3783190790563822
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016896213870495558,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_expr_times_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_expr_times_x_assign.F90/atomic_capture_expr_times_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_expr_times_x_assign.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4167572963051498
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.017090999986976385,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_iand_expr_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_iand_expr_x_assign.F90/atomic_capture_iand_expr_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 69 \n  A loop starting at line 69 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 69.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 72 \n  A loop starting at line 72 was vectorized as part of the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 81 \n  A loop starting at line 81 was interchanged with the loop starting at line 82.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 81 \n  A loop starting at line 81 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 81 \n  A loop starting at line 81 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 91 \n  A loop starting at line 91 was interchanged with the loop starting at line 92.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 92 \n  A loop starting at line 92 was fused with the loop starting at line 82.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 104 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 104 \n  A loop starting at line 104 was unwound.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 109 \n  Loop has been flattened.\n\n\nftn-6205 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 109 \n  A loop starting at line 109 was vectorized with a single vector iteration.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_expr_x_assign.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0057 seconds\nCray Fortran : 163 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.46712460881099105
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016846077982336283,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_iand_x_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_iand_x_expr_assign.F90/atomic_capture_iand_x_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 69 \n  A loop starting at line 69 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 69.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 72 \n  A loop starting at line 72 was vectorized as part of the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 81 \n  A loop starting at line 81 was interchanged with the loop starting at line 82.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 81 \n  A loop starting at line 81 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 81 \n  A loop starting at line 81 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 91 \n  A loop starting at line 91 was interchanged with the loop starting at line 92.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 91 \n  A loop starting at line 91 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 92 \n  A loop starting at line 92 was fused with the loop starting at line 82.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 104 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 104 \n  A loop starting at line 104 was unwound.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 109 \n  Loop has been flattened.\n\n\nftn-6205 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 109 \n  A loop starting at line 109 was vectorized with a single vector iteration.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_iand_x_expr_assign.F90, Line = 136 \n  A loop starting at line 136 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 163 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4664937322959304
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017067464999854565,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_ior_expr_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_ior_expr_x_assign.F90/atomic_capture_ior_expr_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_expr_x_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4162885108962655
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016909470316022635,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_ior_x_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_ior_x_expr_assign.F90/atomic_capture_ior_x_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ior_x_expr_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4160890351049602
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01730368100106716,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_ixor_expr_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_ixor_expr_x_assign.F90/atomic_capture_ixor_expr_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_expr_x_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4163235081359744
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01718059368431568,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_ixor_x_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_ixor_x_expr_assign.F90/atomic_capture_ixor_x_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 62.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 61 \n  A loop starting at line 61 was collapsed into the loop starting at line 60.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 98 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_ixor_x_expr_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4165399861522019
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016920863185077906,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_max_expr_list_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_max_expr_list_x_assign.F90/atomic_capture_max_expr_list_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_list_x_assign.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41610298212617636
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01699163904413581,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_max_expr_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_max_expr_x_assign.F90/atomic_capture_max_expr_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_expr_x_assign.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41621793527156115
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017169031780213118,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_max_x_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_max_x_expr_assign.F90/atomic_capture_max_x_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_assign.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41597482515498996
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01744377100840211,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_max_x_expr_list_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_max_x_expr_list_assign.F90/atomic_capture_max_x_expr_list_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_max_x_expr_list_assign.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.46647109696641564
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017252612859010696,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_min_expr_list_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_min_expr_list_x_assign.F90/atomic_capture_min_expr_list_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_list_x_assign.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41705827694386244
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017195161897689104,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_min_expr_x_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_min_expr_x_assign.F90/atomic_capture_min_expr_x_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_expr_x_assign.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.6468915627337992
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016929388977587223,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_min_x_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_min_x_expr_assign.F90/atomic_capture_min_x_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_assign.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4161879071034491
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016970697790384293,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_min_x_expr_list_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_min_x_expr_list_assign.F90/atomic_capture_min_x_expr_list_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 21 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 22 \n  A loop starting at line 22 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 26 \n  A loop starting at line 26 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 59 \n   A loop nest at line 59 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 60 \n   A loop nest at line 60 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 62 \n  A loop starting at line 62 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 63 \n  A loop starting at line 63 was fused with the loop starting at line 62.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 68 \n  A loop starting at line 68 was interchanged with the loop starting at line 69.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 68 \n  A loop starting at line 68 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 68 \n  A loop starting at line 68 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 78 \n  A loop starting at line 78 was interchanged with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 68.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 69.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 91 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_min_x_expr_list_assign.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0057 seconds\nCray Fortran : 148 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4668871811591089
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01693483768031001,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_and_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_and_expr_assign.F90/atomic_capture_x_and_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 17 \n  A loop starting at line 17 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 55 \n   A loop nest at line 55 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 56 \n  A loop starting at line 56 was interchanged with the loop starting at line 57.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 56 \n  A loop starting at line 56 was fused with the loop starting at line 55.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 57 \n  A loop starting at line 57 was fused with the loop starting at line 55.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 66 \n  A loop starting at line 66 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 67 \n  A loop starting at line 67 was fused with the loop starting at line 66.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 72 \n  A loop starting at line 72 was interchanged with the loop starting at line 73.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 72 \n  A loop starting at line 72 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 72 \n  A loop starting at line 72 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 83 \n  A loop starting at line 83 was interchanged with the loop starting at line 84.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 73.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 97 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 97 \n  A loop starting at line 97 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_and_expr_assign.F90, Line = 126 \n  A loop starting at line 126 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 153 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41685431310907006
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016887668054550886,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_divided_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_divided_expr_assign.F90/atomic_capture_x_divided_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 98 \n   A loop nest at line 98 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 100 \n  A loop starting at line 100 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 105 \n  A loop starting at line 105 was interchanged with the loop starting at line 106.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 105 \n  A loop starting at line 105 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 105 \n  A loop starting at line 105 was vectorized.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 117 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 117 \n  A loop starting at line 117 was unwound.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 156 \n  A loop starting at line 156 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 183 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.46664847107604146
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_divided_expr_assign.F90/atomic_capture_x_divided_expr_assign.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 22 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 23 \n  A loop starting at line 23 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 27 \n  A loop starting at line 27 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 52 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 61 \n  A loop starting at line 61 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_divided_expr_assign.F90, Line = 64 \n  A loop starting at line 64 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41812365408986807
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017493177205324173,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_eqv_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_eqv_expr_assign.F90/atomic_capture_x_eqv_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 93 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 93 \n  A loop starting at line 93 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_eqv_expr_assign.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41685274010524154
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0174102783203125,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_minus_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_minus_expr_assign.F90/atomic_capture_x_minus_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 91 \n   A loop nest at line 91 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 93 \n  A loop starting at line 93 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 98 \n  A loop starting at line 98 was interchanged with the loop starting at line 99.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 98 \n  A loop starting at line 98 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 98 \n  A loop starting at line 98 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 110 \n  A loop starting at line 110 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 113, Column = 46 \n  Procedure \"IS_POSSIBLE\" is defined at line 37 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 119 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 148 \n  A loop starting at line 148 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 175 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4675707509741187
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_minus_expr_assign.F90/atomic_capture_x_minus_expr_assign.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE_2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 48 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 57 \n  A loop starting at line 57 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_minus_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 166 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4187951497733593
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017234507016837597,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_neqv_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_neqv_expr_assign.F90/atomic_capture_x_neqv_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 58 \n  A loop starting at line 58 was interchanged with the loop starting at line 59.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 58 \n  A loop starting at line 58 was fused with the loop starting at line 57.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 57.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 68 \n  A loop starting at line 68 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 69 \n  A loop starting at line 69 was fused with the loop starting at line 68.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 74 \n  A loop starting at line 74 was interchanged with the loop starting at line 75.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 74 \n  A loop starting at line 74 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 74 \n  A loop starting at line 74 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 85 \n  A loop starting at line 85 was interchanged with the loop starting at line 86.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 74.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 99 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_neqv_expr_assign.F90, Line = 127 \n  A loop starting at line 127 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 154 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41664107190445065
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017004563007503748,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_or_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_or_expr_assign.F90/atomic_capture_x_or_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 58 \n   A loop nest at line 58 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was interchanged with the loop starting at line 60.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 58.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 69 \n  A loop starting at line 69 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 70 \n  A loop starting at line 70 was fused with the loop starting at line 69.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was interchanged with the loop starting at line 87.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 75.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 87 \n  A loop starting at line 87 was fused with the loop starting at line 76.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 100 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 100 \n  A loop starting at line 100 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_or_expr_assign.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4164217780344188
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017208315897732973,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_plus_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_plus_expr_assign.F90/atomic_capture_x_plus_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_plus_expr_assign.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4161438513547182
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016859492752701044,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_capture_x_times_expr_assign.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_capture_x_times_expr_assign.F90/atomic_capture_x_times_expr_assign.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 19 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6230 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 24 \n  A loop starting at line 24 was replaced with multiple library calls.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 57 \n   A loop nest at line 57 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 59 \n  A loop starting at line 59 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 59.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was interchanged with the loop starting at line 66.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was interchanged with the loop starting at line 76.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 75 \n  A loop starting at line 75 was fused with the loop starting at line 65.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 66.\n\n\nftn-3182 ftn: IPA TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 89 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 89 \n  A loop starting at line 89 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_capture_x_times_expr_assign.F90, Line = 118 \n  A loop starting at line 118 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0052 seconds\nCray Fortran : 145 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41689005214720964
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.017111098859459162,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_and_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_and_x.F90/atomic_expr_and_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36663608625531197
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016816982068121433,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_and_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_and_x_end.F90/atomic_expr_and_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_and_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664541863836348
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016862799879163504,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_divided_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_divided_x.F90/atomic_expr_divided_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 74, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0050 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663584911264479
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_divided_x.F90/atomic_expr_divided_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:15:26\nCray Fortran : Compile time:  0.0491 seconds\nCray Fortran : 116 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3685555486008525
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01699292380362749,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_divided_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_divided_x_end.F90/atomic_expr_divided_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 72 \n  A loop starting at line 72 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 75, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0050 seconds\nCray Fortran : 126 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.4160312581807375
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_divided_x_end.F90/atomic_expr_divided_x_end.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_divided_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:15:37\nCray Fortran : Compile time:  0.0490 seconds\nCray Fortran : 117 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3682045331224799
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017294425051659346,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_eqv_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_eqv_x.F90/atomic_expr_eqv_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36661879112944007
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01682770485058427,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_eqv_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_eqv_x_end.F90/atomic_expr_eqv_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_eqv_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662011451087892
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017152050975710154,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_minus_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_minus_x.F90/atomic_expr_minus_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 70 \n  A loop starting at line 70 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 73, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 97 \n  A loop starting at line 97 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0050 seconds\nCray Fortran : 124 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36625161301344633
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_minus_x.F90/atomic_expr_minus_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:15:49\nCray Fortran : Compile time:  0.0485 seconds\nCray Fortran : 115 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3711926778778434
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01755961775779724,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_minus_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_minus_x_end.F90/atomic_expr_minus_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 74, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0050 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.37797821313142776
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_minus_x_end.F90/atomic_expr_minus_x_end.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_minus_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:16:00\nCray Fortran : Compile time:  0.0485 seconds\nCray Fortran : 116 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.368353558704257
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017048742156475782,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_neqv_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_neqv_x.F90/atomic_expr_neqv_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_neqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-303 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_neqv_x.F90, Line = 52, Column = 36 \n  Data type LOGICAL is not allowed with LOGICAL for the operation \"ne\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 104 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16625891020521522
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_neqv_x.F90/atomic_expr_neqv_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_neqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31517850002273917
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01681599160656333,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_neqv_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_neqv_x_end.F90/atomic_expr_neqv_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_neqv_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-303 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_neqv_x_end.F90, Line = 53, Column = 36 \n  Data type LOGICAL is not allowed with LOGICAL for the operation \"ne\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 105 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16603757441043854
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_neqv_x_end.F90/atomic_expr_neqv_x_end.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_neqv_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32843323005363345
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017160276882350445,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_or_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_or_x.F90/atomic_expr_or_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663793592713773
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.032901213970035315,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_or_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_or_x_end.F90/atomic_expr_or_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_or_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3658267632126808
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017478010151535273,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_plus_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_plus_x.F90/atomic_expr_plus_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36629310296848416
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01701221102848649,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_plus_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_plus_x_end.F90/atomic_expr_plus_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_plus_x_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36626729369163513
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017006078269332647,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_times_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_times_x.F90/atomic_expr_times_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36670922627672553
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01727920724079013,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_expr_times_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_expr_times_x_end.F90/atomic_expr_times_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_expr_times_x_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665379052981734
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01690311962738633,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_iand_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_iand_expr_x.F90/atomic_iand_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666404141113162
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017458682414144278,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_iand_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_iand_expr_x_end.F90/atomic_iand_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_expr_x_end.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661598158068955
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01717919297516346,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_iand_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_iand_x_expr.F90/atomic_iand_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661793228238821
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016952766105532646,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_iand_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_iand_x_expr_end.F90/atomic_iand_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_iand_x_expr_end.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36619259789586067
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017349412199109793,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ior_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ior_expr_x.F90/atomic_ior_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664364297874272
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016913088969886303,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ior_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ior_expr_x_end.F90/atomic_ior_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_expr_x_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32823569886386395
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016789300832897425,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ior_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ior_x_expr.F90/atomic_ior_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659043633379042
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017434004228562117,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ior_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ior_x_expr_end.F90/atomic_ior_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ior_x_expr_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664917149581015
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016941294074058533,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ixor_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ixor_expr_x.F90/atomic_ixor_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664170620031655
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017152731772512197,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ixor_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ixor_expr_x_end.F90/atomic_ixor_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_expr_x_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3667350970208645
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01689441315829754,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ixor_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ixor_x_expr.F90/atomic_ixor_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3669386929832399
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01698808278888464,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_ixor_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_ixor_x_expr_end.F90/atomic_ixor_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_ixor_x_expr_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3668218366801739
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01691432110965252,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_expr_list_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_expr_list_x.F90/atomic_max_expr_list_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36624138709157705
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017141649033874273,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_expr_list_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_expr_list_x_end.F90/atomic_max_expr_list_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_list_x_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36608150880783796
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01698207063600421,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_expr_x.F90/atomic_max_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36698284931480885
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01721437880769372,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_expr_x_end.F90/atomic_max_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_expr_x_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366693910676986
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017157218884676695,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_x_expr.F90/atomic_max_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661196529865265
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017022680025547743,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_x_expr_end.F90/atomic_max_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36679224111139774
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017211664002388716,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_x_expr_list.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_x_expr_list.F90/atomic_max_x_expr_list.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661022880114615
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017253014259040356,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_max_x_expr_list_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_max_x_expr_list_end.F90/atomic_max_x_expr_list_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_max_x_expr_list_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659577798098326
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01725171133875847,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_expr_list_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_expr_list_x.F90/atomic_min_expr_list_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659876170568168
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01728360401466489,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_expr_list_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_expr_list_x_end.F90/atomic_min_expr_list_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_list_x_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36631797486916184
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017071503214538097,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_expr_x.F90/atomic_min_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36694229021668434
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016826049890369177,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_expr_x_end.F90/atomic_min_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_expr_x_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660667701624334
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01703440211713314,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_x_expr.F90/atomic_min_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664724030531943
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01707645272836089,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_x_expr_end.F90/atomic_min_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664557309821248
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017236853018403053,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_x_expr_list.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_x_expr_list.F90/atomic_min_x_expr_list.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.5668689152225852
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016825919970870018,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_min_x_expr_list_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_min_x_expr_list_end.F90/atomic_min_x_expr_list_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_min_x_expr_list_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31606605323031545
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016741407103836536,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_and_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_and_x.F90/atomic_update_expr_and_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36677613900974393
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01713172998279333,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_and_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_and_x_end.F90/atomic_update_expr_and_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_and_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36619927594438195
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017034772783517838,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_divided_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_divided_x.F90/atomic_update_expr_divided_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 74, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0049 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.416237146127969
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_divided_x.F90/atomic_update_expr_divided_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:16:27\nCray Fortran : Compile time:  0.0491 seconds\nCray Fortran : 116 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3688192842528224
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017096031922847033,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_divided_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_divided_x_end.F90/atomic_update_expr_divided_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 72 \n  A loop starting at line 72 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 75, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0049 seconds\nCray Fortran : 126 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660434549674392
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_divided_x_end.F90/atomic_update_expr_divided_x_end.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_divided_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:16:37\nCray Fortran : Compile time:  0.0492 seconds\nCray Fortran : 117 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.368196542840451
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016936765052378178,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_eqv_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_eqv_x.F90/atomic_update_expr_eqv_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663869919255376
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017129336018115282,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_eqv_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_eqv_x_end.F90/atomic_update_expr_eqv_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_eqv_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36643485398963094
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016802054829895496,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_minus_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_minus_x.F90/atomic_update_expr_minus_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 70 \n  A loop starting at line 70 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 73, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 97 \n  A loop starting at line 97 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0049 seconds\nCray Fortran : 124 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36673552403226495
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_minus_x.F90/atomic_update_expr_minus_x.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:16:49\nCray Fortran : Compile time:  0.0486 seconds\nCray Fortran : 115 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36794244311749935
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016968465875834227,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_minus_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_minus_x_end.F90/atomic_update_expr_minus_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 53 \n   A loop nest at line 53 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 55 \n  A loop starting at line 55 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 60 \n  A loop starting at line 60 was interchanged with the loop starting at line 61.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\n\nftn-1279 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 74, Column = 50 \n  Procedure \"IS_POSSIBLE\" is defined at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90).  The type of this argument does not agree with dummy argument \"INIT\".\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0050 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664684290997684
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "Failed to complete within timeout",
                    "export": false,
                    "output": "",
                    "result": -1,
                    "runtime": -1,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_minus_x_end.F90/atomic_update_expr_minus_x_end.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-7212 ftn: WARNING IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 12 \n  Variable \"precision\" is used before it is defined.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR IS_POSSIBLE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_minus_x_end.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:17:00\nCray Fortran : Compile time:  0.0484 seconds\nCray Fortran : 116 source lines\nCray Fortran : 0 errors, 2 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3678719769231975
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017120770178735256,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_neqv_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_neqv_x.F90/atomic_update_expr_neqv_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661084729246795
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01692319894209504,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_neqv_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_neqv_x_end.F90/atomic_update_expr_neqv_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_neqv_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666708189994097
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016860328149050474,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_or_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_or_x.F90/atomic_update_expr_or_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664727061986923
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01719144731760025,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_or_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_or_x_end.F90/atomic_update_expr_or_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_or_x_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36611683014780283
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017358920071274042,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_plus_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_plus_x.F90/atomic_update_expr_plus_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665686617605388
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017023281659930944,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_plus_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_plus_x_end.F90/atomic_update_expr_plus_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_plus_x_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36672218795865774
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06542612100020051,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_times_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_times_x.F90/atomic_update_expr_times_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662561089731753
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017266089096665382,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_expr_times_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_expr_times_x_end.F90/atomic_update_expr_times_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_expr_times_x_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3167037609964609
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017253626603633165,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_iand_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_iand_expr_x.F90/atomic_update_iand_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36629293905571103
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017252094112336636,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_iand_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_iand_expr_x_end.F90/atomic_update_iand_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_expr_x_end.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662167531438172
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017249296884983778,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_iand_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_iand_x_expr.F90/atomic_update_iand_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36651952704414725
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016906296368688345,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_iand_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_iand_x_expr_end.F90/atomic_update_iand_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 31 \n  A loop starting at line 31 was vectorized as part of the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 40.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_iand_x_expr_end.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3298351331613958
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017055032774806023,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ior_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ior_expr_x.F90/atomic_update_ior_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665125831030309
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016887289006263018,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ior_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ior_expr_x_end.F90/atomic_update_ior_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_expr_x_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660667329095304
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016878922935575247,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ior_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ior_x_expr.F90/atomic_update_ior_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.61748765129596
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017263976857066154,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ior_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ior_x_expr_end.F90/atomic_update_ior_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ior_x_expr_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36643350077793
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016896206885576248,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ixor_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ixor_expr_x.F90/atomic_update_ixor_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36634053103625774
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016862360760569572,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ixor_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ixor_expr_x_end.F90/atomic_update_ixor_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_expr_x_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663938748650253
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017190535087138414,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ixor_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ixor_x_expr.F90/atomic_update_ixor_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36591659393161535
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01735071325674653,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_ixor_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_ixor_x_expr_end.F90/atomic_update_ixor_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced by a library call.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 28.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 38.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_ixor_x_expr_end.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.365755352191627
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01695409882813692,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_expr_list_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_expr_list_x.F90/atomic_update_max_expr_list_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660760410130024
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01731616724282503,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_expr_list_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_expr_list_x_end.F90/atomic_update_max_expr_list_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_list_x_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36607551109045744
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017101782374083996,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_expr_x.F90/atomic_update_max_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3657712829299271
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01705918088555336,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_expr_x_end.F90/atomic_update_max_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_expr_x_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36606400879099965
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017180725932121277,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_x_expr.F90/atomic_update_max_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366136257071048
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0169927217066288,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_x_expr_end.F90/atomic_update_max_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36614088574424386
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017115531023591757,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_x_expr_list.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_x_expr_list.F90/atomic_update_max_x_expr_list.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32773807598277926
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017417232040315866,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_max_x_expr_list_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_max_x_expr_list_end.F90/atomic_update_max_x_expr_list_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_max_x_expr_list_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3296570391394198
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017272002063691616,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_expr_list_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_expr_list_x.F90/atomic_update_min_expr_list_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3165099280886352
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01687309192493558,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_expr_list_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_expr_list_x_end.F90/atomic_update_min_expr_list_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_list_x_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31613420182839036
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017541140783578157,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_expr_x.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_expr_x.F90/atomic_update_min_expr_x.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31631915923208
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01703370315954089,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_expr_x_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_expr_x_end.F90/atomic_update_min_expr_x_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_expr_x_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31606104178354144
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.03290803590789437,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_x_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_x_expr.F90/atomic_update_min_x_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36628606589511037
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017125379294157028,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_x_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_x_expr_end.F90/atomic_update_min_x_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_end.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 26.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_end.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3267390071414411
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017156939953565598,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_x_expr_list.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_x_expr_list.F90/atomic_update_min_x_expr_list.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660473357886076
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16561901476234198,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_min_x_expr_list_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_min_x_expr_list_end.F90/atomic_update_min_x_expr_list_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list_end.F90, Line = 21 \n  A loop starting at line 21 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list_end.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list_end.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_min_x_expr_list_end.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366944408044219
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017290156334638596,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_and_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_and_expr.F90/atomic_update_x_and_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663726127706468
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016932747326791286,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_and_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_and_expr_end.F90/atomic_update_x_and_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_and_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36643318086862564
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017289425246417522,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_divided_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_divided_expr.F90/atomic_update_x_divided_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662052811123431
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017261240631341934,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_divided_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_divided_expr_end.F90/atomic_update_x_divided_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_divided_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3669938622042537
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017357947770506144,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_eqv_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_eqv_expr.F90/atomic_update_x_eqv_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36614468414336443
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017169523984193802,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_eqv_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_eqv_expr_end.F90/atomic_update_x_eqv_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_eqv_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659463501535356
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017203359864652157,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_minus_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_minus_expr.F90/atomic_update_x_minus_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36578028090298176
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017670961562544107,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_minus_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_minus_expr_end.F90/atomic_update_x_minus_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_minus_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36665788386017084
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017077325843274593,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_neqv_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_neqv_expr.F90/atomic_update_x_neqv_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36602806905284524
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01703267963603139,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_neqv_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_neqv_expr_end.F90/atomic_update_x_neqv_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_neqv_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36622831504791975
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016878902912139893,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_or_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_or_expr.F90/atomic_update_x_or_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3657287508249283
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017578403931111097,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_or_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_or_expr_end.F90/atomic_update_x_or_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_or_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36593022011220455
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016924592200666666,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_plus_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_plus_expr.F90/atomic_update_x_plus_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.7819392932578921
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01720364997163415,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_plus_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_plus_expr_end.F90/atomic_update_x_plus_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_plus_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36728391284123063
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01734918076545,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_times_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_times_expr.F90/atomic_update_x_times_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36589040281251073
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017189172096550465,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_update_x_times_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_update_x_times_expr_end.F90/atomic_update_x_times_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_update_x_times_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36617578379809856
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017436078749597073,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_and_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_and_expr.F90/atomic_x_and_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36610793275758624
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01696942700073123,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_and_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_and_expr_end.F90/atomic_x_and_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_and_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662919271737337
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017078959848731756,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_divided_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_divided_expr.F90/atomic_x_divided_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659417028538883
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017555369064211845,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_divided_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_divided_expr_end.F90/atomic_x_divided_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_divided_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665880188345909
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017056654673069715,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_eqv_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_eqv_expr.F90/atomic_x_eqv_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662045691162348
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.16558798495680094,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_eqv_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_eqv_expr_end.F90/atomic_x_eqv_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_eqv_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664425481110811
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017028681933879852,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_minus_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_minus_expr.F90/atomic_x_minus_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662597741931677
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017048157285898924,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_minus_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_minus_expr_end.F90/atomic_x_minus_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_minus_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36623695539310575
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016984513960778713,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_neqv_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_neqv_expr.F90/atomic_x_neqv_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664471907541156
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017493367195129395,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_neqv_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_neqv_expr_end.F90/atomic_x_neqv_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_neqv_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36650321865454316
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017095718998461962,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_or_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_or_expr.F90/atomic_x_or_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 45 \n  A loop starting at line 45 was interchanged with the loop starting at line 46.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.5666469042189419
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01728800917044282,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_or_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_or_expr_end.F90/atomic_x_or_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 20 \n  A loop starting at line 20 was interchanged with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 30 \n  A loop starting at line 30 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 30.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 36 \n  A loop starting at line 36 was interchanged with the loop starting at line 37.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 46 \n  A loop starting at line 46 was interchanged with the loop starting at line 47.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 47 \n  A loop starting at line 47 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_or_expr_end.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36635107500478625
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01716607389971614,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_plus_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_plus_expr.F90/atomic_x_plus_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3668769202195108
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016946270130574703,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_plus_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_plus_expr_end.F90/atomic_x_plus_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_plus_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3673175210133195
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017170002218335867,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_times_expr.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_times_expr.F90/atomic_x_times_expr.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 34 \n  A loop starting at line 34 was interchanged with the loop starting at line 35.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662148732692003
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017474920954555273,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "atomic_x_times_expr_end.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/atomic_x_times_expr_end.F90/atomic_x_times_expr_end.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6230 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 20 \n  A loop starting at line 20 was replaced with multiple library calls.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 26 \n  A loop starting at line 26 was interchanged with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 26 \n  A loop starting at line 26 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 35 \n  A loop starting at line 35 was interchanged with the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/atomic_x_times_expr_end.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3162677423097193
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017177277244627476,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_copy_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_copy_no_lower_bound.F90/data_copy_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copy_no_lower_bound.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665007338859141
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01742312079295516,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_copyin_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_copyin_no_lower_bound.F90/data_copyin_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyin_no_lower_bound.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36614636005833745
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.03315969603136182,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_copyout_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_copyout_no_lower_bound.F90/data_copyout_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_no_lower_bound.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3162159021012485
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017501543276011944,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_copyout_reference_counts.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_copyout_reference_counts.F90/data_copyout_reference_counts.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 32 \n  A loop starting at line 32 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 39 \n  A loop starting at line 39 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 77.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 79 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 78.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 91 \n  A loop starting at line 91 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 138 \n  A loop starting at line 138 was fused with the loop starting at line 136.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 138 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 144 \n  A loop starting at line 144 was fused with the loop starting at line 137.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 183 \n  A loop starting at line 183 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 192 \n  A loop starting at line 192 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_copyout_reference_counts.F90, Line = 201 \n  A loop starting at line 201 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0068 seconds\nCray Fortran : 246 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661727919243276
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01688658492639661,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_create.F90/data_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 124 \n  A loop starting at line 124 was fused with the loop starting at line 123.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 125 \n  A loop starting at line 125 was fused with the loop starting at line 123.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 131 \n  A loop starting at line 131 was fused with the loop starting at line 123.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 139 \n  A loop starting at line 139 was fused with the loop starting at line 123.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 178 \n  A loop starting at line 178 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 187 \n  A loop starting at line 187 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create.F90, Line = 196 \n  A loop starting at line 196 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0067 seconds\nCray Fortran : 241 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3657561759464443
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06513565825298429,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_create_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_create_no_lower_bound.F90/data_create_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 20 \n  A loop starting at line 20 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 20 \n  A loop starting at line 20 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_create_no_lower_bound.F90, Line = 60 \n  A loop starting at line 60 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 87 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36589041631668806
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017022659070789814,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_present_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_present_no_lower_bound.F90/data_present_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_present_no_lower_bound.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36615935526788235
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.03336570365354419,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_with_changing_subscript.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_with_changing_subscript.F90/data_with_changing_subscript.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_changing_subscript.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659724439494312
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0169981406070292,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "data_with_derived_type.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/data_with_derived_type.F90/data_with_derived_type.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_derived_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_derived_type.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_derived_type.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 22.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/data_with_derived_type.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3163821529597044
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01706887688487768,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_copyin.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin.F90/declare_copyin.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 2, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 3, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0032 seconds\nCray Fortran : 246 source lines\nCray Fortran : 1 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.11597979860380292
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin.F90/declare_copyin.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 2, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 3, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-292 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 15, Column = 7 \n  \"DECLARE_COPYIN_MOD\" is specified as the module name on a USE statement, but the compiler cannot find it.\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 36, Column = 23 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"FIXED_SIZE_ARRAY\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0274 seconds\nCray Fortran : 255 source lines\nCray Fortran : 3 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.17760902689769864
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin.F90/declare_copyin.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 2, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 3, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-292 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 58, Column = 7 \n  \"DECLARE_COPYIN_MOD\" is specified as the module name on a USE statement, but the compiler cannot find it.\n\n\nftn-113 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 77, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 78, Column = 11 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 78, Column = 18 \n  A subscript must be a scalar integer expression.\n\n\nftn-113 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 78, Column = 23 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SCALAR\".\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 84, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 84, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 255 source lines\nCray Fortran : 8 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1293774195946753
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin.F90/declare_copyin.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 2, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 3, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-292 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 100, Column = 7 \n  \"DECLARE_COPYIN_MOD\" is specified as the module name on a USE statement, but the compiler cannot find it.\n\n\nftn-113 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 119, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-319 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 126, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 126, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 255 source lines\nCray Fortran : 5 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12779591837897897
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin.F90/declare_copyin.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 2, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 3, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-292 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 142, Column = 7 \n  \"DECLARE_COPYIN_MOD\" is specified as the module name on a USE statement, but the compiler cannot find it.\n\n\nftn-113 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 161, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-1293 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 162, Column = 9 \n  Program unit \"MULTIPLYDATA\" is defined as a FUNCTION at line 2 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-319 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 168, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 168, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0073 seconds\nCray Fortran : 255 source lines\nCray Fortran : 6 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.127451763022691
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT4 -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin.F90/declare_copyin.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 2, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin.F90, Line = 3, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0030 seconds\nCray Fortran : 246 source lines\nCray Fortran : 1 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12767146714031696
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_copyin_mod.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_copyin_mod.F90/declare_copyin_mod.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_copyin_mod.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /usr/lib64//crt1.o: in function `_start':\n/home/abuild/rpmbuild/BUILD/glibc-2.31/csu/../sysdeps/x86_64/start.S:104: undefined reference to `main'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3162629622966051
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_create.F90/declare_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 6, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 7, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-1569 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 9, Column = 6 \n  A DO loop variable or expression of type default real or double precision real is a deleted feature of the Fortran standard.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 7 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 14 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0033 seconds\nCray Fortran : 251 source lines\nCray Fortran : 3 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16622405219823122
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_create.F90/declare_create.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 6, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 7, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-1569 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 9, Column = 6 \n  A DO loop variable or expression of type default real or double precision real is a deleted feature of the Fortran standard.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 7 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 14 \n  A subscript must be a scalar integer expression.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 36, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-232 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 37, Column = 9 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for function \"FIXED_SIZE_ARRAY\".\n\n\nftn-724 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 37, Column = 25 \n  Unknown statement.  Expected assignment statement but found \"(\" instead of \"=\" or \"=>\".\n\n\nftn-319 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 43, Column = 11 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 43, Column = 18 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 49, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 49, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 260 source lines\nCray Fortran : 10 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1657414911314845
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_create.F90/declare_create.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 6, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 7, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-1569 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 9, Column = 6 \n  A DO loop variable or expression of type default real or double precision real is a deleted feature of the Fortran standard.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 7 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 14 \n  A subscript must be a scalar integer expression.\n\n\nftn-113 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 79, Column = 3 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SCALAR\".\n\n\nftn-113 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 84, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 85, Column = 11 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 85, Column = 18 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 91, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 91, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0059 seconds\nCray Fortran : 260 source lines\nCray Fortran : 9 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16494648670777678
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_create.F90/declare_create.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 6, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 7, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-1569 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 9, Column = 6 \n  A DO loop variable or expression of type default real or double precision real is a deleted feature of the Fortran standard.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 7 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 14 \n  A subscript must be a scalar integer expression.\n\n\nftn-113 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 125, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-319 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 132, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 132, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0060 seconds\nCray Fortran : 260 source lines\nCray Fortran : 6 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1653853845782578
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_create.F90/declare_create.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 6, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 7, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-1569 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 9, Column = 6 \n  A DO loop variable or expression of type default real or double precision real is a deleted feature of the Fortran standard.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 7 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 14 \n  A subscript must be a scalar integer expression.\n\n\nftn-113 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 166, Column = 10 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"X\".\n\n\nftn-1293 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 167, Column = 9 \n  Program unit \"MULTIPLYDATA\" is defined as a FUNCTION at line 6 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-319 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 173, Column = 15 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 173, Column = 23 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0058 seconds\nCray Fortran : 260 source lines\nCray Fortran : 7 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16512297792360187
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT4 -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_create.F90/declare_create.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 6, Column = 10 \n  The result of function name \"MULTIPLYDATA\" in the function subprogram is not defined.\n\n\nftn-521 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 7, Column = 21 \n  Object \"LOOPCOUNT\", used in a bounds expression must be a constant, a dummy argument, a common block member or use or host associated.\n\n\nftn-1569 ftn: WARNING MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 9, Column = 6 \n  A DO loop variable or expression of type default real or double precision real is a deleted feature of the Fortran standard.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 7 \n  A subscript must be a scalar integer expression.\n\n\nftn-319 ftn: ERROR MULTIPLYDATA, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_create.F90, Line = 10, Column = 14 \n  A subscript must be a scalar integer expression.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0030 seconds\nCray Fortran : 251 source lines\nCray Fortran : 3 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16551479417830706
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_function_scope_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copy.F90/declare_function_scope_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 1, Column = 10 \n  The result of function name \"COPYIN_COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-6005 ftn: SCALAR COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 9 \n  A loop starting at line 9 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 9 \n  A loop starting at line 9 was vectorized.\n\n\nftn-7212 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 13 \n  Variable \"copyin_copyout_test\" is used before it is defined.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:17:35\nCray Fortran : Compile time:  0.0213 seconds\nCray Fortran : 289 source lines\nCray Fortran : 0 errors, 3 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.316575616132468
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017065722029656172,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copy.F90/declare_function_scope_copy.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 1, Column = 10 \n  The result of function name \"COPYIN_COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 44, Column = 7 \n  Program unit \"COPYIN_COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0065 seconds\nCray Fortran : 298 source lines\nCray Fortran : 1 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16543533001095057
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copy.F90/declare_function_scope_copy.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 1, Column = 10 \n  The result of function name \"COPYIN_COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 93, Column = 9 \n  Program unit \"COPYIN_COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 298 source lines\nCray Fortran : 1 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16511943098157644
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copy.F90/declare_function_scope_copy.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 1, Column = 10 \n  The result of function name \"COPYIN_COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 145, Column = 11 \n  Program unit \"COPYIN_COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 298 source lines\nCray Fortran : 1 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16557412780821323
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copy.F90/declare_function_scope_copy.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 1, Column = 10 \n  The result of function name \"COPYIN_COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 200, Column = 11 \n  Program unit \"COPYIN_COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 298 source lines\nCray Fortran : 1 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16500557120889425
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copy.F90/declare_function_scope_copy.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 1, Column = 10 \n  The result of function name \"COPYIN_COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-6005 ftn: SCALAR COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 9 \n  A loop starting at line 9 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 9 \n  A loop starting at line 9 was vectorized.\n\n\nftn-7212 ftn: WARNING COPYIN_COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copy.F90, Line = 13 \n  Variable \"copyin_copyout_test\" is used before it is defined.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Sun Sep 03, 2023  20:17:36\nCray Fortran : Compile time:  0.0213 seconds\nCray Fortran : 289 source lines\nCray Fortran : 0 errors, 3 warnings, 2 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3152761082164943
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017137471120804548,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_function_scope_copyin.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 63, Column = 7 \n  Program unit \"FUNCTION_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 116, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0117 seconds\nCray Fortran : 288 source lines\nCray Fortran : 3 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16571709467098117
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 116, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0093 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16490890504792333
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 63, Column = 7 \n  Program unit \"FUNCTION_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1654076357372105
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 116, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16502196295186877
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 63, Column = 7 \n  Program unit \"FUNCTION_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 116, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16504045808687806
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 116, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0093 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16503727296367288
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 63, Column = 7 \n  Program unit \"FUNCTION_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0092 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1654780418612063
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyin.F90/declare_function_scope_copyin.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 1, Column = 10 \n  The result of function name \"FUNCTION_TEST\" in the function subprogram is not defined.\n\n\nftn-287 ftn: WARNING FUNCTION_TEST_DEV_ONLY, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 16, Column = 10 \n  The result of function name \"FUNCTION_TEST_DEV_ONLY\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 116, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90, Line = 178, Column = 9 \n  Program unit \"FUNCTION_TEST_DEV_ONLY\" is defined as a FUNCTION at line 16 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyin.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0093 seconds\nCray Fortran : 279 source lines\nCray Fortran : 2 errors, 3 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1649166801944375
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_function_scope_copyout.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 46, Column = 7 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 96, Column = 9 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0105 seconds\nCray Fortran : 247 source lines\nCray Fortran : 3 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16589675098657608
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 96, Column = 9 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16488984739407897
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 46, Column = 7 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16514743538573384
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 96, Column = 9 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0088 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12671887874603271
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 46, Column = 7 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 96, Column = 9 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16511279810220003
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 96, Column = 9 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16505214059725404
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 46, Column = 7 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16502609988674521
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_copyout.F90/declare_function_scope_copyout.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-287 ftn: WARNING COPYOUT_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 1, Column = 10 \n  The result of function name \"COPYOUT_TEST\" in the function subprogram is not defined.\n\n\nftn-1293 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 96, Column = 9 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\n\nftn-1293 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90, Line = 148, Column = 11 \n  Program unit \"COPYOUT_TEST\" is defined as a FUNCTION at line 1 (/autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_copyout.F90), but is defined or referenced as a SUBROUTINE here.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0085 seconds\nCray Fortran : 238 source lines\nCray Fortran : 2 errors, 2 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16489571891725063
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_function_scope_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 48 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0120 seconds\nCray Fortran : 276 source lines\nCray Fortran : 2 errors, 13 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.17829493572935462
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 48 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0096 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12870276812464
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0096 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12767026526853442
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 48 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0096 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.127140071708709
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 48 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0096 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1242256578989327
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 48 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0096 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12724012602120638
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 70, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0095 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16494380123913288
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_create.F90/declare_function_scope_create.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR CREATE_TEST, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_TEST\".\n\n\nftn-283 ftn: ERROR CREATE_AS_PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 37, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"CREATE_AS_PRESENT\".\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 120, Column = 48 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 46 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_create.F90, Line = 174, Column = 52 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0097 seconds\nCray Fortran : 267 source lines\nCray Fortran : 2 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16520193126052618
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "declare_function_scope_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_present.F90/declare_function_scope_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"PRESENT\".\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 22 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 28 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0091 seconds\nCray Fortran : 188 source lines\nCray Fortran : 1 errors, 9 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16600742377340794
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_present.F90/declare_function_scope_present.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"PRESENT\".\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 179 source lines\nCray Fortran : 1 errors, 5 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16492000734433532
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_present.F90/declare_function_scope_present.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"PRESENT\".\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 22 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 28 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 34 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 52, Column = 40 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 179 source lines\nCray Fortran : 1 errors, 5 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12995099602267146
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/declare_function_scope_present.F90/declare_function_scope_present.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-283 ftn: ERROR PRESENT, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 18, Column = 14 \n  The name specified on the END FUNCTION statement must match the FUNCTION name \"PRESENT\".\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 24 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 30 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 36 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/declare_function_scope_present.F90, Line = 107, Column = 42 \n  The number of subscripts is smaller than the number of declared dimensions.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0062 seconds\nCray Fortran : 179 source lines\nCray Fortran : 1 errors, 5 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.12847422622144222
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "enter_data_copyin_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_copyin_no_lower_bound.F90/enter_data_copyin_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_copyin_no_lower_bound.F90, Line = 57 \n  A loop starting at line 57 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0038 seconds\nCray Fortran : 84 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31601855996996164
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016823966056108475,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "enter_data_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_create.F90/enter_data_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 70.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 123 \n  A loop starting at line 123 was fused with the loop starting at line 122.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 124 \n  A loop starting at line 124 was fused with the loop starting at line 122.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 130 \n  A loop starting at line 130 was fused with the loop starting at line 122.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 138 \n  A loop starting at line 138 was fused with the loop starting at line 122.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 177 \n  A loop starting at line 177 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 186 \n  A loop starting at line 186 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create.F90, Line = 195 \n  A loop starting at line 195 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0067 seconds\nCray Fortran : 240 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366128358989954
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017475091852247715,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "enter_data_create_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_create_no_lower_bound.F90/enter_data_create_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 20 \n  A loop starting at line 20 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 20 \n  A loop starting at line 20 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_create_no_lower_bound.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36656381795182824
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01705686515197158,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "enter_data_if.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3173395600169897
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01742403395473957,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 27 \n  A loop starting at line 27 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 27.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 305 \n  A loop starting at line 305 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 368 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36657115211710334
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01710361521691084,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 79 \n  A loop starting at line 79 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 79 \n  A loop starting at line 79 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 78.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 93 \n  A loop starting at line 93 was fused with the loop starting at line 79.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 314 \n  A loop starting at line 314 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 368 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155196378938854
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016787005122750998,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 146 \n  A loop starting at line 146 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 153 \n  A loop starting at line 153 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 323 \n  A loop starting at line 323 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 368 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3151248162612319
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016852601431310177,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT5 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 206 \n  A loop starting at line 206 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 213 \n  A loop starting at line 213 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 332 \n  A loop starting at line 332 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 368 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3153986749239266
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017268592957407236,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 261 \n  A loop starting at line 261 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 267 \n  A loop starting at line 267 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 341 \n  A loop starting at line 341 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 368 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3152431547641754
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01695392606779933,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/enter_data_if.F90/enter_data_if.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 27 \n  A loop starting at line 27 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 27.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 79 \n  A loop starting at line 79 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 79 \n  A loop starting at line 79 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 78.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 86 \n  A loop starting at line 86 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 93 \n  A loop starting at line 93 was fused with the loop starting at line 79.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 146 \n  A loop starting at line 146 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 153 \n  A loop starting at line 153 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 206 \n  A loop starting at line 206 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 213 \n  A loop starting at line 213 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 261 \n  A loop starting at line 261 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST5, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 267 \n  A loop starting at line 267 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 305 \n  A loop starting at line 305 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 314 \n  A loop starting at line 314 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 323 \n  A loop starting at line 323 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 332 \n  A loop starting at line 332 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/enter_data_if.F90, Line = 341 \n  A loop starting at line 341 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0097 seconds\nCray Fortran : 404 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3651061556302011
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016907506622374058,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/exit_data.F90/exit_data.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 30 \n  A loop starting at line 30 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 36 \n  A loop starting at line 36 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 73 \n  A loop starting at line 73 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 72.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 111 \n  A loop starting at line 111 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 156 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662989567965269
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01710333488881588,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data_copyout_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/exit_data_copyout_no_lower_bound.F90/exit_data_copyout_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_no_lower_bound.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36609941301867366
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01707898685708642,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data_copyout_reference_counts.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/exit_data_copyout_reference_counts.F90/exit_data_copyout_reference_counts.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 33 \n  A loop starting at line 33 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 40 \n  A loop starting at line 40 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 80 \n  A loop starting at line 80 was fused with the loop starting at line 78.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 80 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 79.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 131 \n  A loop starting at line 131 was fused with the loop starting at line 129.\n\n\nftn-6231 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 131 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 137 \n  A loop starting at line 137 was fused with the loop starting at line 130.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 176 \n  A loop starting at line 176 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 185 \n  A loop starting at line 185 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_copyout_reference_counts.F90, Line = 194 \n  A loop starting at line 194 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0067 seconds\nCray Fortran : 239 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36615153308957815
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017346374224871397,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data_delete_no_lower_bound.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/exit_data_delete_no_lower_bound.F90/exit_data_delete_no_lower_bound.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 83 \n  A loop starting at line 83 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 90 \n  A loop starting at line 90 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_delete_no_lower_bound.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 164 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3668619329109788
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016927594784647226,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "exit_data_finalize.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/exit_data_finalize.F90/exit_data_finalize.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 38 \n  A loop starting at line 38 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 25.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 82 \n  A loop starting at line 82 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 82 \n  A loop starting at line 82 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 81.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 88 \n  A loop starting at line 88 was fused with the loop starting at line 82.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 93 \n  A loop starting at line 93 was fused with the loop starting at line 82.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 121 \n  A loop starting at line 121 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/exit_data_finalize.F90, Line = 130 \n  A loop starting at line 130 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 166 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36676465487107635
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017180352937430143,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init.F90/init.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init.F90, Line = 30 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init.F90, Line = 30 \n  A loop starting at line 30 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init.F90, Line = 31 \n  Leaf \"test1\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17328/init_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31584141915664077
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init.F90/init.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155098892748356
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01689156610518694,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_device_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_num.F90/init_device_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_num.F90, Line = 33 \n  A loop starting at line 33 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17360/init_device_num_1.o: in function `test1_':\nThe Cpu Module:(.text+0x4): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xc): undefined reference to `acc_get_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17360/init_device_num_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.280772065743804
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_num.F90/init_device_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.27914751088246703
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017016026191413403,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_device_type.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17392/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17392/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17392/init_device_type_1.o:(.data+0x80): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31640569726005197
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17406/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17406/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3158522807061672
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17420/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17420/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.2799667022190988
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17434/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17434/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.279423994012177
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17448/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17448/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154741399921477
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17462/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17462/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154896297492087
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17476/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17476/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31543793017044663
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type.F90/init_device_type.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17490/init_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17490/init_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31534456089138985
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_device_type_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0095 seconds\nCray Fortran : 145 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1656881794333458
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.165270802564919
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16499079298228025
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16520406398922205
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1649998500943184
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16525763738900423
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16530144307762384
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num.F90/init_device_type_num.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16563752014189959
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_device_type_num_nvidia.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num_nvidia.F90/init_device_type_num_nvidia.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num_nvidia.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0052 seconds\nCray Fortran : 61 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16639435198158026
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_num_nvidia.F90/init_device_type_num_nvidia.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_num_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3153976616449654
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016921713948249817,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "init_device_type_nvidia.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_nvidia.F90/init_device_type_nvidia.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_nvidia.F90, Line = 30 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_nvidia.F90, Line = 30 \n  A loop starting at line 30 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA INIT_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_nvidia.F90, Line = 31 \n  Leaf \"test1\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_17623/init_device_type_nvidia_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31644908199086785
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/init_device_type_nvidia.F90/init_device_type_nvidia.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/init_device_type_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31544597540050745
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06553038395941257,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_async.F90/kernels_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 22 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_async.F90, Line = 86 \n  A loop starting at line 86 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 113 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661614009179175
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017309002112597227,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_copy.F90/kernels_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 24.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 26 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 81 \n  A loop starting at line 81 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 87 \n  A loop starting at line 87 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 132 \n  A loop starting at line 132 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 137 \n  A loop starting at line 137 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 141 \n  A loop starting at line 141 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 148 \n  A loop starting at line 148 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 180 \n  A loop starting at line 180 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 189 \n  A loop starting at line 189 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copy.F90, Line = 198 \n  A loop starting at line 198 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0068 seconds\nCray Fortran : 243 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36651425203308463
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01685612741857767,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_copyin.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_copyin.F90/kernels_copyin.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 24.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 76 \n  A loop starting at line 76 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 81 \n  A loop starting at line 81 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 85 \n  A loop starting at line 85 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 91 \n  A loop starting at line 91 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 134 \n  A loop starting at line 134 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 139 \n  A loop starting at line 139 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 171 \n  A loop starting at line 171 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 180 \n  A loop starting at line 180 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyin.F90, Line = 189 \n  A loop starting at line 189 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0068 seconds\nCray Fortran : 234 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662929958663881
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017481434158980846,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_copyout.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_copyout.F90/kernels_copyout.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 24.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 85 \n  A loop starting at line 85 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 114 \n  A loop starting at line 114 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_copyout.F90, Line = 123 \n  A loop starting at line 123 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 159 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36656550131738186
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017257743049412966,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_create.F90/kernels_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 31 \n  A loop starting at line 31 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 36 \n  A loop starting at line 36 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 74 \n  A loop starting at line 74 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 78 \n  A loop starting at line 78 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 73.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 120 \n  A loop starting at line 120 was fused with the loop starting at line 119.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 125 \n  A loop starting at line 125 was fused with the loop starting at line 119.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 129 \n  A loop starting at line 129 was fused with the loop starting at line 119.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 135 \n  A loop starting at line 135 was fused with the loop starting at line 119.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 166 \n  A loop starting at line 166 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 175 \n  A loop starting at line 175 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_create.F90, Line = 184 \n  A loop starting at line 184 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0067 seconds\nCray Fortran : 229 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36652190797030926
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016927824821323156,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_default_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_default_copy.F90/kernels_default_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 24.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 26 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 82 \n  A loop starting at line 82 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 87 \n  A loop starting at line 87 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 93 \n  A loop starting at line 93 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 122 \n  A loop starting at line 122 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_copy.F90, Line = 131 \n  A loop starting at line 131 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 167 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36603852501139045
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017306305933743715,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_default_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_default_present.F90/kernels_default_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_present.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_present.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_present.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_default_present.F90, Line = 53 \n  A loop starting at line 53 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 80 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664615508168936
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017202024813741446,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_if.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_if.F90/kernels_if.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3162346980534494
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01735270582139492,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_if.F90/kernels_if.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 25.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 245 \n  A loop starting at line 245 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 299 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3151885801926255
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01713779103010893,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT3 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_if.F90/kernels_if.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 73 \n  A loop starting at line 73 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 72.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 254 \n  A loop starting at line 254 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 299 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3657169952057302
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01708526024594903,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_if.F90/kernels_if.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 127 \n  A loop starting at line 127 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 133 \n  A loop starting at line 133 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 138 \n  A loop starting at line 138 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 150 \n  A loop starting at line 150 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 263 \n  A loop starting at line 263 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 299 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.315602018032223
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": false,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016889441292732954,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -DT2 -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_if.F90/kernels_if.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-303 ftn: ERROR TEST4, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 188, Column = 24 \n  Data type LOGICAL is not allowed with INTEGER for the operation \"eq\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 299 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1657305806875229
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT4 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_if.F90/kernels_if.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 73 \n  A loop starting at line 73 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 79 \n  A loop starting at line 79 was fused with the loop starting at line 72.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 85 \n  A loop starting at line 85 was fused with the loop starting at line 72.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 127 \n  A loop starting at line 127 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 133 \n  A loop starting at line 133 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 138 \n  A loop starting at line 138 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 150 \n  A loop starting at line 150 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 245 \n  A loop starting at line 245 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 254 \n  A loop starting at line 254 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_if.F90, Line = 263 \n  A loop starting at line 263 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0065 seconds\nCray Fortran : 317 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36563005577772856
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016928818076848984,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop.F90/kernels_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 23 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 27 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 31 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 35 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 39 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 43 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 47 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 51 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 55 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 6, Column = 59 \n  Unexpected syntax while parsing the type-declaration statement : \"object-name\" was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 23, Column = 16 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 25, Column = 18 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 27, Column = 20 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 29, Column = 22 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 31, Column = 24 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 33, Column = 26 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 35, Column = 28 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 37, Column = 30 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 39, Column = 32 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-515 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 41, Column = 34 \n  Unexpected syntax:  A label, comma, identifier, WHILE or EOS was expected but found \"_\".\n\n\nftn-1725 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90, Line = 42, Column = 35 \n  Unexpected syntax while parsing the assignment statement : \"operand\" was expected but found \"_\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 108 source lines\nCray Fortran : 21 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16578846191987395
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop.F90/kernels_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155137370340526
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0334411421790719,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_independent.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_independent.F90/kernels_loop_independent.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_independent.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_independent.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_independent.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_independent.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_independent.F90, Line = 52 \n  A loop starting at line 52 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 79 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3160057170316577
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.033492229878902435,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_add_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_add_general.F90/kernels_loop_reduction_add_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_general.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_general.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_general.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36602240381762385
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016909149009734392,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_add_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_add_loop.F90/kernels_loop_reduction_add_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 26 \n  A loop starting at line 26 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 32 \n  A loop starting at line 32 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 32 \n  A loop starting at line 32 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 39 \n  A loop starting at line 39 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_loop.F90, Line = 69 \n  A loop starting at line 69 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 96 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660330642014742
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017105227801948786,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_add_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_add_vector_loop.F90/kernels_loop_reduction_add_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_add_vector_loop.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366101095918566
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06577964406460524,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_and_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_and_general.F90/kernels_loop_reduction_and_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_general.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_general.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_general.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31608188431710005
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016846928745508194,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_and_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_and_loop.F90/kernels_loop_reduction_and_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 22 \n  A loop starting at line 22 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 21.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 42 \n  A loop starting at line 42 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 42 \n  A loop starting at line 42 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 66 \n  A loop starting at line 66 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 66 \n  A loop starting at line 66 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_loop.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36584813706576824
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01712405402213335,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_and_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_and_vector_loop.F90/kernels_loop_reduction_and_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90, Line = 42 \n  A loop starting at line 42 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90, Line = 45 \n  A loop starting at line 45 was eliminated by optimization.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90, Line = 54 \n  A loop starting at line 54 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_and_vector_loop.F90, Line = 83 \n  A loop starting at line 83 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 110 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36578529607504606
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017056073993444443,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitand_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitand_general.F90/kernels_loop_reduction_bitand_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 24 \n  A loop starting at line 24 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 24 \n  A loop starting at line 24 was vectorized as part of the loop starting at line 23.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 27 \n  A loop starting at line 27 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 30 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 39 \n  A loop starting at line 39 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 45 \n  A loop starting at line 45 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_general.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660196578130126
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017165934201329947,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitand_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitand_loop.F90/kernels_loop_reduction_bitand_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 23 \n  A loop starting at line 23 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 23.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized as part of the loop starting at line 23.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 31 \n  A loop starting at line 31 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 34 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 39 \n  A loop starting at line 39 was unwound.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 48 \n  A loop starting at line 48 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 53 \n  A loop starting at line 53 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 53 \n  A loop starting at line 53 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 61 \n  A loop starting at line 61 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 61 \n  A loop starting at line 61 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 67 \n  A loop starting at line 67 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 67 \n  A loop starting at line 67 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_loop.F90, Line = 93 \n  A loop starting at line 93 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0047 seconds\nCray Fortran : 120 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664625030942261
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017088315915316343,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitand_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitand_vector_loop.F90/kernels_loop_reduction_bitand_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was collapsed into the loop starting at line 25.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 26 \n  A loop starting at line 26 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized as part of the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 29 \n  A loop starting at line 29 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 32 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 50 \n  A loop starting at line 50 was fused with the loop starting at line 40.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 52 \n  A loop starting at line 52 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 52 \n  A loop starting at line 52 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitand_vector_loop.F90, Line = 79 \n  A loop starting at line 79 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 106 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366318975109607
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016812262125313282,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitor_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitor_general.F90/kernels_loop_reduction_bitor_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 24 \n  A loop starting at line 24 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 24 \n  A loop starting at line 24 was vectorized as part of the loop starting at line 23.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 27 \n  A loop starting at line 27 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 30 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 37 \n  A loop starting at line 37 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_general.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659617663361132
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.033517328556627035,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitor_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitor_loop.F90/kernels_loop_reduction_bitor_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 23.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 27 \n  A loop starting at line 27 was collapsed into the loop starting at line 28.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 28 \n  A loop starting at line 28 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 29 \n  A loop starting at line 29 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 29 \n  A loop starting at line 29 was vectorized as part of the loop starting at line 28.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 32 \n  A loop starting at line 32 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 35 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 51 \n  A loop starting at line 51 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 51 \n  A loop starting at line 51 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 59 \n  A loop starting at line 59 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 59 \n  A loop starting at line 59 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_loop.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0047 seconds\nCray Fortran : 118 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3667524717748165
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016846659127622843,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitor_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitor_vector_loop.F90/kernels_loop_reduction_bitor_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was interchanged with the loop starting at line 24.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 30 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 40 \n  A loop starting at line 40 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 40 \n  A loop starting at line 40 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 49 \n  A loop starting at line 49 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitor_vector_loop.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664930914528668
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01714543579146266,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitxor_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitxor_general.F90/kernels_loop_reduction_bitxor_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_general.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_general.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_general.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_general.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31633018190041184
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01729053631424904,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitxor_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitxor_loop.F90/kernels_loop_reduction_bitxor_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 23.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 33 \n  A loop starting at line 33 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 38 \n  A loop starting at line 38 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 52 \n  A loop starting at line 52 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 52 \n  A loop starting at line 52 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_loop.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36674109986051917
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0173810007981956,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_bitxor_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_bitxor_vector_loop.F90/kernels_loop_reduction_bitxor_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_bitxor_vector_loop.F90, Line = 64 \n  A loop starting at line 64 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 91 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36596166668459773
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016922925133258104,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_max_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_max_general.F90/kernels_loop_reduction_max_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_general.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_general.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_general.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36641854839399457
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017209899611771107,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_max_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_max_loop.F90/kernels_loop_reduction_max_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 33 \n  A loop starting at line 33 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 40 \n  A loop starting at line 40 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_loop.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662942978553474
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01699589705094695,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_max_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_max_vector_loop.F90/kernels_loop_reduction_max_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 21 \n  A loop starting at line 21 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_max_vector_loop.F90, Line = 64 \n  A loop starting at line 64 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 91 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665836057625711
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016963955014944077,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_min_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_min_general.F90/kernels_loop_reduction_min_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_general.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_general.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_general.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3160003647208214
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.03290631016716361,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_min_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_min_loop.F90/kernels_loop_reduction_min_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 30 \n  A loop starting at line 30 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 50 \n  A loop starting at line 50 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 50 \n  A loop starting at line 50 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_loop.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3657743837684393
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017436837777495384,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_min_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_min_vector_loop.F90/kernels_loop_reduction_min_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_min_vector_loop.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36618359480053186
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01688206708058715,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_multiply_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_multiply_general.F90/kernels_loop_reduction_multiply_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_general.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_general.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_general.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_general.F90, Line = 59 \n  A loop starting at line 59 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 86 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664308311417699
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017147990874946117,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_multiply_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_multiply_loop.F90/kernels_loop_reduction_multiply_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 30 \n  A loop starting at line 30 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_loop.F90, Line = 81 \n  A loop starting at line 81 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 108 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36635595792904496
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01702605513855815,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_multiply_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_multiply_vector_loop.F90/kernels_loop_reduction_multiply_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 29 \n  A loop starting at line 29 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 29 \n  A loop starting at line 29 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 38 \n  A loop starting at line 38 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 38 \n  A loop starting at line 38 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_multiply_vector_loop.F90, Line = 65 \n  A loop starting at line 65 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 92 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36642336705699563
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017490089870989323,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_or_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_or_general.F90/kernels_loop_reduction_or_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_general.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_general.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_general.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3283405788242817
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017248304095119238,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_or_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_or_loop.F90/kernels_loop_reduction_or_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 32 \n  A loop starting at line 32 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 41 \n  A loop starting at line 41 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 41 \n  A loop starting at line 41 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 66 \n  A loop starting at line 66 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 66 \n  A loop starting at line 66 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_loop.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36580363381654024
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016912625171244144,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_reduction_or_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_reduction_or_vector_loop.F90/kernels_loop_reduction_or_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_reduction_or_vector_loop.F90, Line = 72 \n  A loop starting at line 72 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 99 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36601520981639624
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01717968098819256,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_seq.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_seq.F90/kernels_loop_seq.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90, Line = 18 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90, Line = 22 \n  A loop starting at line 22 was unrolled 4 times.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_seq.F90, Line = 52 \n  A loop starting at line 52 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 79 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36585651291534305
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01743373181670904,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_tile.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_tile.F90/kernels_loop_tile.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 26 \n  A loop starting at line 26 was collapsed into the loop starting at line 25.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 37 \n  A loop starting at line 37 was collapsed into the loop starting at line 36.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 39 \n  A loop starting at line 39 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_tile.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36627468140795827
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01684390287846327,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_vector_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_vector_blocking.F90/kernels_loop_vector_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_vector_blocking.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31618649512529373
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017197375651448965,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_loop_worker_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_loop_worker_blocking.F90/kernels_loop_worker_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_loop_worker_blocking.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31600592704489827
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016866225749254227,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_num_gangs.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_num_gangs.F90/kernels_num_gangs.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_gangs.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_gangs.F90, Line = 14 \n  A loop starting at line 14 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_gangs.F90, Line = 42 \n  A loop starting at line 42 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0039 seconds\nCray Fortran : 69 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31600408302620053
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.01696510799229145,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_num_workers.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_num_workers.F90/kernels_num_workers.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_workers.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_workers.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_workers.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_workers.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_num_workers.F90, Line = 53 \n  A loop starting at line 53 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 80 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31624711211770773
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017152319196611643,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_present.F90/kernels_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_present.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_present.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_present.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_present.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36658586096018553
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01717525301501155,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_scalar_default_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_scalar_default_copy.F90/kernels_scalar_default_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_scalar_default_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_scalar_default_copy.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_scalar_default_copy.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_scalar_default_copy.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_scalar_default_copy.F90, Line = 58 \n  A loop starting at line 58 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 85 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36620952375233173
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01728553557768464,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_vector_length.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_vector_length.F90/kernels_vector_length.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_vector_length.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_vector_length.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_vector_length.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_vector_length.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_vector_length.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3158238660544157
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017293762415647507,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "kernels_wait.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/kernels_wait.F90/kernels_wait.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/kernels_wait.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660673196427524
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01739023718982935,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_collapse.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/loop_collapse.F90/loop_collapse.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 22 \n  A loop starting at line 22 was unwound.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 30 \n  A loop starting at line 30 was unrolled 4 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 36 \n  A loop starting at line 36 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 38 \n  A loop starting at line 38 was vectorized as part of the loop starting at line 36.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 72 \n  A loop starting at line 72 was fused with the loop starting at line 70.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 72 \n  A statement was replaced by a library call.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 77 \n  A loop starting at line 77 was collapsed into the loop starting at line 78.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 78 \n  A loop starting at line 78 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 78 \n  A loop starting at line 78 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 85 \n  A loop starting at line 85 was collapsed into the loop starting at line 86.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 86 \n  A loop starting at line 86 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 86 \n  A loop starting at line 86 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 115 \n  A loop starting at line 115 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_collapse.F90, Line = 124 \n  A loop starting at line 124 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 160 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36617456562817097
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017051144037395716,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "loop_no_collapse.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/loop_no_collapse.F90/loop_no_collapse.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 22 \n  A loop starting at line 22 was unwound.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 30 \n  A loop starting at line 30 was unrolled 4 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 37 \n  A loop starting at line 37 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 39 \n  A loop starting at line 39 was unrolled 2 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 39 \n  A loop starting at line 39 was vectorized as part of the loop starting at line 37.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 73 \n  A loop starting at line 73 was fused with the loop starting at line 71.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 73 \n  A statement was replaced by a library call.\n\n\nftn-6008 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 83 \n  A loop starting at line 83 was unrolled 4 times.\n\n\nftn-6209 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 90 \n  A loop starting at line 90 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 92 \n  A loop starting at line 92 was unrolled 2 times.\n\n\nftn-6208 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 92 \n  A loop starting at line 92 was vectorized as part of the loop starting at line 90.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 122 \n  A loop starting at line 122 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/loop_no_collapse.F90, Line = 131 \n  A loop starting at line 131 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 167 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.416705165989697
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016924358904361725,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel.F90/parallel.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 26 \n  A loop starting at line 26 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 28 \n  A loop starting at line 28 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 30 \n  A loop starting at line 30 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 32 \n  A loop starting at line 32 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 34 \n  A loop starting at line 34 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 36 \n  A loop starting at line 36 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 38 \n  A loop starting at line 38 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 40 \n  A loop starting at line 40 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 42 \n  A loop starting at line 42 was collapsed into the loop starting at line 44.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 44 \n  A loop starting at line 44 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 44 \n  A loop starting at line 44 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel.F90, Line = 85 \n  A loop starting at line 85 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 112 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662705821916461
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016920119989663363,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_async.F90/parallel_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 49 \n  A loop starting at line 49 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_async.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.567189275752753
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017401660792529583,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_copy.F90/parallel_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copy.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copy.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copy.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copy.F90, Line = 53 \n  A loop starting at line 53 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 80 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3309819563291967
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017383825033903122,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_copyin.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_copyin.F90/parallel_copyin.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyin.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyin.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyin.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31656659906730056
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01695059984922409,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_copyout.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_copyout.F90/parallel_copyout.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 24.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 78 \n  A loop starting at line 78 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 84 \n  A loop starting at line 84 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 122 \n  A loop starting at line 122 was fused with the loop starting at line 121.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 127 \n  A loop starting at line 127 was fused with the loop starting at line 121.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 134 \n  A loop starting at line 134 was fused with the loop starting at line 121.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 165 \n  A loop starting at line 165 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 174 \n  A loop starting at line 174 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_copyout.F90, Line = 183 \n  A loop starting at line 183 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0067 seconds\nCray Fortran : 228 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3668738859705627
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017096531111747026,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_create.F90/parallel_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_create.F90, Line = 58 \n  A loop starting at line 58 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 85 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32881053630262613
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017104937229305506,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_default_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_default_copy.F90/parallel_default_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 24.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 26 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 82 \n  A loop starting at line 82 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 87 \n  A loop starting at line 87 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 93 \n  A loop starting at line 93 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 122 \n  A loop starting at line 122 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_copy.F90, Line = 131 \n  A loop starting at line 131 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0055 seconds\nCray Fortran : 167 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663868270814419
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017343577928841114,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_default_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_default_present.F90/parallel_default_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_present.F90, Line = 10 \n  A loop starting at line 10 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_present.F90, Line = 15 \n  A loop starting at line 15 was fused with the loop starting at line 10.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_present.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 10.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_default_present.F90, Line = 46 \n  A loop starting at line 46 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0039 seconds\nCray Fortran : 73 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31654647970572114
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016829125117510557,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_firstprivate.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_firstprivate.F90/parallel_firstprivate.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 30 \n  A loop starting at line 30 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 38 \n  A loop starting at line 38 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 72 \n  A loop starting at line 72 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 73 \n  A loop starting at line 73 was fused with the loop starting at line 70.\n\n\nftn-6231 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 73 \n  A statement was replaced by a library call.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 78 \n  A loop starting at line 78 was collapsed into the loop starting at line 80.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 80 \n  A loop starting at line 80 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 80 \n  A loop starting at line 80 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 84 \n  A loop starting at line 84 was fused with the loop starting at line 80.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 91 \n  A loop starting at line 91 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 91 \n  A loop starting at line 91 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_firstprivate.F90, Line = 128 \n  A loop starting at line 128 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0057 seconds\nCray Fortran : 164 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36609991267323494
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01743167731910944,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_if.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_if.F90/parallel_if.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 27 \n  A loop starting at line 27 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 26.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 27.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 83 \n  A loop starting at line 83 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 89 \n  A loop starting at line 89 was eliminated by optimization.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 129 \n  A loop starting at line 129 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 129 \n  A loop starting at line 129 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 130 \n  A loop starting at line 130 was fused with the loop starting at line 129.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 134 \n  A loop starting at line 134 was fused with the loop starting at line 129.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 140 \n  A loop starting at line 140 was fused with the loop starting at line 129.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 171 \n  A loop starting at line 171 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 180 \n  A loop starting at line 180 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_if.F90, Line = 189 \n  A loop starting at line 189 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0069 seconds\nCray Fortran : 234 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36643513897433877
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016967473085969687,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop.F90/parallel_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 11 \n  A loop starting at line 11 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 20 \n  A loop starting at line 20 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 48 \n  A loop starting at line 48 was eliminated by optimization.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 56 \n  A loop starting at line 56 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 56 \n  A loop starting at line 56 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 61 \n  A loop starting at line 61 was fused with the loop starting at line 56.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 56.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 71 \n  A loop starting at line 71 was fused with the loop starting at line 56.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 99 \n  A loop starting at line 99 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop.F90, Line = 108 \n  A loop starting at line 108 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 144 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660946129821241
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017278882674872875,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_async.F90/parallel_loop_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 27.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 34 \n  Variable \"errors_array\" is used before it is defined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 41 \n  A loop starting at line 41 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_async.F90, Line = 64 \n  A loop starting at line 64 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 91 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36620879312977195
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.01741410419344902,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_auto.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_auto.F90/parallel_loop_auto.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 37 \n  A loop starting at line 37 was unrolled 4 times.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 43 \n  A loop starting at line 43 was unrolled 4 times.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_auto.F90, Line = 69 \n  A loop starting at line 69 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 96 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36633788235485554
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0169389471411705,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_block.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_block.F90/parallel_loop_block.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 11 \n  A loop starting at line 11 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 21 \n  A loop starting at line 21 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 21.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 50 \n  A loop starting at line 50 was eliminated by optimization.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 58 \n  A loop starting at line 58 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 58 \n  A loop starting at line 58 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 65 \n  A loop starting at line 65 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 69 \n  A loop starting at line 69 was fused with the loop starting at line 58.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 77 \n  A loop starting at line 77 was fused with the loop starting at line 58.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 105 \n  A loop starting at line 105 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_block.F90, Line = 114 \n  A loop starting at line 114 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 150 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3161770268343389
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016827161889523268,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_gang.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_gang.F90/parallel_loop_gang.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_gang.F90, Line = 53 \n  A loop starting at line 53 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 80 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31603283900767565
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01752872485667467,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_add_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_add_general.F90/parallel_loop_reduction_add_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_general.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_general.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_general.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3161632660776377
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01681118691340089,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_add_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_add_loop.F90/parallel_loop_reduction_add_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 26 \n  A loop starting at line 26 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 32 \n  A loop starting at line 32 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 32 \n  A loop starting at line 32 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 39 \n  A loop starting at line 39 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_loop.F90, Line = 69 \n  A loop starting at line 69 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 96 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662166837602854
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017581704072654247,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_add_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_add_vector_loop.F90/parallel_loop_reduction_add_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_add_vector_loop.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36637703189626336
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01693699136376381,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_and_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_and_general.F90/parallel_loop_reduction_and_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_general.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_general.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_general.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3161695976741612
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06542647909373045,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_and_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_and_loop.F90/parallel_loop_reduction_and_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 21 \n  A loop starting at line 21 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 21 \n  A loop starting at line 21 was partially vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 22 \n  A loop starting at line 22 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 21.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 42 \n  A loop starting at line 42 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 42 \n  A loop starting at line 42 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 66 \n  A loop starting at line 66 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 66 \n  A loop starting at line 66 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_loop.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0047 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664899510331452
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016895450185984373,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_and_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_and_vector_loop.F90/parallel_loop_reduction_and_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90, Line = 42 \n  A loop starting at line 42 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90, Line = 45 \n  A loop starting at line 45 was eliminated by optimization.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90, Line = 54 \n  A loop starting at line 54 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_and_vector_loop.F90, Line = 83 \n  A loop starting at line 83 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 110 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663710611872375
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.26545994402840734,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitand_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitand_general.F90/parallel_loop_reduction_bitand_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 24 \n  A loop starting at line 24 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 24 \n  A loop starting at line 24 was vectorized as part of the loop starting at line 23.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 27 \n  A loop starting at line 27 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 30 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 39 \n  A loop starting at line 39 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 45 \n  A loop starting at line 45 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_general.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36597759183496237
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017366949934512377,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitand_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitand_loop.F90/parallel_loop_reduction_bitand_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 23 \n  A loop starting at line 23 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 23.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized as part of the loop starting at line 23.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 31 \n  A loop starting at line 31 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 34 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 39 \n  A loop starting at line 39 was unwound.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 50 \n  A loop starting at line 50 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 50 \n  A loop starting at line 50 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 55 \n  A loop starting at line 55 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 55 \n  A loop starting at line 55 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 63 \n  A loop starting at line 63 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 63 \n  A loop starting at line 63 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 69 \n  A loop starting at line 69 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 69 \n  A loop starting at line 69 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_loop.F90, Line = 95 \n  A loop starting at line 95 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0047 seconds\nCray Fortran : 122 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663790156133473
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01685022283345461,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitand_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitand_vector_loop.F90/parallel_loop_reduction_bitand_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was collapsed into the loop starting at line 25.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 26 \n  A loop starting at line 26 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized as part of the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 29 \n  A loop starting at line 29 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 32 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 50 \n  A loop starting at line 50 was fused with the loop starting at line 40.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 52 \n  A loop starting at line 52 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 52 \n  A loop starting at line 52 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitand_vector_loop.F90, Line = 79 \n  A loop starting at line 79 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 106 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36652645096182823
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016842446755617857,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitor_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitor_general.F90/parallel_loop_reduction_bitor_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 24 \n  A loop starting at line 24 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 24 \n  A loop starting at line 24 was vectorized as part of the loop starting at line 23.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 27 \n  A loop starting at line 27 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 30 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 37 \n  A loop starting at line 37 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 37.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_general.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32838504621759057
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017127797938883305,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitor_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitor_loop.F90/parallel_loop_reduction_bitor_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 23.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 27 \n  A loop starting at line 27 was collapsed into the loop starting at line 28.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 28 \n  A loop starting at line 28 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 29 \n  A loop starting at line 29 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 29 \n  A loop starting at line 29 was vectorized as part of the loop starting at line 28.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 32 \n  A loop starting at line 32 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 35 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 51 \n  A loop starting at line 51 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 51 \n  A loop starting at line 51 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 59 \n  A loop starting at line 59 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 59 \n  A loop starting at line 59 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_loop.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0047 seconds\nCray Fortran : 118 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366008510813117
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06548031279817224,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitor_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitor_vector_loop.F90/parallel_loop_reduction_bitor_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was interchanged with the loop starting at line 24.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 30 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 40 \n  A loop starting at line 40 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 40 \n  A loop starting at line 40 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 49 \n  A loop starting at line 49 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitor_vector_loop.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36628876300528646
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06556375371292233,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitxor_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitxor_general.F90/parallel_loop_reduction_bitxor_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_general.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_general.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_general.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_general.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31593906274065375
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016866134013980627,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitxor_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitxor_loop.F90/parallel_loop_reduction_bitxor_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 23.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 33 \n  A loop starting at line 33 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 38 \n  A loop starting at line 38 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 38 \n  A loop starting at line 38 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 52 \n  A loop starting at line 52 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 52 \n  A loop starting at line 52 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_loop.F90, Line = 78 \n  A loop starting at line 78 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 105 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36631789803504944
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017104733735322952,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_bitxor_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_bitxor_vector_loop.F90/parallel_loop_reduction_bitxor_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_bitxor_vector_loop.F90, Line = 64 \n  A loop starting at line 64 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 91 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36617948208004236
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01685616374015808,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_max_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_max_general.F90/parallel_loop_reduction_max_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_general.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_general.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_general.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.33044755598530173
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017281734850257635,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_max_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_max_loop.F90/parallel_loop_reduction_max_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 33 \n  A loop starting at line 33 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 40 \n  A loop starting at line 40 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_loop.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32937420532107353
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.11554274940863252,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_max_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_max_vector_loop.F90/parallel_loop_reduction_max_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 21 \n  A loop starting at line 21 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_max_vector_loop.F90, Line = 64 \n  A loop starting at line 64 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 91 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.5171650080010295
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017186972312629223,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_min_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_min_general.F90/parallel_loop_reduction_min_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_general.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_general.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_general.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3310138192027807
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017210638150572777,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_min_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_min_loop.F90/parallel_loop_reduction_min_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 30 \n  A loop starting at line 30 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 49 \n  A loop starting at line 49 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_loop.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36591470101848245
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017082672100514174,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_min_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_min_vector_loop.F90/parallel_loop_reduction_min_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_min_vector_loop.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366249016020447
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017347462009638548,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_multiply_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_multiply_general.F90/parallel_loop_reduction_multiply_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_general.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_general.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_general.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_general.F90, Line = 59 \n  A loop starting at line 59 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 86 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36615185905247927
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01690415572375059,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_multiply_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_multiply_loop.F90/parallel_loop_reduction_multiply_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 30 \n  A loop starting at line 30 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 35 \n  A loop starting at line 35 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 43 \n  A loop starting at line 43 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 43 \n  A loop starting at line 43 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_loop.F90, Line = 81 \n  A loop starting at line 81 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 108 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664511861279607
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017224153969436884,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_multiply_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_multiply_vector_loop.F90/parallel_loop_reduction_multiply_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 29 \n  A loop starting at line 29 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 29 \n  A loop starting at line 29 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 38 \n  A loop starting at line 38 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 38 \n  A loop starting at line 38 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_multiply_vector_loop.F90, Line = 65 \n  A loop starting at line 65 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 92 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36641522590070963
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01727029401808977,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_or_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_or_general.F90/parallel_loop_reduction_or_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_general.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_general.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_general.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31583621399477124
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017065697815269232,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_or_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_or_loop.F90/parallel_loop_reduction_or_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 32 \n  A loop starting at line 32 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 41 \n  A loop starting at line 41 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 41 \n  A loop starting at line 41 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 66 \n  A loop starting at line 66 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 66 \n  A loop starting at line 66 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_loop.F90, Line = 98 \n  A loop starting at line 98 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 125 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36671494506299496
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017345868982374668,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_reduction_or_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_reduction_or_vector_loop.F90/parallel_loop_reduction_or_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_reduction_or_vector_loop.F90, Line = 72 \n  A loop starting at line 72 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0051 seconds\nCray Fortran : 99 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666880838572979
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017318917904049158,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_seq.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_seq.F90/parallel_loop_seq.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90, Line = 18 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90, Line = 22 \n  A loop starting at line 22 was unrolled 4 times.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90, Line = 27 \n  A loop starting at line 27 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_seq.F90, Line = 52 \n  A loop starting at line 52 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 79 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3659626832231879
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017067371867597103,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_tile.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_tile.F90/parallel_loop_tile.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 26 \n  A loop starting at line 26 was collapsed into the loop starting at line 25.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 28 \n  A loop starting at line 28 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 37 \n  A loop starting at line 37 was collapsed into the loop starting at line 36.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 39 \n  A loop starting at line 39 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_tile.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31622769916430116
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017301513347774744,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_vector.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_vector.F90/parallel_loop_vector.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector.F90, Line = 53 \n  A loop starting at line 53 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 80 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31620178977027535
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0653267172165215,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_vector_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_vector_blocking.F90/parallel_loop_vector_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_vector_blocking.F90, Line = 61 \n  A loop starting at line 61 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 88 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36620553210377693
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016884690150618553,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_worker.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_worker.F90/parallel_loop_worker.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker.F90, Line = 53 \n  A loop starting at line 53 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 80 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3164114239625633
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016842948738485575,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_loop_worker_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_loop_worker_blocking.F90/parallel_loop_worker_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_loop_worker_blocking.F90, Line = 60 \n  A loop starting at line 60 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 87 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3306195270270109
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016859570983797312,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_present.F90/parallel_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_present.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3162721358239651
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017327444162219763,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_private.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_private.F90/parallel_private.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 22 \n  A loop starting at line 22 was eliminated by optimization.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 23 \n  A loop starting at line 23 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 30 \n  A loop starting at line 30 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 30.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 28.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 43 \n  A loop starting at line 43 was fused with the loop starting at line 30.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_private.F90, Line = 70 \n  A loop starting at line 70 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 97 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36658769892528653
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017055267933756113,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_reduction.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_reduction.F90/parallel_reduction.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_reduction.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_reduction.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_reduction.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_reduction.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.33056131610646844
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017447736114263535,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_scalar_default_firstprivate.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_scalar_default_firstprivate.F90/parallel_scalar_default_firstprivate.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_scalar_default_firstprivate.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_scalar_default_firstprivate.F90, Line = 20 \n  A loop starting at line 20 was unwound.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_scalar_default_firstprivate.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_scalar_default_firstprivate.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_scalar_default_firstprivate.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 23.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_scalar_default_firstprivate.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32954102475196123
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0171537883579731,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_switch.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_switch.F90/parallel_switch.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90, Line = 19 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90, Line = 39 \n  A loop starting at line 39 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_switch.F90, Line = 75 \n  A loop starting at line 75 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 102 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.330227421130985
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017055549193173647,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_wait.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_wait.F90/parallel_wait.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_wait.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_wait.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_wait.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_wait.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_wait.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36661757715046406
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017391816712915897,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "parallel_while_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/parallel_while_loop.F90/parallel_while_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_while_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_while_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 4 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_while_loop.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 28.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_while_loop.F90, Line = 42 \n  A loop starting at line 42 was partially vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/parallel_while_loop.F90, Line = 69 \n  A loop starting at line 69 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 96 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.366016476880759
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017312454991042614,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial.F90/serial.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 21 \n  A statement was replaced by a library call.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 26 \n  A loop starting at line 26 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 28 \n  A loop starting at line 28 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 30 \n  A loop starting at line 30 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 32 \n  A loop starting at line 32 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 34 \n  A loop starting at line 34 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 36 \n  A loop starting at line 36 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 38 \n  A loop starting at line 38 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 40 \n  A loop starting at line 40 was collapsed into the loop starting at line 44.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 42 \n  A loop starting at line 42 was collapsed into the loop starting at line 44.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 44 \n  A loop starting at line 44 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 44 \n  A loop starting at line 44 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 61 \n  A loop starting at line 61 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 61 \n  A loop starting at line 61 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial.F90, Line = 86 \n  A loop starting at line 86 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 113 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36655509704723954
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017113871406763792,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_async.F90/serial_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 23 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 24 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 51 \n  A loop starting at line 51 was fused with the loop starting at line 22.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 58 \n  A loop starting at line 58 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 58 \n  A loop starting at line 58 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 65 \n  A loop starting at line 65 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 65 \n  A loop starting at line 65 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_async.F90, Line = 91 \n  A loop starting at line 91 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 118 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36672444362193346
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017085265833884478,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_copy.F90/serial_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copy.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copy.F90, Line = 22 \n  A loop starting at line 22 was unwound.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copy.F90, Line = 27 \n  A loop starting at line 27 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copy.F90, Line = 52 \n  A loop starting at line 52 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 79 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3164698272012174
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017225527204573154,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_copyin.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_copyin.F90/serial_copyin.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90, Line = 76 \n  A loop starting at line 76 was fused with the loop starting at line 71.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90, Line = 82 \n  A loop starting at line 82 was fused with the loop starting at line 71.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90, Line = 110 \n  A loop starting at line 110 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyin.F90, Line = 119 \n  A loop starting at line 119 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0054 seconds\nCray Fortran : 155 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3670329167507589
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01721829315647483,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_copyout.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_copyout.F90/serial_copyout.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 24.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 77 \n  A loop starting at line 77 was eliminated by optimization.\n\n\nftn-7212 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 78 \n  Variable \"a\" is used before it is defined.\n\n\nftn-7212 ftn: WARNING TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 78 \n  Variable \"b\" is used before it is defined.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 83 \n  A loop starting at line 83 was eliminated by optimization.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 123 \n  A loop starting at line 123 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 123 \n  A loop starting at line 123 was vectorized.\n\n\nftn-7212 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 124 \n  Variable \"a\" is used before it is defined.\n\n\nftn-7212 ftn: WARNING TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 124 \n  Variable \"b\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 130 \n  A loop starting at line 130 was fused with the loop starting at line 123.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 161 \n  A loop starting at line 161 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 170 \n  A loop starting at line 170 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_copyout.F90, Line = 179 \n  A loop starting at line 179 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0066 seconds\nCray Fortran : 224 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.32949378388002515
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 4,
                    "runtime": 0.017338213976472616,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_create.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_create.F90/serial_create.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_create.F90, Line = 59 \n  A loop starting at line 59 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 86 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.5298753981478512
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017573469318449497,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_default_copy.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_default_copy.F90/serial_default_copy.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 25 \n  A loop starting at line 25 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 24.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 26 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 25.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 86 \n  A loop starting at line 86 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 92 \n  A loop starting at line 92 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 100 \n  A loop starting at line 100 was eliminated by optimization.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_copy.F90, Line = 138 \n  A loop starting at line 138 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 174 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3165960591286421
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01687146397307515,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_default_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_default_present.F90/serial_default_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90, Line = 11 \n  A loop starting at line 11 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90, Line = 16 \n  A loop starting at line 16 was fused with the loop starting at line 11.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 11.\n\n\nftn-3182 ftn: IPA MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90, Line = 47 \n  Loop has been flattened.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90, Line = 47 \n  A loop starting at line 47 was unwound.\n\n\nftn-3001 ftn: IPA MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_default_present.F90, Line = 48 \n  Leaf \"test1\" was inlined.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0039 seconds\nCray Fortran : 74 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3161137388087809
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017462394200265408,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_firstprivate.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_firstprivate.F90/serial_firstprivate.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 23 \n  A loop starting at line 23 was eliminated by optimization.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 29 \n  A loop starting at line 29 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 29 \n  A loop starting at line 29 was partially vector pipelined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 29 \n  A loop starting at line 29 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 27.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 29.\n\n\nftn-6066 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 71 \n   A loop nest at line 71 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 71 \n  A loop starting at line 71 was replaced by a library call.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 72 \n  A loop starting at line 72 was eliminated by optimization.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 77 \n  A loop starting at line 77 was collapsed into the loop starting at line 79.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 79 \n  A loop starting at line 79 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 79 \n  A loop starting at line 79 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 83 \n  A loop starting at line 83 was fused with the loop starting at line 79.\n\n\nftn-6003 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 90 \n  A loop starting at line 90 was collapsed into the loop starting at line 91.\n\n\nftn-6005 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 91 \n  A loop starting at line 91 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 91 \n  A loop starting at line 91 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 120 \n  A loop starting at line 120 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_firstprivate.F90, Line = 129 \n  A loop starting at line 129 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0056 seconds\nCray Fortran : 165 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36644590366631746
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016888015903532505,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_if.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_if.F90/serial_if.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 27.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 29 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 28.\n\n\nftn-6008 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 38 \n  A loop starting at line 38 was unwound.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 85 \n  A loop starting at line 85 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 91 \n  A loop starting at line 91 was eliminated by optimization.\n\n\nftn-6005 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 132 \n  A loop starting at line 132 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 132 \n  A loop starting at line 132 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 133 \n  A loop starting at line 133 was fused with the loop starting at line 132.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 138 \n  A loop starting at line 138 was fused with the loop starting at line 132.\n\n\nftn-6004 ftn: SCALAR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 144 \n  A loop starting at line 144 was fused with the loop starting at line 132.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 175 \n  A loop starting at line 175 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 184 \n  A loop starting at line 184 was unwound.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_if.F90, Line = 193 \n  A loop starting at line 193 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0069 seconds\nCray Fortran : 238 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36579566914588213
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017143669072538614,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop.F90/serial_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 19.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 48 \n  A loop starting at line 48 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36584417428821325
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0331902289763093,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_async.F90/serial_loop_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 33.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_async.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662033760920167
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01687997067347169,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_auto.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_auto.F90/serial_loop_auto.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 37 \n  A loop starting at line 37 was unrolled 4 times.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 43 \n  A loop starting at line 43 was unrolled 4 times.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_auto.F90, Line = 69 \n  A loop starting at line 69 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 96 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3162748492322862
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01679419493302703,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_gang.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_gang.F90/serial_loop_gang.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663436071947217
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016855963971465826,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_gang_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_gang_blocking.F90/serial_loop_gang_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang_blocking.F90, Line = 14, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang_blocking.F90, Line = 15, Column = 22 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang_blocking.F90, Line = 16, Column = 9 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 89 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16610127920284867
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_gang_blocking.F90/serial_loop_gang_blocking.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_gang_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3154697963036597
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017390285152941942,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_add_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_add_general.F90/serial_loop_reduction_add_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_general.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_general.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_general.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31646781181916595
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017232490237802267,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_add_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_add_loop.F90/serial_loop_reduction_add_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 33 \n  A loop starting at line 33 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 33 \n  A loop starting at line 33 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 39 \n  A loop starting at line 39 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 33.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 45 \n  A loop starting at line 45 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 45 \n  A loop starting at line 45 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_loop.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 98 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663385370746255
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01709964405745268,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_add_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_add_vector_loop.F90/serial_loop_reduction_add_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 20 \n   A loop nest at line 20 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 21.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 35 \n  A loop starting at line 35 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 35 \n  A loop starting at line 35 was partially vector pipelined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 35 \n  A loop starting at line 35 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_add_vector_loop.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36627374216914177
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.03324880404397845,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_and_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_and_general.F90/serial_loop_reduction_and_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_general.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_general.F90, Line = 39 \n  A loop starting at line 39 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_general.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664015280082822
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017200236674398184,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_and_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_and_loop.F90/serial_loop_reduction_and_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-303 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_loop.F90, Line = 47, Column = 23 \n  Data type LOGICAL is not allowed with INTEGER for the operation \"eq\".\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 113 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16593849705532193
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_and_loop.F90/serial_loop_reduction_and_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3151957062073052
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01682031387463212,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_and_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_and_vector_loop.F90/serial_loop_reduction_and_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 22 \n   A loop nest at line 22 collapsed to a single loop.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was vectorized.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 26.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_and_vector_loop.F90, Line = 73 \n  A loop starting at line 73 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 100 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3663777420297265
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017421856056898832,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitand_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitand_general.F90/serial_loop_reduction_bitand_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 22 \n  A loop starting at line 22 was partially vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 24 \n  A loop starting at line 24 was interchanged with the loop starting at line 25.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 22.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 27 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 34 \n  A loop starting at line 34 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 40 \n  A loop starting at line 40 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 40 \n  A loop starting at line 40 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_general.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36677017994225025
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": -11,
                    "runtime": 0.17253502830863,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitand_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitand_loop.F90/serial_loop_reduction_bitand_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 21 \n   A loop nest at line 21 collapsed to a single loop.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 24 \n  A loop starting at line 24 was interchanged with the loop starting at line 26.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 24 \n  A loop starting at line 24 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 24 \n  A loop starting at line 24 was vectorized.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 25, Column = 7 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 28 \n  Variable \"a\" is used before it is defined.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 28, Column = 11 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-375 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 28, Column = 18 \n  The number of subscripts is smaller than the number of declared dimensions.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 34 \n  A loop starting at line 34 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 34.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 34.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 49 \n  A loop starting at line 49 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 54 \n  A loop starting at line 54 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 54 \n  A loop starting at line 54 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 60 \n  A loop starting at line 60 was fused with the loop starting at line 46.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 64 \n  A loop starting at line 64 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 64 \n  A loop starting at line 64 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_loop.F90, Line = 90 \n  A loop starting at line 90 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0047 seconds\nCray Fortran : 117 source lines\nCray Fortran : 0 errors, 4 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36673142528161407
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017378132324665785,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitand_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitand_vector_loop.F90/serial_loop_reduction_bitand_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_vector_loop.F90, Line = 16, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_vector_loop.F90, Line = 17, Column = 16 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_vector_loop.F90, Line = 18, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 104 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16629996476694942
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitand_vector_loop.F90/serial_loop_reduction_bitand_vector_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitand_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3151929806917906
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017433057073503733,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitor_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitor_general.F90/serial_loop_reduction_bitor_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 21 \n  A loop starting at line 21 was interchanged with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 19.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 24 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 29 \n  A loop starting at line 29 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 29 \n  A loop starting at line 29 was vectorized.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 30 \n  Variable \"host_b\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 29.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 36 \n  Variable \"b\" is used before it is defined.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_general.F90, Line = 63 \n  A loop starting at line 63 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 90 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3661427185870707
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01725412206724286,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitor_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitor_loop.F90/serial_loop_reduction_bitor_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 21 \n   A loop nest at line 21 collapsed to a single loop.\n\n\nftn-6375 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 23 \n  A loop starting at line 23 would benefit from \"!dir$ safe_address\".\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 23 \n  A loop starting at line 23 was vectorized.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 24 \n  A loop starting at line 24 was vectorized as part of the loop starting at line 23.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 26 \n  A loop starting at line 26 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized as part of the loop starting at line 23.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 28 \n  Variable \"a\" is used before it is defined.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 34 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 34 \n  A loop starting at line 34 was unrolled 4 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 34 \n  A loop starting at line 34 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 34.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 34.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 46 \n  A loop starting at line 46 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 46 \n  A loop starting at line 46 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 54 \n  A loop starting at line 54 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 54 \n  A loop starting at line 54 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 60 \n  A loop starting at line 60 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 60 \n  A loop starting at line 60 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_loop.F90, Line = 86 \n  A loop starting at line 86 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0046 seconds\nCray Fortran : 113 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36650637118145823
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017003457993268967,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitor_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitor_vector_loop.F90/serial_loop_reduction_bitor_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_vector_loop.F90, Line = 15, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_vector_loop.F90, Line = 16, Column = 16 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_vector_loop.F90, Line = 17, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 100 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1656905678100884
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitor_vector_loop.F90/serial_loop_reduction_bitor_vector_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3154734531417489
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01711771823465824,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitxor_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitxor_general.F90/serial_loop_reduction_bitxor_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_general.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_general.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_general.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_general.F90, Line = 60 \n  A loop starting at line 60 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 87 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3160091768950224
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01707356283441186,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitxor_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitxor_loop.F90/serial_loop_reduction_bitxor_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 20 \n  A loop starting at line 20 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 20.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 22 \n  A loop starting at line 22 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 22 \n  A loop starting at line 22 was vectorized.\n\n\nftn-6003 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 23 \n  A loop starting at line 23 was collapsed into the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 23.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 31 \n  A loop starting at line 31 was unrolled 4 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 31 \n  A loop starting at line 31 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 34 \n  A loop starting at line 34 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 34 \n  A loop starting at line 34 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 41 \n  A loop starting at line 41 was fused with the loop starting at line 30.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 34.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 48 \n  A loop starting at line 48 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 48 \n  A loop starting at line 48 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 54 \n  A loop starting at line 54 was fused with the loop starting at line 30.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 58 \n  A loop starting at line 58 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 58 \n  A loop starting at line 58 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_loop.F90, Line = 84 \n  A loop starting at line 84 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0045 seconds\nCray Fortran : 111 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36672267923131585
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016891072038561106,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_bitxor_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_bitxor_vector_loop.F90/serial_loop_reduction_bitxor_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 18.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 28 \n  Variable \"host_b\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 18.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 44 \n  A loop starting at line 44 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_bitxor_vector_loop.F90, Line = 69 \n  A loop starting at line 69 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 96 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36612762976437807
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.017034878954291344,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_max_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_max_general.F90/serial_loop_reduction_max_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_general.F90, Line = 11, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_general.F90, Line = 12, Column = 16 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_general.F90, Line = 13, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 82 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16653229296207428
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_max_general.F90/serial_loop_reduction_max_general.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3151732119731605
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.06512202182784677,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_max_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_max_loop.F90/serial_loop_reduction_max_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 18 \n   A loop nest at line 18 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 21 \n  A loop starting at line 21 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 21 \n  A loop starting at line 21 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 21.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 25 \n  A loop starting at line 25 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 25 \n  A loop starting at line 25 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 24.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 25.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 40 \n  A loop starting at line 40 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 40 \n  A loop starting at line 40 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 46 \n  A loop starting at line 46 was fused with the loop starting at line 24.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 50 \n  A loop starting at line 50 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 50 \n  A loop starting at line 50 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_loop.F90, Line = 76 \n  A loop starting at line 76 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 103 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666312317363918
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017173707019537687,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_max_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_max_vector_loop.F90/serial_loop_reduction_max_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 19 \n   A loop nest at line 19 collapsed to a single loop.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 20 \n   A loop nest at line 20 collapsed to a single loop.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 22 \n  A loop starting at line 22 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 22 \n  A loop starting at line 22 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 23.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 24.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 41 \n  A loop starting at line 41 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 41 \n  A loop starting at line 41 was partially vector pipelined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 41 \n  A loop starting at line 41 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_max_vector_loop.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36690489994361997
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016891482286155224,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_min_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_min_general.F90/serial_loop_reduction_min_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_general.F90, Line = 24 \n  A loop starting at line 24 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_general.F90, Line = 24 \n  A loop starting at line 24 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_general.F90, Line = 30 \n  A loop starting at line 30 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_general.F90, Line = 30 \n  A loop starting at line 30 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_general.F90, Line = 58 \n  A loop starting at line 58 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 85 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3667859211564064
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017262347973883152,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_min_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_min_loop.F90/serial_loop_reduction_min_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_loop.F90, Line = 14, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_loop.F90, Line = 15, Column = 16 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_loop.F90, Line = 16, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 104 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16568667022511363
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_min_loop.F90/serial_loop_reduction_min_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.33032286260277033
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01719228271394968,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_min_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_min_vector_loop.F90/serial_loop_reduction_min_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 12 \n  A loop starting at line 12 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 12 \n  A loop starting at line 12 was vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 13 \n  A loop starting at line 13 was fused with the loop starting at line 12.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 21 \n   A loop nest at line 21 collapsed to a single loop.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 32 \n  A loop starting at line 32 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 22.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 42 \n  A loop starting at line 42 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 42 \n  A loop starting at line 42 was partially vector pipelined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 42 \n  A loop starting at line 42 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_min_vector_loop.F90, Line = 67 \n  A loop starting at line 67 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0043 seconds\nCray Fortran : 94 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666424532420933
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.0172844510525465,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_multiply_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_multiply_general.F90/serial_loop_reduction_multiply_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_general.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_general.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_general.F90, Line = 58 \n  A loop starting at line 58 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 85 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3165825828909874
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017156393732875586,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_multiply_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_multiply_loop.F90/serial_loop_reduction_multiply_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 21 \n   A loop nest at line 21 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 21 \n  A loop starting at line 21 was replaced by a library call.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 24 \n  A loop starting at line 24 was replaced by a library call.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 26 \n  A loop starting at line 26 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 26 \n  A loop starting at line 26 was partially vector pipelined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 26 \n  A loop starting at line 26 was vectorized.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 33 \n  A loop starting at line 33 was partially vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 36 \n  A loop starting at line 36 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 36 \n  A loop starting at line 36 was vectorized as part of the loop starting at line 33.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 41 \n  A loop starting at line 41 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 41 \n  A loop starting at line 41 was vectorized as part of the loop starting at line 33.\n\n\nftn-6373 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 51 \n  A loop starting at line 51 with a trip count of 10 was unwound into 2 vector iterations.\n\n\nftn-6382 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 51 \n  A loop starting at line 51 was partially vector pipelined.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 51 \n  A loop starting at line 51 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_loop.F90, Line = 77 \n  A loop starting at line 77 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 104 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665367099456489
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017093962989747524,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_multiply_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_multiply_vector_loop.F90/serial_loop_reduction_multiply_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_vector_loop.F90, Line = 14, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_vector_loop.F90, Line = 15, Column = 16 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_vector_loop.F90, Line = 16, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16587395127862692
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_multiply_vector_loop.F90/serial_loop_reduction_multiply_vector_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_multiply_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.41570593137294054
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.21527823712676764,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_or_general.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_or_general.F90/serial_loop_reduction_or_general.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_general.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_general.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_general.F90, Line = 34 \n  A loop starting at line 34 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_general.F90, Line = 40 \n  A loop starting at line 40 was fused with the loop starting at line 21.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_general.F90, Line = 68 \n  A loop starting at line 68 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 95 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36614501336589456
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01744736498221755,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_or_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_or_loop.F90/serial_loop_reduction_or_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_loop.F90, Line = 16, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_loop.F90, Line = 17, Column = 16 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"SEED\".\n\n\nftn-100 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_loop.F90, Line = 18, Column = 3 \n  This statement must begin with a label, a keyword, or an identifier.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 124 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16587850078940392
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_or_loop.F90/serial_loop_reduction_or_loop.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3161526736803353
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01836024597287178,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_reduction_or_vector_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_reduction_or_vector_loop.F90/serial_loop_reduction_or_vector_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 21.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 25 \n  Variable \"false_margin\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 21.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 38 \n  A loop starting at line 38 was fused with the loop starting at line 21.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 47 \n  A loop starting at line 47 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 47 \n  A loop starting at line 47 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_reduction_or_vector_loop.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36758898105472326
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017472343053668737,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_seq.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_seq.F90/serial_loop_seq.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_seq.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_seq.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_seq.F90, Line = 18 \n  A statement was replaced by a library call.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_seq.F90, Line = 22 \n  A loop starting at line 22 was unrolled 4 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_seq.F90, Line = 28 \n  A loop starting at line 28 was fused with the loop starting at line 22.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_seq.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666248298250139
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016836146358400583,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_tile.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_tile.F90/serial_loop_tile.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 22 \n  A loop starting at line 22 was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 22.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 23 \n   A loop nest at line 23 collapsed to a single loop.\n\n\nftn-6202 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 23 \n  A loop starting at line 23 was replaced by a library call.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 27 \n  A loop starting at line 27 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 28 \n  A loop starting at line 28 was unrolled 4 times.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 28 \n  A loop starting at line 28 was vectorized as part of the loop starting at line 27.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 29 \n  A loop starting at line 29 was vectorized as part of the loop starting at line 27.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 37 \n  A loop starting at line 37 was partially vectorized.\n\n\nftn-6208 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 38 \n  A loop starting at line 38 was vectorized as part of the loop starting at line 37.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 49 \n  A loop starting at line 49 was interchanged with the loop starting at line 51.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 49 \n  A loop starting at line 49 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 49 \n  A loop starting at line 49 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 50 \n  A loop starting at line 50 was unrolled 4 times.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 51 \n  A loop starting at line 51 was fused with the loop starting at line 36.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 58 \n  A loop starting at line 58 was interchanged with the loop starting at line 60.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 58 \n  A loop starting at line 58 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 58 \n  A loop starting at line 58 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_tile.F90, Line = 87 \n  A loop starting at line 87 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 114 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3666709577664733
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01712965127080679,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_vector.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_vector.F90/serial_loop_vector.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665134250186384
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017363754101097584,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_vector_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_vector_blocking.F90/serial_loop_vector_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 18 \n  A loop starting at line 18 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 18 \n  A loop starting at line 18 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 19 \n  A loop starting at line 19 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 18.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 25 \n  Variable \"multiplier\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 35 \n  A loop starting at line 35 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_vector_blocking.F90, Line = 60 \n  A loop starting at line 60 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 87 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3162139621563256
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.01682074600830674,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_worker.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_worker.F90/serial_loop_worker.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3664186419919133
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016858117189258337,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_loop_worker_blocking.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_loop_worker_blocking.F90/serial_loop_worker_blocking.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 20 \n  A loop starting at line 20 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 20 \n  A loop starting at line 20 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 20.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 27 \n  Variable \"multiplier\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 37 \n  A loop starting at line 37 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_loop_worker_blocking.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3662530919536948
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.018009790685027838,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_present.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_present.F90/serial_present.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90, Line = 19 \n  A loop starting at line 19 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90, Line = 19 \n  A loop starting at line 19 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90, Line = 25 \n  A loop starting at line 25 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90, Line = 31 \n  A loop starting at line 31 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_present.F90, Line = 56 \n  A loop starting at line 56 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 83 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36589405918493867
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017078212928026915,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_private.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_private.F90/serial_private.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6066 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 21 \n   A loop nest at line 21 collapsed to a single loop.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 23 \n  A loop starting at line 23 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 24 \n  A loop starting at line 24 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 29 \n  A loop starting at line 29 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 31 \n  A loop starting at line 31 was eliminated by optimization.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 35 \n  A loop starting at line 35 was eliminated by optimization.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 22.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 44 \n  A loop starting at line 44 was fused with the loop starting at line 22.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_private.F90, Line = 71 \n  A loop starting at line 71 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0042 seconds\nCray Fortran : 98 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.36644554417580366
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.017448467202484608,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_reduction.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_reduction.F90/serial_reduction.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_reduction.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_reduction.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 18.\n\n\nftn-7212 ftn: WARNING TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_reduction.F90, Line = 23 \n  Variable \"reduction\" is used before it is defined.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_reduction.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 18.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_reduction.F90, Line = 54 \n  A loop starting at line 54 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 81 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31644194200634956
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016989560797810555,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_scalar_default_firstprivate.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_scalar_default_firstprivate.F90/serial_scalar_default_firstprivate.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_scalar_default_firstprivate.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_scalar_default_firstprivate.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_scalar_default_firstprivate.F90, Line = 27 \n  A loop starting at line 27 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_scalar_default_firstprivate.F90, Line = 33 \n  A loop starting at line 33 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_scalar_default_firstprivate.F90, Line = 62 \n  A loop starting at line 62 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 89 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.316011531278491
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01697892090305686,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_switch.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_switch.F90/serial_switch.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 20 \n  A loop starting at line 20 was fused with the loop starting at line 18.\n\n\nftn-6231 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 20 \n  A statement was replaced by a library call.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 45 \n  A loop starting at line 45 was fused with the loop starting at line 19.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_switch.F90, Line = 88 \n  A loop starting at line 88 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0044 seconds\nCray Fortran : 115 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3665982480160892
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017362041864544153,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_wait.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_wait.F90/serial_wait.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_wait.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_wait.F90, Line = 18 \n  A loop starting at line 18 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_wait.F90, Line = 24 \n  A loop starting at line 24 was fused with the loop starting at line 17.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_wait.F90, Line = 30 \n  A loop starting at line 30 was fused with the loop starting at line 17.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_wait.F90, Line = 55 \n  A loop starting at line 55 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0040 seconds\nCray Fortran : 82 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3163364981301129
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01686324877664447,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "serial_while_loop.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/serial_while_loop.F90/serial_while_loop.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 18.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90, Line = 28 \n  A loop starting at line 28 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90, Line = 28 \n  A loop starting at line 28 was vectorized.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90, Line = 39 \n  A loop starting at line 39 was unrolled 6 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90, Line = 39 \n  A loop starting at line 39 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/serial_while_loop.F90, Line = 66 \n  A loop starting at line 66 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0041 seconds\nCray Fortran : 93 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3660515430383384
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016844401136040688,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_default_async.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_default_async.F90/set_default_async.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 20 \n  A loop starting at line 20 was unrolled 2 times.\n\n\nftn-6209 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 20 \n  A loop starting at line 20 was partially vectorized.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 21 \n  A loop starting at line 21 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 22 \n  A loop starting at line 22 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 23 \n  A loop starting at line 23 was fused with the loop starting at line 19.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 29 \n  A loop starting at line 29 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 36 \n  A loop starting at line 36 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 42 \n  A loop starting at line 42 was fused with the loop starting at line 20.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 49 \n  A loop starting at line 49 was fused with the loop starting at line 20.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90, Line = 74 \n  A loop starting at line 74 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0061 seconds\nCray Fortran : 101 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20695/set_default_async_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31628411589190364
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_default_async.F90/set_default_async.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_default_async.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31573255313560367
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016952419187873602,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_device_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_num.F90/set_device_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6004 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90, Line = 26 \n  A loop starting at line 26 was fused with the loop starting at line 25.\n\n\nftn-6007 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90, Line = 31 \n  A loop starting at line 31 was interchanged with the loop starting at line 36.\n\n\nftn-6002 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90, Line = 31 \n  A loop starting at line 31 was eliminated by optimization.\n\n\nftn-6005 ftn: SCALAR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90, Line = 36 \n  A loop starting at line 36 was unrolled 2 times.\n\n\nftn-6204 ftn: VECTOR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90, Line = 36 \n  A loop starting at line 36 was vectorized.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90, Line = 79 \n  A loop starting at line 79 was unwound.\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0063 seconds\nCray Fortran : 106 source lines\nCray Fortran : 0 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20727/set_device_num_1.o: in function `test1_':\nThe Cpu Module:(.text+0x93): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x9b): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x150): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x160): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x168): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1be): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x1c6): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x214): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0x21c): undefined reference to `acc_get_num_devices'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20727/set_device_num_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.366256067994982
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_num.F90/set_device_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3157054013572633
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01737629808485508,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_device_type.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20759/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20759/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20759/set_device_type_1.o:(.data+0x80): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3170015010982752
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20774/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20774/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31557203363627195
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20788/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20788/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3157134158536792
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20802/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20802/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3157352292910218
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20816/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20816/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31551651610061526
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20830/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20830/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.32887668209150434
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20844/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20844/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3165627848356962
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type.F90/set_device_type.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20858/set_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20858/set_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.32613098295405507
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_device_type_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 9 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"DEVICE_NUM\".\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 32, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0095 seconds\nCray Fortran : 145 source lines\nCray Fortran : 4 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1666300008073449
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 32, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1650939960964024
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 9 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"DEVICE_NUM\".\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16534504992887378
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 32, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16493700398132205
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 9 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"DEVICE_NUM\".\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 32, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1654669363051653
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 32, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16491156397387385
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-113 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 9 \n  IMPLICIT NONE is specified in the local scope, therefore an explicit type must be specified for data object \"DEVICE_NUM\".\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 11, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1654301956295967
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num.F90/set_device_type_num.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 32, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num.F90, Line = 53, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0074 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16501493426039815
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_device_type_num_nvidia.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num_nvidia.F90/set_device_type_num_nvidia.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num_nvidia.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 61 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16566189285367727
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_num_nvidia.F90/set_device_type_num_nvidia.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_num_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31548392213881016
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.017442646902054548,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "set_device_type_nvidia.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_nvidia.F90/set_device_type_nvidia.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_nvidia.F90, Line = 30 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_nvidia.F90, Line = 30 \n  A loop starting at line 30 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SET_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_nvidia.F90, Line = 31 \n  Leaf \"test1\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_20991/set_device_type_nvidia_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3166991686448455
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/set_device_type_nvidia.F90/set_device_type_nvidia.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/set_device_type_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31546776089817286
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01684678578749299,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown.F90/shutdown.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown.F90, Line = 30 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown.F90, Line = 30 \n  A loop starting at line 30 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown.F90, Line = 31 \n  Leaf \"test1\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21023/shutdown_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3165263142436743
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown.F90/shutdown.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.31543417694047093
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01691485708579421,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_device_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_num.F90/shutdown_device_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-6008 ftn: SCALAR MAIN, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_num.F90, Line = 33 \n  A loop starting at line 33 was unwound.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21056/shutdown_device_num_1.o: in function `test1_':\nThe Cpu Module:(.text+0x4): undefined reference to `acc_get_device_type'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: The Cpu Module:(.text+0xc): undefined reference to `acc_get_device_num'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21056/shutdown_device_num_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3159134928137064
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_num.F90/shutdown_device_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3154429029673338
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.033225759863853455,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_device_type.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21089/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21089/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21089/shutdown_device_type_1.o:(.data+0x80): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3160302578471601
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21103/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21103/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3154098601080477
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21117/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21117/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3156225709244609
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21131/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21131/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3155052834190428
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21145/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21145/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31668161507695913
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21159/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21159/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31557365600019693
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 70 \n  A loop starting at line 70 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 71 \n  Leaf \"test1\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21173/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21173/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31568482983857393
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type.F90/shutdown_device_type.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 79 \n  A loop starting at line 79 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 80 \n  Leaf \"test2\" was inlined.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 88 \n  A loop starting at line 88 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type.F90, Line = 89 \n  Leaf \"test3\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21187/shutdown_device_type_1.o:(.data+0x0): undefined reference to `openacc_'\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21187/shutdown_device_type_1.o:(.data+0x40): undefined reference to `openacc_'\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.31569206481799483
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_device_type_num.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0096 seconds\nCray Fortran : 145 source lines\nCray Fortran : 3 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1660007261671126
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16496728220954537
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F902 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16506795631721616
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F903 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.1649440568871796
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT3 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F904 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16536610014736652
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F905 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16545941215008497
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT2 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F906 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16510216193273664
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num.F90/shutdown_device_type_num.F907 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST2, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 33, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\n\nftn-1307 ftn: ERROR TEST3, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num.F90, Line = 54, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0075 seconds\nCray Fortran : 136 source lines\nCray Fortran : 2 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": true,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16525456588715315
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": true,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_device_type_num_nvidia.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num_nvidia.F90/shutdown_device_type_num_nvidia.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-1307 ftn: ERROR TEST1, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num_nvidia.F90, Line = 12, Column = 41 \n  The kind (4) of this actual argument does not match that of its associated dummy argument (8).\n\nCray Fortran : Version 15.0.0 (20221026200610_324a8e7de6a18594c06a0ee5d8c0eda2109c6ac6)\nCray Fortran : Compile time:  0.0053 seconds\nCray Fortran : 61 source lines\nCray Fortran : 1 errors, 1 warnings, 0 other messages, 0 ansi\nCray Fortran : \"explain ftn-message number\" gives more information about each message.\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.16654591914266348
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_num_nvidia.F90/shutdown_device_type_num_nvidia.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_num_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3152226391248405
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.01712758792564273,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ],
        "shutdown_device_type_nvidia.F90": [
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_nvidia.F90/shutdown_device_type_nvidia.F900 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n\n\nftn-3182 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_nvidia.F90, Line = 30 \n  Loop has been flattened.\n\n\nftn-6002 ftn: SCALAR SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_nvidia.F90, Line = 30 \n  A loop starting at line 30 was eliminated by optimization.\n\n\nftn-3001 ftn: IPA SHUTDOWN_DEVICE_TYPE, File = ../../../autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_nvidia.F90, Line = 31 \n  Leaf \"test1\" was inlined.\n\n/opt/cray/pe/cce/15.0.0/binutils/x86_64/x86_64-pc-linux-gnu/bin/ld: /tmp/pe_21322/shutdown_device_type_nvidia_1.o:(.data+0x0): undefined reference to `openacc_'\n",
                    "export": false,
                    "output": "",
                    "result": 1,
                    "runtime": 0.3164608688093722
                },
                "post-compile commands": [],
                "pre-compile commands": [],
                "runtime": {
                    "export": false,
                    "system": 1
                },
                "testsuite_id": 1
            },
            {
                "compilation": {
                    "command": "ftn -h acc,noomp -h msgs -DT1 -o /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/build/shutdown_device_type_nvidia.F90/shutdown_device_type_nvidia.F901 /autofs/nccs-svm1_home1/chrismun/OpenACCV-V/Tests/shutdown_device_type_nvidia.F90",
                    "config": 1,
                    "errors": "ftn-1350 ftn: WARNING in command line\n  Command line option \"-hacc\" is being ignored because an accelerator target has not been specified.\n",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.3155942661687732
                },
                "post-compile commands": [],
                "post-run commands": [],
                "pre-compile commands": [],
                "pre-run commands": [],
                "runtime": {
                    "errors": "",
                    "export": true,
                    "output": "",
                    "result": 0,
                    "runtime": 0.016912654042243958,
                    "system": 1
                },
                "testsuite_id": 1
            }
        ]
    },
    "summary": {
        "1": {
            "1": {
                "1": {
                    "acc_async_test.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "acc_async_test_all.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "acc_copyin.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        },
                        "5": {
                            "result": "Compilation Failure",
                            "run_index": 5
                        },
                        "6": {
                            "result": "Compilation Failure",
                            "run_index": 6
                        },
                        "7": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "acc_copyin_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        },
                        "5": {
                            "result": "Compilation Failure",
                            "run_index": 5
                        }
                    },
                    "acc_copyin_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        },
                        "5": {
                            "result": "Compilation Failure",
                            "run_index": 5
                        }
                    },
                    "acc_copyin_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        },
                        "5": {
                            "result": "Compilation Failure",
                            "run_index": 5
                        },
                        "6": {
                            "result": "Compilation Failure",
                            "run_index": 6
                        },
                        "7": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "acc_copyout.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        },
                        "5": {
                            "result": "Compilation Failure",
                            "run_index": 5
                        }
                    },
                    "acc_copyout_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_copyout_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_copyout_finalize.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_copyout_finalize_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_copyout_finalize_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_copyout_finalize_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_copyout_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_create.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        }
                    },
                    "acc_create_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_create_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_create_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        }
                    },
                    "acc_delete.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_finalize.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_finalize_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_finalize_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_finalize_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_delete_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_deviceptr.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_free.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_default_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_device_num.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_num_devices.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_property.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_get_property_string.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_hostptr.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_init.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_is_present.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_is_present_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_malloc.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_map_data.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_memcpy_d2d.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_on_device.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_set_default_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_set_device_num.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_set_device_type.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_shutdown.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_unmap_data.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_update_device.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_device_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_device_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_device_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_self.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_self_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_self_async_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_update_self_with_len.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "acc_wait.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_wait_all.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_wait_all_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "acc_wait_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_and_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_divided_x.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_eqv_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_minus_x.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_neqv_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_or_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_plus_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_expr_times_x.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_iand_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_iand_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_ior_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_ior_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_ixor_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_ixor_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_max_expr_list_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_max_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_max_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_max_x_expr_list.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_min_expr_list_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_min_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_min_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_min_x_expr_list.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_and_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_divided_expr.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_eqv_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_minus_expr.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_neqv_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_or_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_plus_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_assign_x_times_expr.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_and_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_divided_x_assign.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_eqv_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_minus_x_assign.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_neqv_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_or_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_plus_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_expr_times_x_assign.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_iand_expr_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_iand_x_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_ior_expr_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_ior_x_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_ixor_expr_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_ixor_x_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_max_expr_list_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_max_expr_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_max_x_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_max_x_expr_list_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_min_expr_list_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_min_expr_x_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_min_x_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_min_x_expr_list_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_and_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_divided_expr_assign.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_eqv_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_minus_expr_assign.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_neqv_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_or_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_plus_expr_assign.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_capture_x_times_expr_assign.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_and_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_and_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_divided_x.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_divided_x_end.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_eqv_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_eqv_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_minus_x.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_minus_x_end.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_neqv_x.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_neqv_x_end.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_or_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_or_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_plus_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_plus_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_times_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_expr_times_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_iand_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_iand_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_iand_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_iand_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ior_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ior_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ior_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ior_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ixor_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ixor_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ixor_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_ixor_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_expr_list_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_expr_list_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_x_expr_list.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_max_x_expr_list_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_expr_list_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_expr_list_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_x_expr_list.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_min_x_expr_list_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_and_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_and_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_divided_x.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_divided_x_end.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_eqv_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_eqv_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_minus_x.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_minus_x_end.F90": {
                        "1": {
                            "result": "Runtime Error",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_neqv_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_neqv_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_or_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_or_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_plus_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_plus_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_times_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_expr_times_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_iand_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_iand_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_iand_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_iand_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ior_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ior_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ior_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ior_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ixor_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ixor_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ixor_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_ixor_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_expr_list_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_expr_list_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_x_expr_list.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_max_x_expr_list_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_expr_list_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_expr_list_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_expr_x.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_expr_x_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_x_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_x_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_x_expr_list.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_min_x_expr_list_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_and_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_and_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_divided_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_divided_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_eqv_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_eqv_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_minus_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_minus_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_neqv_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_neqv_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_or_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_or_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_plus_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_plus_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_times_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_update_x_times_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_and_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_and_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_divided_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_divided_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_eqv_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_eqv_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_minus_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_minus_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_neqv_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_neqv_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_or_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_or_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_plus_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_plus_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_times_expr.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "atomic_x_times_expr_end.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_copy_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_copyin_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_copyout_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_copyout_reference_counts.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_create.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_create_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_present_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_with_changing_subscript.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "data_with_derived_type.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "declare_copyin.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        }
                    },
                    "declare_create.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        }
                    },
                    "declare_function_scope_copy.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        }
                    },
                    "declare_function_scope_copyin.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "declare_function_scope_copyout.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "declare_function_scope_create.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "declare_function_scope_present.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 2
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 3
                        }
                    },
                    "enter_data_copyin_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "enter_data_create.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "enter_data_create_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "enter_data_if.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 6
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 6
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 6
                        },
                        "4": {
                            "result": "Pass",
                            "run_index": 6
                        },
                        "5": {
                            "result": "Pass",
                            "run_index": 6
                        }
                    },
                    "exit_data.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "exit_data_copyout_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "exit_data_copyout_reference_counts.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "exit_data_delete_no_lower_bound.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "exit_data_finalize.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "init.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "init_device_num.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "init_device_type.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "init_device_type_num.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "init_device_type_num_nvidia.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "init_device_type_nvidia.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "kernels_async.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_copyin.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_copyout.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_create.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_default_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_default_present.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_if.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 5
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 5
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 5
                        },
                        "4": {
                            "result": "Compilation Failure",
                            "run_index": 4
                        }
                    },
                    "kernels_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_independent.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_add_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_add_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_add_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_and_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_and_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_and_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitand_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitand_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitand_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitor_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitor_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitor_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitxor_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitxor_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_bitxor_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_max_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_max_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_max_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_min_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_min_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_min_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_multiply_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_multiply_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_multiply_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_or_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_or_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_reduction_or_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_seq.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_tile.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_vector_blocking.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_loop_worker_blocking.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_num_gangs.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "kernels_num_workers.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_present.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_scalar_default_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_vector_length.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "kernels_wait.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_collapse.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "loop_no_collapse.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_async.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_copyin.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_copyout.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_create.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_default_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_default_present.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_firstprivate.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_if.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_async.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_auto.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_block.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_gang.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_add_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_add_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_add_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_and_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_and_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_and_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitand_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitand_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitand_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitor_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitor_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitor_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitxor_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitxor_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_bitxor_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_max_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_max_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_max_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_min_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_min_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_min_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_multiply_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_multiply_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_multiply_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_or_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_or_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_reduction_or_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_seq.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_tile.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_vector.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_vector_blocking.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_worker.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_loop_worker_blocking.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_present.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_private.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_reduction.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_scalar_default_firstprivate.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_switch.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_wait.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "parallel_while_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_async.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_copyin.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_copyout.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "serial_create.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_default_copy.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_default_present.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_firstprivate.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_if.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "2": {
                            "result": "Pass",
                            "run_index": 0
                        },
                        "3": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_async.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_auto.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_gang.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_gang_blocking.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_add_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_add_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_add_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_and_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_and_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_and_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitand_general.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitand_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitand_vector_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitor_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitor_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitor_vector_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitxor_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitxor_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_bitxor_vector_loop.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_max_general.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_max_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_max_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_min_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_min_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_min_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_multiply_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_multiply_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_multiply_vector_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_or_general.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_or_loop.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_reduction_or_vector_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_seq.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_tile.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_vector.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_vector_blocking.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "serial_loop_worker.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_loop_worker_blocking.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "serial_present.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_private.F90": {
                        "1": {
                            "result": "Runtime Failure",
                            "run_index": 0
                        }
                    },
                    "serial_reduction.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_scalar_default_firstprivate.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_switch.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_wait.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "serial_while_loop.F90": {
                        "1": {
                            "result": "Pass",
                            "run_index": 0
                        }
                    },
                    "set_default_async.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "set_device_num.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "set_device_type.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "set_device_type_num.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "set_device_type_num_nvidia.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "set_device_type_nvidia.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "shutdown.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "shutdown_device_num.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "shutdown_device_type.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "shutdown_device_type_num.F90": {
                        "1": {
                            "result": "Unknown Section Result",
                            "run_index": -1
                        },
                        "2": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        },
                        "3": {
                            "result": "Compilation Failure",
                            "run_index": 7
                        }
                    },
                    "shutdown_device_type_num_nvidia.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    },
                    "shutdown_device_type_nvidia.F90": {
                        "1": {
                            "result": "Compilation Failure",
                            "run_index": 0
                        }
                    }
                }
            }
        }
    },
    "systems": [
        {
            "id": 1,
            "machine": "x86_64",
            "name": null,
            "node": "frontier06642",
            "processor": "x86_64",
            "release": "5.14.21-150400.24.46_12.0.83-cray_shasta_c",
            "version": "#1 SMP Tue May 23 03:16:47 UTC 2023 (c6cda89)"
        }
    ],
    "testsuites": [
        {
            "acc_async_test.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(d)\n        c = 0\n        e = 0\n        \n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT)) async(1)\n        !$acc enter data copyin(d(1:LOOPCOUNT)) create(e(1:LOOPCOUNT)) async(2)\n        !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT)) async(1)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc parallel present(c(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) async(1) wait(2)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            e(x) = c(x) + d(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(e(1:LOOPCOUNT)) async(1)\n\n\n        DO WHILE (acc_async_test(1) .eqv. .FALSE.)\n          CONTINUE\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .GT. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:async,runtime,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e\n        INTEGER :: errors\n        errors = 0\n        \n        !Initialization\n        CALL RANDOM_SEED()\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(d)\n        c = 0\n        e = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT), e(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT)) async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel present(c(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x) = c(x) + d(x)\n            END DO\n          !$acc end parallel\n          DO WHILE (acc_async_test(1) .eqv. .FALSE.)\n            CONTINUE\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .GT. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n      LOGICAL :: test2\n#endif\n#ifndef T2\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test2()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 1\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "async",
                            "runtime",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e\n        INTEGER :: errors, async_val\n        INTEGER :: acc_get_default_async\n        async_val = acc_get_default_async()\n        errors = 0\n\n        !Initialization\n        CALL RANDOM_SEED()\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(d)\n        c = 0\n        e = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT), e(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT)) async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel present(c(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x) = c(x) + d(x)\n            END DO\n          !$acc end parallel\n          DO WHILE (acc_async_test(async_val) .eqv. .FALSE.)\n            CONTINUE\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n      LOGICAL :: test3\n#endif\n#ifndef T3\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test3()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 2\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_async_test_all.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c, d, e !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(d)\n        c = 0\n        e = 0\n\n        !$acc enter data create(a(1:LOOPCOUNT,1:10), b(1:LOOPCOUNT,1:10), c(1:LOOPCOUNT,1:10), d(1:LOOPCOUNT,1:10), e(1:LOOPCOUNT,1:10))\n        DO y = 1, 10\n          !$acc update device(a(1:LOOPCOUNT,y:y), b(1:LOOPCOUNT,y:y), d(1:LOOPCOUNT,y:y)) async(y)\n          !$acc parallel present(a(1:LOOPCOUNT,y:y), b(1:LOOPCOUNT,y:y), c(1:LOOPCOUNT,y:y)) async(y)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x, y) = a(x, y) + b(x, y)\n            END DO\n          !$acc end parallel\n          !$acc parallel present(c(1:LOOPCOUNT,y:y), d(1:LOOPCOUNT,y:y),e(1:LOOPCOUNT,y:y)) async(y)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x, y) = c(x, y) + d(x, y)\n            END DO\n          !$acc end parallel\n          !$acc update host(e(1:LOOPCOUNT,y:y)) async(y)\n        END DO\n\n        DO WHILE (acc_async_test_all() .eqv. .FALSE.)\n          CONTINUE\n        END DO\n\n        DO y = 1, 10\n          DO x = 1, LOOPCOUNT\n            IF (abs(e(x, y) - (a(x, y) + b(x, y) + d(x, y))) .GT. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:async,runtime,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c, d, e !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(d)\n        c = 0\n        e = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT,1:10), d(1:LOOPCOUNT, 1:10)) copyout(c(1:LOOPCOUNT, 1:10), e(1:LOOPCOUNT, 1:10))\n          DO x = 1, 10\n            !$acc parallel present(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10), c(1:LOOPCOUNT, 1:10)) async(x)\n              !$acc loop\n              DO y = 1, LOOPCOUNT\n                c(y, x) = a(y, x) + b(y, x)\n              END DO\n            !$acc end parallel\n            !$acc parallel present(c(1:LOOPCOUNT, 1:10), d(1:LOOPCOUNT, 1:10), e(1:LOOPCOUNT, 1:10)) async(x)\n              !$acc loop\n              DO y = 1, LOOPCOUNT\n                e(y, x) = c(y, x) + d(y, x)\n              END DO\n            !$acc end parallel\n          END DO\n          DO WHILE (acc_async_test_all() .eqv. .FALSE.)\n            CONTINUE\n          END DO\n        !$acc end data\n\n        DO x = 1, 10\n          DO y = 1, LOOPCOUNT\n            IF (abs(e(y, x) - (a(y, x) + b(y, x) + d(y, x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n      LOGICAL :: test2\n#endif\n#ifndef T2\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test2()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 1\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "async",
                            "runtime",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:async,runtime,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c, d, e !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(d)\n        c = 0\n        e = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10), d(1:LOOPCOUNT, 1:10)) copyout(c(1:LOOPCOUNT, 1:10), e(1:LOOPCOUNT, 1:10))\n          DO x = 1, 10\n            CALL acc_set_default_async(x)\n            !$acc parallel present(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10), c(1:LOOPCOUNT, 1:10)) async\n              !$acc loop\n              DO y = 1, LOOPCOUNT\n                c(y, x) = a(y, x) + b(y, x)\n              END DO\n            !$acc end parallel\n            !$acc parallel present(c(1:LOOPCOUNT, 1:10), d(1:LOOPCOUNT, 1:10), e(1:LOOPCOUNT, 1:10)) async\n              !$acc loop\n              DO y = 1, LOOPCOUNT\n                e(y, x) = c(y, x) + d(y, x)\n              END DO\n            !$acc end parallel\n          END DO\n          DO WHILE (acc_async_test_all() .eqv. .FALSE.)\n            CONTINUE\n          END DO\n        !$acc end data\n\n        DO x = 1, 10\n          DO y = 1, LOOPCOUNT\n            IF (abs(e(y, x) - (a(y, x) + b(y, x) + d(y, x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n      LOGICAL :: test3\n#endif\n#ifndef T3\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test3()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 2\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "async",
                            "runtime",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyin.F90": {
                "num tests": 7,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copy(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 1\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(a(1:LOOPCOUNT))\n        CALL acc_copyout(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,data,executable-data,devonly,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_copy, b_copy !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n\n        devtest(1) = .TRUE.\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        IF (devtest(1) .eqv. .TRUE.) THEN\n          SEEDDIM(1) = 1\n#         ifdef SEED\n          SEEDDIM(1) = SEED\n#         endif\n          CALL RANDOM_SEED(PUT=SEEDDIM)\n          CALL RANDOM_NUMBER(a)\n          a_copy(:) = a(:)\n          CALL RANDOM_NUMBER(b)\n          b_copy(:) = b(:)\n          c = 0\n\n          CALL acc_copyin(a(1:LOOPCOUNT))\n          CALL acc_copyin(b(1:LOOPCOUNT))\n\n          a = 0\n          b = 0\n\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - a_copy(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n            IF (abs(b(x) - b_copy(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,executable-data,construct-independent,compatibility-features,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_pcopyin(a(1:LOOPCOUNT))\n        CALL acc_pcopyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "executable-data",
                            "construct-independent",
                            "compatibility-features"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "5": {
                        "content": "#ifndef T5\n!T5:runtime,executable-data,construct-independent,compatibility-features,V:2.0-2.7\n      LOGICAL FUNCTION test5()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        \n        CALL acc_present_or_copyin(a(1:LOOPCOUNT))\n        CALL acc_present_or_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test5 = .FALSE.\n        ELSE\n          test5 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T5\n        LOGICAL :: test5\n#endif\n#ifndef T5\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test5()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 4\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "executable-data",
                            "construct-independent",
                            "compatibility-features"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "6": {
                        "content": "#ifndef T6\n!T6:runtime,data,executable-data,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test6()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test6 = .FALSE.\n        ELSE\n          test6 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T6\n        LOGICAL :: test6\n#endif\n#ifndef T6\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test6()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 5\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "7": {
                        "content": "#ifndef T7\n!T7:runtime,data,executable-data,construct-independent,reference-counting,devonly,V:2.5-2.7\n      LOGICAL FUNCTION test7()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_copy, b_copy !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n\n        devtest(1) = .TRUE.\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        IF (devtest(1) .eqv. .TRUE.) THEN\n          !Initialization\n          SEEDDIM(1) = 1\n#         ifdef SEED\n          SEEDDIM(1) = SEED\n#         endif\n          CALL RANDOM_SEED(PUT=SEEDDIM)\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n          a_copy = a\n          b_copy = b\n\n          CALL acc_copyin(a(1:LOOPCOUNT))\n          CALL acc_copyin(b(1:LOOPCOUNT))\n\n          a = 0\n          b = 0\n\n          CALL acc_copyin(a(1:LOOPCOUNT))\n          CALL acc_copyin(b(1:LOOPCOUNT))\n\n          !$acc data copyout(c(1:LOOPCOUNT))\n            !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a_copy(x) + b_copy(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test7 = .FALSE.\n        ELSE\n          test7 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T7\n        LOGICAL :: test7\n#endif\n#ifndef T7\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test7()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 6\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "reference-counting",
                            "devonly"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyin_async.F90": {
                "num tests": 5,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a_host = a\n        b_host = b\n\n        CALL acc_copyin_async(a(1:LOOPCOUNT), 1)\n        CALL acc_copyin_async(b(1:LOOPCOUNT), 2)\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel async(1) present(a(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2) present(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2) wait(1) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a_host(x)*a_host(x) + b_host(x)*b_host(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin_async(a(1:LOOPCOUNT), 1)\n        CALL acc_copyin_async(b(1:LOOPCOUNT), 2)\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          DO WHILE (acc_async_test_all() .eqv. .FALSE.)\n            CONTINUE\n          END DO\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n      LOGICAL :: test2\n#endif\n#ifndef T2\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test2()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 1\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin_async(a(1:LOOPCOUNT), 1)\n        CALL acc_copyin_async(b(1:LOOPCOUNT), 2)\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc wait\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n      LOGICAL :: test3\n#endif\n#ifndef T3\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test3()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 2\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,data,executable-data,async,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        e = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT)) copyout(e(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT)) async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_copyin_async(c(1:LOOPCOUNT), 1)\n          !$acc exit data delete(c(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT)) async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x) = c(x) + d(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n      LOGICAL :: test4\n#endif\n#ifndef T4\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test4()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 3\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "5": {
                        "content": "#ifndef T5\n!T5:runtime,data,executable-data,async,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test5()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_copy, b_copy !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        a_copy = a\n        CALL RANDOM_NUMBER(b)\n        b_copy = b\n        c = 0\n\n        CALL acc_copyin_async(a(1:LOOPCOUNT), 1)\n        CALL acc_copyin_async(b(1:LOOPCOUNT), 2)\n\n        a = 0\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc wait\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a_copy(x) + b_copy(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test5 = .FALSE.\n        ELSE\n          test5 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T5\n      LOGICAL :: test5\n#endif\n#ifndef T5\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test5()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 4\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyin_async_with_len.F90": {
                "num tests": 5,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a_host = a\n        b_host = b\n\n        CALL acc_copyin_async(a(1), LOOPCOUNT*8, 1)\n        CALL acc_copyin_async(b(1), LOOPCOUNT*8, 2)\n\n        !$acc data copyout(c(1:LOOPCOUNT)) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel wait(1, 2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a_host(x)*a_host(x) + b_host(x)*b_host(x))) .gt. 4*PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin_async(a(1), LOOPCOUNT*8, 1)\n        CALL acc_copyin_async(b(1), LOOPCOUNT*8, 2)\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          DO WHILE (acc_async_test_all() .eqv. .FALSE.)\n            CONTINUE\n          END DO\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin_async(a(1), LOOPCOUNT*8, 1)\n        CALL acc_copyin_async(b(1), LOOPCOUNT*8, 2)\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc wait\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEn\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,data,executable-data,async,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        e = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT)) copyout(e(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT)) async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_copyin_async(c(1), LOOPCOUNT*8, 1)\n          !$acc exit data delete(c(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT)) async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x) = c(x) + d(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "5": {
                        "content": "#ifndef T5\n!T5:runtime,data,executable-data,async,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test5()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initialization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin_async(a(1), LOOPCOUNT*8, 1)\n        CALL acc_copyin_async(b(1), LOOPCOUNT*8, 2)\n\n        !$acc data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc wait\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test5 = .FALSE.\n        ELSE\n          test5 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T5\n        LOGICAL :: test5\n#endif\n#ifndef T5\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test5()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 4\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyin_with_len.F90": {
                "num tests": 7,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL acc_copyin(a(1), LOOPCOUNT*8)\n        CALL acc_copyin(b(1), LOOPCOUNT*8)\n        !$acc data copy(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc Loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(a(1:LOOPCOUNT))\n        CALL acc_copyout(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1), LOOPCOUNT*8)\n        CALL acc_copyin(b(1), LOOPCOUNT*8)\n        !$acc data copy(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T2\n      LOGICAL :: test2\n#endif\n#ifndef T2\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test2()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 1\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,data,executable-data,devonly,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_copy, b_copy !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1) :: devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        IF (devtest(1) .eq. 1) THEN\n          SEEDDIM(1) = 1\n#         ifdef SEED\n          SEEDDIM(1) = SEED\n#         endif\n          CALL RANDOM_SEED(PUT=SEEDDIM)\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          a_copy = a\n          b_copy = b\n          c = 0\n\n          CALL acc_copyin(a(1), LOOPCOUNT*8)\n          CALL acc_copyin(b(1), LOOPCOUNT*8)\n\n          a = 0\n          b = 0\n\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          CALL acc_copyout(a(1:LOOPCOUNT))\n          CALL acc_copyout(b(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - a_copy(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n            IF (abs(b(x) - b_copy(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T3\n      LOGICAL :: test3\n#endif\n#ifndef T3\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test3()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 2\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,compatibility-features,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_pcopyin(a(1), LOOPCOUNT*8)\n        CALL acc_pcopyin(b(1), LOOPCOUNT*8)\n\n        !$acc data copyout(c(1:LOOPCOUNT)) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T4\n      LOGICAL :: test4\n#endif\n#ifndef T4\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test4()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 3\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "compatibility-features",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "5": {
                        "content": "#ifndef T5\n!T5:runtime,compatibility-features,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test5()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_present_or_copyin(a(1), LOOPCOUNT*8)\n        CALL acc_present_or_copyin(b(1), LOOPCOUNT*8)\n\n        !$acc data copyout(c(1:LOOPCOUNT)) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test5 = .FALSE.\n        ELSE\n          test5 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T5\n      LOGICAL :: test5\n#endif\n#ifndef T5\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test5()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 4\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "compatibility-features",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "6": {
                        "content": "#ifndef T6\n!T6:runtime,data,executable-data,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test6()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1), LOOPCOUNT*8)\n        CALL acc_copyin(a(1), LOOPCOUNT*8)\n        CALL acc_copyin(b(1), LOOPCOUNT*8)\n        CALL acc_copyin(b(1), LOOPCOUNT*8)\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) + (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test6 = .FALSE.\n        ELSE\n          test6 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T6\n      LOGICAL :: test6\n#endif\n#ifndef T6\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test6()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 5\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "7": {
                        "content": "#ifndef T7\n!T7:runtime,data,executable-data,construct-independent,reference-counting,devonly,V:2.5-2.7\n      LOGICAL FUNCTION test7()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_copy, b_copy !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n\n        devtest(1) = .TRUE.\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        IF (devtest(1) .eqv. .TRUE.) THEN\n          SEEDDIM(1) = 1\n#         ifdef SEED\n          SEEDDIM(1) = SEED\n#         endif\n          CALL RANDOM_SEED(PUT=SEEDDIM)\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n          a_copy = a\n          b_copy = b\n\n          CALL acc_copyin(a(1), LOOPCOUNT*8)\n          CALL acc_copyin(b(1), LOOPCOUNT*8)\n\n          a = 0\n          b = 0\n\n          CALL acc_copyin(a(1), LOOPCOUNT*8)\n          CALL acc_copyin(b(1), LOOPCOUNT*8)\n\n          !$acc data copyout(c(1:LOOPCOUNT))\n            !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n        IF (errors .eq. 0) THEN\n          test7 = .FALSE.\n        ELSE\n          test7 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T7\n      LOGICAL :: test7\n#endif\n#ifndef T7\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test7()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 6\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "reference-counting",
                            "devonly"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout.F90": {
                "num tests": 5,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END FUNCTION\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,data,executable-data,construct-independent,devonly,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n\n        devtest(1) = .TRUE.\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        IF (devtest(1) .eqv. .TRUE.) THEN\n          SEEDDIM(1) = 1\n#         ifdef SEED\n          SEEDDIM(1) = SEED\n#         endif\n          CALL RANDOM_SEED(PUT=SEEDDIM)\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc enter data copyin(c(1:LOOPCOUNT))\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_copyout(c(1:LOOPCOUNT))\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "devonly",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,data,executable-data,construct-independent,reference-counting,V:2.5-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(c(1:LOOPCOUNT))\n        CALL acc_copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "reference-counting"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "5": {
                        "content": "#ifndef T5\n!T5:runtime,data,executable-data,construct-independent,reference-counting,devonly,V:2.5-2.7\n      LOGICAL FUNCTION test5()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        IF (devtest(1) .eqv. .TRUE.) THEN\n          SEEDDIM(1) = 1\n#         ifdef SEED\n          SEEDDIM(1) = SEED\n#         endif\n          CALL RANDOM_SEED(PUT=SEEDDIM)\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc enter data create(c(1:LOOPCOUNT))\n          !$acc enter data create(c(1:LOOPCOUNT))\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          CALL acc_copyout(c(1:LOOPCOUNT))\n          !$acc exit data delete(c(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test5 = .FALSE.\n        ELSE\n          test5 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T5\n        LOGICAL :: test5\n#endif\n#ifndef T5\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test5()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 4\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "reference-counting",
                            "devonly"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) present(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_copyout_async(c(1:LOOPCOUNT), 1)\n          CALL acc_copyout_async(f(1:LOOPCOUNT), 2)\n        !$acc end data\n        !$acc wait\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_async_with_len.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) present(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_copyout_async(c(1), LOOPCOUNT*8, 1)\n          CALL acc_copyout_async(f(1), LOOPCOUNT*8, 2)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_finalize.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc enter data create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout_finalize(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_finalize_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n        !$acc enter data create(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) present(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_copyout_finalize_async(c(1:LOOPCOUNT), 1)\n          CALL acc_copyout_finalize_async(f(1:LOOPCOUNT), 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_finalize_async_with_len.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n        !$acc enter data create(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) present(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_copyout_finalize_async(c(1), LOOPCOUNT*8, 1)\n          CALL acc_copyout_finalize_async(f(1), LOOPCOUNT*8, 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_finalize_with_len.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc enter data create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout_finalize(c(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_copyout_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(c(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(c(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_create.F90": {
                "num tests": 4,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c= 0\n\n        CALL acc_create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,compatibility-features,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER:: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_pcreate(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "compatibility-features",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,compatibility-features,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER:: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_present_or_create(c(1:LOOPCOUNT))\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "compatibility-features",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_create_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n          CALL acc_create_async(c(1:LOOPCOUNT), 1)\n          CALL acc_create_async(f(1:LOOPCOUNT), 2)\n          !$acc data present(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                f(x) = d(x) + e(x)\n              END DO\n            !$acc end parallel\n            !$acc wait\n          !$acc end data\n        !$acc end data\n\n        !$acc exit data copyout(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_create_async_with_len.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n          CALL acc_create_async(c(1), LOOPCOUNT*8, 1)\n          CALL acc_create_async(f(1), LOOPCOUNT*8, 2)\n          !$acc data present(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                f(x) = d(x) + e(x)\n              END DO\n            !$acc end parallel\n            !$acc wait\n          !$acc end data\n        !$acc end data\n\n        !$acc exit data copyout(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_create_with_len.F90": {
                "num tests": 4,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n        #ifdef SEED\n        SEEDDIM(1) = SEED\n        #endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_create(c(1), LOOPCOUNT*8)\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel present(c(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER:: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER :: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#ifdef SEED\n        SEEDDIM(1) = SEED\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,compatibility-features,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER:: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#ifdef SEED\n        SEEDDIM(1) = SEED\n#endif\n",
                        "tags": [
                            "runtime",
                            "compatibility-features",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:runtime,compatibility-features,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER:: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#ifdef SEED\n        SEEDDIM(1) = SEED\n#endif\n",
                        "tags": [
                            "runtime",
                            "compatibility-features",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete(a(1:LOOPCOUNT))\n        CALL acc_delete(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER:: x\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete(a(1:LOOPCOUNT))\n        CALL acc_delete(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_async.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_delete_async(a(1:LOOPCOUNT), 1)\n          CALL acc_delete_async(b(1:LOOPCOUNT), 1)\n          CALL acc_delete_async(d(1:LOOPCOUNT), 2)\n          CALL acc_delete_async(e(1:LOOPCOUNT), 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c!Data\n        INTEGER,DIMENSION(1) :: devtest\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        IF (devtest(1) == 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          CALL acc_delete_async(c(1:LOOPCOUNT), 1)\n          !$acc enter data copyin(c(1:LOOPCOUNT)) async(1)\n          !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_async_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        INTEGER :: errors = 0\n\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_delete_async(a(1), LOOPCOUNT*8, 1)\n          CALL acc_delete_async(b(1), LOOPCOUNT*8, 1)\n          CALL acc_delete_async(d(1), LOOPCOUNT*8, 2)\n          CALL acc_delete_async(e(1), LOOPCOUNT*8, 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER,DIMENSION(1):: devtest\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n        IF (devtest(1) == 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          CALL acc_delete_async(c(1), LOOPCOUNT*8, 1)\n          !$acc enter data copyin(c(1:LOOPCOUNT)) async(1)\n          !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_finalize.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete_finalize(a(1:LOOPCOUNT))\n        CALL acc_delete_finalize(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete_finalize(a(1:LOOPCOUNT))\n        CALL acc_delete_finalize(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_finalize_async.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_delete_finalize_async(a(1:LOOPCOUNT), 1)\n          CALL acc_delete_finalize_async(b(1:LOOPCOUNT), 1)\n          CALL acc_delete_finalize_async(d(1:LOOPCOUNT), 2)\n          CALL acc_delete_finalize_async(e(1:LOOPCOUNT), 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc enter data copyin(c(1:LOOPCOUNT))\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete_finalize_async(c(1:LOOPCOUNT), 1)\n\n        !$acc enter data copyin(c(1:LOOPCOUNT)) async(1)\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_finalize_async_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_delete_finalize_async(a(1), LOOPCOUNT*8, 1)\n          CALL acc_delete_finalize_async(b(1), LOOPCOUNT*8, 1)\n          CALL acc_delete_finalize_async(d(1), LOOPCOUNT*8, 2)\n          CALL acc_delete_finalize_async(e(1), LOOPCOUNT*8, 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,async,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc enter data copyin(c(1:LOOPCOUNT))\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete_finalize_async(c(1), LOOPCOUNT*8, 1)\n\n        !$acc enter data copyin(c(1:LOOPCOUNT)) async(1)\n        !$acc data present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_finalize_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete_finalize(a(1), LOOPCOUNT*8)\n        CALL acc_delete_finalize(b(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete_finalize(a(1), LOOPCOUNT*8)\n        CALL acc_delete_finalize(b(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_delete_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete(a(1), LOOPCOUNT*8)\n        CALL acc_delete(b(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        CALL acc_copyin(a(1:LOOPCOUNT))\n        CALL acc_copyin(b(1:LOOPCOUNT))\n\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        CALL acc_delete(a(1), LOOPCOUNT*8)\n        CALL acc_delete(b(1), LOOPCOUNT*8)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2**1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_deviceptr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:3.3\n    LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8), DIMENSION(LOOPCOUNT) :: a, b, c  !Data\n        REAL(8), POINTER, DIMENSION(:) :: a_ptr, b_ptr, d_ptr\n        INTEGER :: errors = 0\n        INTEGER, value :: x, i\n\n        !Initilization\n        SEEDDIM(1) = 1\n        #ifdef SEED\n            SEEDDIM(1) = SEED\n        #endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        DO i = 1, LOOPCOUNT\n            c(i) = 0\n        END DO\n\n        !$acc enter data copyin(a(0:n), b(0:n)) create(c(0:n))\n\n        a_ptr = acc_deviceptr(a)\n        b_ptr = acc_deviceptr(b)\n        d_ptr = acc_deviceptr(c)\n\n        !$acc data deviceptr(a_ptr, b_ptr, c_ptr)\n            !$acc parallel\n                !$acc loop\n                DO x = 0, LOOPCOUNT\n                    d_ptr(x) = a_ptr(x) + b_ptr(x);\n                END DO\n                !$acc end loop\n            !$acc end parallel\n        !$acc end data\n\n        !$acc exit data copyout(c(0:n)) delete(a(0:n), b(0:n))\n\n        DO x = 0, LOOPCOUNT\n            IF (ABS(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n                errors = errors + 1\n            END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n            test1 = .FALSE.\n        ELSE\n            test1 = .TRUE.\n        END IF\n    END\n#endif\n#ifndef T1\n    LOGICAL :: test1\n#endif\n#ifndef T1\n    DO testrun = 1, NUM_TEST_CALLS\n      failed = failed .or. test1()\n    END DO\n    IF (failed) THEN\n      failcode = failcode + 2 ** 0\n      failed = .FALSE.\n    END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_free.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,V:3.3\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8),DIMENSION(LOOPCOUNT):: initial_memory, final_memory !Data\n        INTEGER, POINTER :: a(:)\n        INTEGER :: errors = 0\n\n        initial_memory = acc_get_property(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), acc_property_free_memory);\n        \n        ALLOCATE(a(n))\n\n        acc_free(a)\n\n        final_memory = acc_get_property(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), acc_property_free_memory);\n\n        ALLOCATE(a(N))\n\n        IF (final_memory .lt. (initial_memory + size(a))) THEN\n            errors = errors + 1\n        END IF\n\n        test1 = .FALSE.\n      END\n#endif\n#ifndef T1\n    LOGICAL :: test1\n#endif\n#ifndef T1\n    DO testrun = 1, NUM_TEST_CALLS\n      failed = failed .or. test1()\n    END DO\n    IF (failed) THEN\n      failcode = failcode + 2 ** 0\n      failed = .FALSE.\n    END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_get_default_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,internal-control-values,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, holder !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        INTEGER :: acc_get_default_async\n        errors = 0\n        holder = acc_get_default_async()\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(holder)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (acc_get_default_async() .lt. 0) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent",
                            "internal-control-values"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_get_device_num.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        INTEGER :: errors\n        errors = 0\n\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            CALL acc_set_device_num(x, acc_get_device_type())\n            IF (acc_get_device_num(acc_get_device_type()) .ne. x) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_get_num_devices.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors\n        errors = 0\n\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          IF (acc_get_num_devices(acc_get_device_type()) .eq. 0) THEN\n            errors = errors + 1\n          END IF\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_get_property.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,nonvalidating,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: output\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          output = acc_get_property(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), acc_property_memory)\n          output = acc_get_property(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), acc_property_free_memory)\n        END IF\n        test1 = .FALSE.\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_get_property_string.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,nonvalidating,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        CHARACTER(len=:),ALLOCATABLE :: output1\n        CHARACTER(len=:),ALLOCATABLE :: output2\n        CHARACTER(len=:),ALLOCATABLE :: output3\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          ! Hopefully, the string is long enough:\n          allocate(character(len=1024) :: output1, output2, output3)\n          CALL acc_get_property_string(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), &\n                                                          acc_property_name, output1)\n          CALL acc_get_property_string(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), &\n                                                          acc_property_vendor, output2)\n          CALL acc_get_property_string(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), &\n                                                          acc_property_driver, output3)\n        END IF\n        test1 = .FALSE.\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_hostptr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,V:3.3\n    LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL,  DIMENSION(LOOPCOUNT) :: a !Data\n        INTEGER :: err = 0\n\n        CALL acc_create(a)\n\n        IF (a /= acc_hostptr(a)) THEN\n                err = err + 1\n        END IF\n\n        CALL acc_delete()\n\n        IF (err .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_init.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          CALL acc_init(acc_get_device_type())\n        END IF\n\n        test1 = .FALSE.\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_is_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,devonly,construct-independent,present,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        INTEGER,DIMENSION(1):: devtest\n        INTEGER :: errors\n        errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !$acc enter data create(a(1:LOOPCOUNT))\n        IF (acc_is_present(a(1:LOOPCOUNT)) .eqv. .FALSE.) THEN\n          errors = errors + 1\n          PRINT*, 1\n        END IF\n        !$acc exit data delete(a(1:LOOPCOUNT))\n\n        IF (devtest(1) .eq. 1) THEN\n          IF (acc_is_present(a(1:LOOPCOUNT)) .eqv. .TRUE.) THEN\n            errors = errors + 1\n            PRINT*, 2\n          END IF\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "devonly",
                            "construct-independent",
                            "present"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_is_present_with_len.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,devonly,construct-independent,present,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        INTEGER,DIMENSION(1):: devtest\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !$acc enter data create(a(1:LOOPCOUNT))\n        IF (acc_is_present(a(1), LOOPCOUNT*8) .eqv. .FALSE.) THEN\n          errors = errors + 1\n        END IF\n        !$acc exit data delete(a(1:LOOPCOUNT))\n\n        IF (devtest(1) .eq. 1) THEN\n          IF (acc_is_present(a(1), LOOPCOUNT*8) .eqv. .TRUE.) THEN\n            errors = errors + 1\n          END IF\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "devonly",
                            "construct-independent",
                            "present"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_malloc.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:3.3\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8),DIMENSION(LOOPCOUNT):: initial_memory, final_memory !Data\n        INTEGER, POINTER :: a(:)\n        INTEGER :: errors = 0\n\n        initial_memory = acc_get_property(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), acc_property_free_memory)\n        \n        acc_malloc(a(N))\n\n        IF (initial_memory .ne. 0) THEN\n          test1 = .FALSE.\n        END IF\n\n        final_memory = acc_get_property(acc_get_device_num(acc_get_device_type()), acc_get_device_type(), acc_property_free_memory)\n\n        DO x = 1, LOOPCOUNT\n          IF (final_memory + N * sizeof(a(1)) .gt. initial_memory) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        acc_free(a(N))\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_map_data.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:3.3\n    LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        INTEGER :: errors = 0\n        INTEGER :: x,i\n        !Initilization\n        SEEDDIM(1) = 1\n        #ifdef SEED\n            SEEDDIM(1) = SEED\n        #endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        \n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        CALL acc_map_data(C_LOC(c), C_LOC(d), LOOPCOUNT)\n\n        !$acc data copyin(a, b) present(c)\n            !$acc parallel\n                !$acc loop\n                DO i = 1, LOOPCOUNT\n                    c(i) = a(i) + b(i)\n                END DO\n                !$acc end loop\n            !$acc end parallel\n        !$acc end data\n\n\n        !$acc update host(c(0:LOOPCOUNT))\n        DO x = 1, LOOPCOUNT\n            IF (ABS(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n            END IF\n        END DO\n\n        CALL acc_unmap_data(c)\n        CALL acc_free(d)\n\n        IF (errors .eq. 0) THEN\n            test1 = .FALSE.\n        ELSE\n            test1 = .TRUE.\n        END IF\n    END\n#endif\n#ifndef T1\n    LOGICAL :: test1\n#endif\n#ifndef T1\n    DO testrun = 1, NUM_TEST_CALLS\n      failed = failed .or. test1()\n    END DO\n    IF (failed) THEN\n      failcode = failcode + 2 ** 0\n      failed = .FALSE.\n    END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_memcpy_d2d.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:3.3\n    INTEGER FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8), DIMENSION(LOOPCOUNT) :: a, b, c  \n        INTEGER :: errors = 0\n        INTEGER :: x, i\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n\n        CALL acc_set_device_num(0, acc_device_nvidia)\n        !$acc enter data create(a(1:LOOPCOUNT))\n        CALL acc_set_device_num(1, acc_device_nvidia)\n        !$acc enter data create(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n            ! a(x) = rand() / (real(8)(RAND_MAX / 10))\n            b(x) = a(x)\n            c(x) = 4 * a(x)\n        END DO\n        CALL acc_set_device_num(0, acc_device_nvidia)\n        !$acc update device(a(1:LOOPCOUNT))\n        CALL acc_set_device_num(1, acc_device_nvidia)\n        !$acc update device(b(1:LOOPCOUNT))\n\n        CALL acc_set_device_num(0, acc_device_nvidia)\n        !$acc data present(a)\n            !$acc parallel loop\n            DO i = 1, LOOPCOUNT\n                a(i) = a(i) * 2\n            END DO\n            CALL acc_memcpy_d2d(b, a, LOOPCOUNT * 8, 1, 0)\n        !$acc end data\n\n        CALL acc_set_device_num(1, acc_device_nvidia)\n        !$acc parallel loop\n        DO i = 1, LOOPCOUNT\n            b(i) = b(i) * 2\n        END DO\n\n        !$acc update host(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n            IF (ABS(b(x) - c(x)) > PRECISION) THEN\n                errors = errors + 1\n                EXIT\n            END IF\n        END DO\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        test1 = errors\n    END FUNCTION test1\n#endif\n#ifndef T1\n    INTEGER :: test1\n#endif\n#ifndef T1\n    DO testrun = 1, NUM_TEST_CALLS\n        failed = failed + test1()\n    END DO\n    IF (failed /= 0) THEN\n        failcode = failcode + 2 ** 0\n    END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_on_device.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,present,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors\n        INTEGER :: device_type\n        errors = 0\n        device_type = acc_get_device_type()\n        IF (device_type .ne. acc_device_none) THEN\n          !$acc parallel\n            IF (acc_on_device(device_type) .eqv. .FALSE.) THEN\n              errors = errors + 1\n            END IF\n          !$acc end parallel\n        ELSE\n          !$acc parallel\n            IF (acc_on_device(acc_device_host) .eqv. .FALSE.) THEN\n              errors = errors + 1\n            END IF\n          !$acc end parallel\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "present"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_set_default_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,internal-control-values,set,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        a_host = a\n        b_host = b\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          CALL acc_set_default_async(1)\n          !$acc parallel async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          CALL acc_set_default_async(2)\n          !$acc parallel async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(1) wait(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(1)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a_host(x) * a_host(x) + b_host(x) * b_host(x))) .gt. 4 * PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_set_device_num.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(:, :),ALLOCATABLE :: host_copy\n        INTEGER :: errors = 0\n\n        CALL RANDOM_SEED\n        ALLOCATE(host_copy(acc_get_num_devices(acc_get_device_type()), LOOPCOUNT))\n\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          !host_copy(acc_get_num_devices(acc_get_device_type()), LOOPCOUNT)\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            DO y = 1, LOOPCOUNT\n              CALL RANDOM_NUMBER(a)\n              host_copy(x, :) = a\n            END DO\n            call acc_set_device_num(x, acc_get_device_type())\n            !$acc enter data copyin(a(1:LOOPCOUNT))\n          END DO\n\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            call acc_set_device_num(x, acc_get_device_type())\n            !$acc data present(a(1:LOOPCOUNT))\n              !$acc parallel\n                !$acc loop\n                DO y = 1, LOOPCOUNT\n                  a(y) = a(y) + 1\n                END DO\n              !$acc end parallel\n            !$acc end data\n          END DO\n\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            call acc_set_device_num(x, acc_get_device_type())\n            !$acc exit data copyout(a(1:LOOPCOUNT))\n            DO y = 1, LOOPCOUNT\n              IF (abs(a(y) - (host_copy(x, y) + 1)) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            END DO\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_set_device_type.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n        INTEGER :: device_type\n\n        device_type = acc_get_device_type()\n        CALL acc_set_device_type(device_type)\n        IF (acc_get_device_type() .ne. device_type) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_shutdown.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          CALL acc_shutdown(acc_get_device_type())\n        END IF\n\n        test1 = .FALSE.\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_unmap_data.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,V:3.3\n    LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8),DIMENSION(LOOPCOUNT) :: a, b, c, d, e !Data\n        INTEGER :: errors = 0\n        INTEGER :: x,i\n\n        !Initilization \n        SEEDDIM(1) = 1\n        #ifdef SEED\n            SEEDDIM(1) = SEED\n        #endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        CALL acc_map_data(C_LOC(c), C_LOC(d), LOOPCOUNT)\n\n        !$acc data copyin(a(0:LOOPCOUNT), b(0:LOOPCOUNT)) present(c(0:LOOPCOUNT)) copyout(c(0:LOOPCOUNT))\n            !$acc parallel\n                !$acc loop\n                    DO i = 0, LOOPCOUNT\n                        c(x) = a(x) + b(x)\n                    END DO\n                !$acc end loop\n            !$acc end parallel\n        !$acc end data \n\n        !$acc update host(c(0:n))\n                    \n        DO x = 0, LOOPCOUNT\n            IF (ABS(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n                errors = errors + 1\n            END IF\n        END DO\n\n        CALL acc_unmap_data(C_LOC(c))\n        CALL acc_free(C_LOC(d))\n\n        IF (errors .eq. 0) THEN\n            test1 = .FALSE.\n        ELSE\n            test1 = .TRUE.\n        END IF\n    END\n#endif\n#ifndef T1\n    LOGICAL :: test1\n#endif\n#ifndef T1\n    DO testrun = 1, NUM_TEST_CALLS\n      failed = failed .or. test1()\n    END DO\n    IF (failed) THEN\n      failcode = failcode + 2 ** 0\n      failed = .FALSE.\n    END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "3.3"
                        ]
                    }
                }
            },
            "acc_update_device.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyout(c(1:LOOPCOUNT)) create(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          CALL acc_update_device(a(1:LOOPCOUNT))\n          CALL acc_update_device(b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER,DIMENSION(1):: devtest\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) * a(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device(a(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) * b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device(b(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_device_async.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a_host = a\n        b_host = b\n\n        !$acc data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          CALL acc_update_device_async(a(1:LOOPCOUNT), 1)\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_device_async(b(1:LOOPCOUNT), 2)\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(1) wait(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(1)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - ((a_host(x) * a_host(x)) + (b_host(x) * b_host(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER,DIMENSION(1):: devtest\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) * a(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device_async(a(1:LOOPCOUNT), 1)\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) * b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device_async(b(1:LOOPCOUNT), 2)\n            !$acc parallel async(1) wait(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n            !$acc wait(1)\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_device_async_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a_host = a\n        b_host = b\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          CALL acc_update_device_async(a(1), LOOPCOUNT*8, 1)\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_device_async(b(1), LOOPCOUNT*8, 2)\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(1) wait(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(1)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - ((a_host(x) * a_host(x)) + (b_host(x) * b_host(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER,DIMENSION(1):: devtest\n        INTEGER :: errors\n        errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) * a(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device_async(a(1), LOOPCOUNT*8, 1)\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) * b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device_async(b(1), LOOPCOUNT*8, 2)\n            !$acc parallel async(1), wait(2)\n              !$acc loop\n               DO x = 1, LOOPCOUNT\n                 c(x) = a(x) + b(x)\n               END DO\n            !$acc end parallel\n            !$acc wait(1)\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_device_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,devonly,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER,DIMENSION(1):: devtest\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyout(c(1:LOOPCOUNT)) create(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          CALL acc_update_device(a(1), LOOPCOUNT*8)\n          CALL acc_update_device(b(1), LOOPCOUNT*8)\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER,DIMENSION(1):: devtest\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) * a(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device(a(1), LOOPCOUNT*8)\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) * b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_device(b(1), LOOPCOUNT*8)\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_self.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self(c(1:LOOPCOUNT))\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self(a(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self(b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_self_async.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,devonly,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d !Data\n        INTEGER,DIMENSION(1):: devtest\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        d = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT), d(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              d(x) = a(x) * b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self_async(c(1:LOOPCOUNT), 1)\n          CALL acc_update_self_async(d(1:LOOPCOUNT), 2)\n          !$acc wait\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(d(x) - (a(x) * b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d !Data\n        INTEGER,DIMENSION(1):: devtest\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) * a(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_self_async(a(1:LOOPCOUNT), 1)\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) * b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_self_async(b(1:LOOPCOUNT), 2)\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) + 1\n              END DO\n            !$acc end parallel\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) + 1\n              END DO\n            !$acc end parallel\n            !$acc parallel async(1) wait(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) * b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - ((a(x) + 1) * (b(x) + 1))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_self_async_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,devonly,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d !Data\n        INTEGER,DIMENSION(1):: devtest\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        d = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT), d(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              d(x) = a(x) * b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self_async(c(1), LOOPCOUNT*8, 1)\n          CALL acc_update_self_async(d(1), LOOPCOUNT*8, 2)\n          !$acc wait\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(d(x) - (a(x) * b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,devonly,async,construct-independent,update,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d !Data\n        INTEGER,DIMENSION(1):: devtest\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) * a(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_self_async(a(1), LOOPCOUNT*8, 1)\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) * b(x)\n              END DO\n            !$acc end parallel\n            CALL acc_update_self_async(b(1), LOOPCOUNT*8, 2)\n            !$acc parallel async(1)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                a(x) = a(x) + 1\n              END DO\n            !$acc end parallel\n            !$acc parallel async(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) + 1\n              END DO\n            !$acc end parallel\n            !$acc parallel async(1) wait(2)\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) * b(x)\n              END DO\n            !$acc end parallel\n            !$acc wait(1)\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - ((a(x) + 1) * (b(x) + 1))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "devonly",
                            "async",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_update_self_with_len.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,data,executable-data,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self(c(1), LOOPCOUNT*8)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,data,executable-data,construct-independent,update,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyout(c(1:LOOPCOUNT)) copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self(a(1), LOOPCOUNT*8)\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          CALL acc_update_self(b(1), LOOPCOUNT*8)\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "data",
                            "executable-data",
                            "construct-independent",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_wait.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        e = 0\n\n        !$acc enter data  copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT)) async(1)\n        !$acc enter data copyin(d(1:LOOPCOUNT)) create(e(1:LOOPCOUNT)) async(2)\n        !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT)) async(1)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc parallel present(c(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT)) async(1) wait(2)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            e(x) = c(x) + d(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(e(1:LOOPCOUNT)) async(1)\n\n        CALL acc_wait(1)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT), d(1:LOOPCOUNT))\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_wait_all.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, a_host, b_host, c_host !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(c)\n        d = 0\n        a_host = a\n        b_host = b\n        c_host = c\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT)) copyout(d(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(3)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) * c(x)\n            END DO\n          !$acc end parallel\n          CALL acc_wait_all()\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              d(x) = a(x) + b(x) + c(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(d(x) - ((a_host(x) * a_host(x)) + (b_host(x) * b_host(x)) + (c_host(x) * c_host(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_wait_all_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f, g, h, i, j, k !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: a_host, d_host, g_host\n        REAL(8) :: RAND\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n        CALL RANDOM_NUMBER(g)\n        CALL RANDOM_NUMBER(h)\n        i = 0\n        j = 0\n        k = 0\n        a_host = a\n        d_host = d\n        g_host = g\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT), g(1:LOOPCOUNT), h(1:LOOPCOUNT)) create(c(1:LOOPCOUNT), f(1:LOOPCOUNT), i(1:LOOPCOUNT), j(1:LOOPCOUNT)) copyout(k(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(3)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              i(x) = g(x) + h(x)\n            END DO\n          !$acc end parallel\n          CALL acc_wait_all_async(4)\n          !$acc parallel async(4)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              j(x) = c(x) + f(x) + i(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = b(x) * c(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              d(x) = e(x) * f(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(3)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              g(x) = h(x) * i(x)\n            END DO\n          !$acc end parallel\n          CALL acc_wait_all_async(4)\n          !$acc parallel async(4)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              k(x) = j(x) + a(x) + d(x) + g(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(4)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = a_host(x) + b(x) + d_host(x) + e(x) + g_host(x) + h(x)\n          temp = temp + (b(x) * (a_host(x) + b(x))) + (e(x) * (d_host(x) + e(x))) + (h(x) * (g_host(x) + h(x)))\n          IF (abs(k(x) - temp) .gt. PRECISION * 10) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "acc_wait_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,async,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f, g, h, i !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n        CALL RANDOM_NUMBER(g)\n        h = 0\n        i = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT), g(1:LOOPCOUNT)) create(c(1:LOOPCOUNT), f(1:LOOPCOUNT), h(1:LOOPCOUNT)) copyout(i(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n          !$acc end parallel\n          CALL acc_wait_async(1, 2)\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              h(x) = c(x) + g(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          CALL acc_wait_async(1, 2)\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              i(x) = h(x) + f(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(2)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(i(x) - (a(x) + b(x) + g(x) + d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "async",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_and_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL IS_POSSIBLE\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n        LOGICAL :: init\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) .AND. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = .FALSE.\n          IF (.FALSE. .eqv. IS_POSSIBLE(a(x, 1:10), b(x, 1:10), 10, .FALSE.)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_divided_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: b\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed\n        REAL(8),DIMENSION(10):: passed_b\n        REAL(8) :: holder\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n        LOGICAL IS_POSSIBLE_2\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) / totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          holder = 1\n          IF (IS_POSSIBLE(passed, totals(x), 10, holder) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          holder = 1\n          IF (IS_POSSIBLE_2(passed, passed_b, 10, holder) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_eqv_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL:: init\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) .EQV. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = .FALSE.\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_minus_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL IS_POSSIBLE\n        LOGICAL IS_POSSIBLE_2\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) - totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed_a, totals(x), 10, 0) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE_2(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_neqv_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) .NEQV. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, .FALSE.) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_or_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL IS_POSSIBLE\n        LOGICAL:: init\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) .OR. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = .FALSE.\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_plus_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) + totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_expr_times_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = a(x, y) * totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 1\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .TRUE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_iand_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER,DIMENSION(10):: passed_a, passed_b\n        INTEGER:: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            DO z = 1, 8\n              IF (randoms(x, y, z) .lt. .933) THEN\n                a(x, y) = a(x, y) + ISHFT(1, z - 1)\n              END IF\n            END DO\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = iand(a(x, y), totals(x))\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = iand(totals_comparison(x), a(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          DO y = 0, 7\n            init = init + ISHFT(1, y)\n          END DO\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_iand_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .lt. .933) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 0, 7\n      totals(x) = totals(x) + ISHFT(1, y)\n      totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = iand(totals(x), a(x, y))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = iand(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    DO y = 0, 7\n      init = init + ISHFT(1, y)\n    END DO\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_ior_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .933) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = ior(a(x, y), totals(x))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ior(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_ior_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .933) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = ior(totals(x), a(x, y))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ior(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_ixor_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .5) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = ieor(a(x, y), totals(x))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ieor(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_ixor_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\nLOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .5) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = ieor(totals(x), a(x, y))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ieor(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_max_expr_list_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  c(x, y) = totals(x)\n                  totals(x) = max(a(x, y), b(x, y), totals(x))\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = max(totals_comparison(x), a(x, y), b(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n            passed_c(y) = c(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, passed_c, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n      LOGICAL :: test1\n#endif\n#ifndef T1\n      DO testrun = 1, NUM_TEST_CALLS\n        failed = failed .or. test1()\n      END DO\n      IF (failed) THEN\n        failcode = failcode + 2 ** 0\n        failed = .FALSE.\n      END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_max_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = max(a(x, y), totals(x))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = max(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_max_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = max(totals(x), a(x, y))\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = max(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_max_x_expr_list.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\nIMPLICIT NONE\nINCLUDE \"acc_testsuite.Fh\"\nINTEGER :: x, y !Iterators\nREAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\nREAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\nREAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\nREAL(8):: init\nLOGICAL IS_POSSIBLE\nINTEGER :: errors = 0\n\n!Initilization\nSEEDDIM(1) = 1\n#ifdef SEED\nSEEDDIM(1) = SEED\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_min_expr_list_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  c(x, y) = totals(x)\n                  totals(x) = min(a(x, y), b(x, y), totals(x))\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = min(totals_comparison(x), a(x, y), b(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n            passed_c(y) = c(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, passed_c, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_min_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = min(a(x, y), totals(x))\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = min(totals_comparison(x), a(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_min_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  b(x, y) = totals(x)\n                  totals(x) = min(totals(x), a(x, y))\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = min(totals_comparison(x), a(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_min_x_expr_list.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n      IMPLICIT NONE\n      INCLUDE \"acc_testsuite.Fh\"\n      INTEGER :: x, y !Iterators\n      REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\n      REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n      REAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\n      REAL(8):: init\n      LOGICAL IS_POSSIBLE\n      INTEGER :: errors = 0\n\n      !Initilization\n      SEEDDIM(1) = 1\n#     ifdef SEED\n      SEEDDIM(1) = SEED\n#     endif\n      CALL RANDOM_SEED(PUT=SEEDDIM)\n\n      CALL RANDOM_NUMBER(a)\n      CALL RANDOM_NUMBER(b)\n\n      totals = 1\n      totals_comparison = 1\n\n      !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT, 1:10))\n        !$acc parallel\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            DO y = 1, 10\n              !$acc atomic capture\n                c(x, y) = totals(x)\n                totals(x) = min(totals(x), a(x, y), b(x, y))\n              !$acc end atomic\n            END DO\n          END DO\n        !$acc end parallel\n      !$acc end data\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          totals_comparison(x) = min(totals_comparison(x), a(x, y), b(x, y))\n        END DO\n      END DO\n      DO x = 1, LOOPCOUNT\n        IF (totals_comparison(x) .NE. totals(x)) THEN\n          errors = errors + 1\n          WRITE(*, *) totals_comparison(x)\n        END IF\n      END DO\n\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          passed_a(y) = a(x, y)\n          passed_b(y) = b(x, y)\n          passed_c(y) = c(x, y)\n        END DO\n        init = 1\n        IF (IS_POSSIBLE(passed_a, passed_b, passed_c, 10, init) .eqv. .FALSE.) THEN\n          errors = errors + 1\n        END IF\n      END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_and_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\nLOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL IS_POSSIBLE\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER :: errors = 0\n  LOGICAL :: init\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) < .933) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) .AND. a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = .FALSE.\n    IF (.FALSE. .eqv. IS_POSSIBLE(a(x, 1:10), b(x, 1:10), 10, .FALSE.)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_divided_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: b\n  REAL(8),DIMENSION(LOOPCOUNT):: totals\n  REAL(8),DIMENSION(10):: passed\n  REAL(8),DIMENSION(10):: passed_b\n  REAL(8) :: holder\n  INTEGER :: errors = 0\n  LOGICAL IS_POSSIBLE\n  LOGICAL IS_POSSIBLE_2\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 1\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) / a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed(y) = a(x, y)\n    END DO\n    holder = 1\n    IF (IS_POSSIBLE(passed, totals(x), 10, holder) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    holder = 1\n    IF (IS_POSSIBLE_2(passed, passed_b, 10, holder) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_eqv_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL:: init\n  INTEGER :: errors = 0\n  LOGICAL IS_POSSIBLE\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) > .5) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) .EQV. a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = .FALSE.\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_minus_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  LOGICAL IS_POSSIBLE\n  LOGICAL IS_POSSIBLE_2\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) - a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n    END DO\n    IF (IS_POSSIBLE(passed_a, totals(x), 10, 0) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE_2(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_neqv_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) > .5) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) .NEQV. a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, .FALSE.) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_or_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL IS_POSSIBLE\n  LOGICAL:: init\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) > .933) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) .OR. a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = .FALSE.\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_plus_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) + a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) + a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_assign_x_times_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 1\n  totals_comparison = 1\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            b(x, y) = totals(x)\n            totals(x) = totals(x) * a(x, y)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) * a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 1\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .TRUE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_and_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: b\n        LOGICAL IS_POSSIBLE\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) .AND. totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (.FALSE. .eqv. IS_POSSIBLE(a(x, 1:10), b(x, 1:10), 10, .FALSE.)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_divided_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: b\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed\n        REAL(8),DIMENSION(10):: passed_b\n        REAL(8) :: holder\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n        LOGICAL IS_POSSIBLE_2\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) / totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          holder = 1\n          IF (IS_POSSIBLE(passed, totals(x), 10, holder) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          holder = 1\n          IF (IS_POSSIBLE_2(passed, passed_b, 10, holder) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_eqv_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL:: init\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) .EQV. totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = .FALSE.\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_minus_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL IS_POSSIBLE\n        LOGICAL IS_POSSIBLE_2\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) - totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed_a, totals(x), 10, 0) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE_2(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_neqv_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) .NEQV. totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, .FALSE.) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_or_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        LOGICAL,DIMENSION(10):: passed_a, passed_b\n        LOGICAL IS_POSSIBLE\n        LOGICAL:: init\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) .OR. totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = .FALSE.\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_plus_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) + totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_expr_times_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = a(x, y) * totals(x)\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 1\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .TRUE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_iand_expr_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER,DIMENSION(10):: passed_a, passed_b\n        INTEGER:: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            DO z = 1, 8\n              IF (randoms(x, y, z) .lt. .933) THEN\n                a(x, y) = a(x, y) + ISHFT(1, z - 1)\n              END IF\n            END DO\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = iand(a(x, y), totals(x))\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = iand(totals_comparison(x), a(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          DO y = 0, 7\n            init = init + ISHFT(1, y)\n          END DO\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_iand_x_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .lt. .933) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 0, 7\n      totals(x) = totals(x) + ISHFT(1, y)\n      totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = iand(totals(x), a(x, y))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = iand(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    DO y = 0, 7\n      init = init + ISHFT(1, y)\n    END DO\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_ior_expr_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .933) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = ior(a(x, y), totals(x))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ior(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_ior_x_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .933) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = ior(totals(x), a(x, y))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ior(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_ixor_expr_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .5) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = ieor(a(x, y), totals(x))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ieor(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_ixor_x_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y, z !Iterators\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 8):: randoms\n  INTEGER,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER,DIMENSION(10):: passed_a, passed_b\n  INTEGER:: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  a = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 8\n        IF (randoms(x, y, z) .gt. .5) THEN\n          a(x, y) = a(x, y) + ISHFT(1, z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = ieor(totals(x), a(x, y))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = ieor(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_max_expr_list_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = max(a(x, y), b(x, y), totals(x))\n                  c(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = max(totals_comparison(x), a(x, y), b(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n            passed_c(y) = c(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, passed_c, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_max_expr_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = max(a(x, y), totals(x))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = max(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_max_x_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = max(totals(x), a(x, y))\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = max(totals_comparison(x), a(x, y))\n    END DO\n  END DO\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_max_x_expr_list_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\nIMPLICIT NONE\nINCLUDE \"acc_testsuite.Fh\"\nINTEGER :: x, y !Iterators\nREAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\nREAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\nREAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\nREAL(8):: init\nLOGICAL IS_POSSIBLE\nINTEGER :: errors = 0\n\n!Initilization\nSEEDDIM(1) = 1\n#ifdef SEED\nSEEDDIM(1) = SEED\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_min_expr_list_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = min(a(x, y), b(x, y), totals(x))\n                  c(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = min(totals_comparison(x), a(x, y), b(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n            passed_c(y) = c(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, passed_c, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_min_expr_x_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = min(a(x, y), totals(x))\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = min(totals_comparison(x), a(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_min_x_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        REAL(8),DIMENSION(10):: passed_a, passed_b\n        REAL(8):: init\n        LOGICAL IS_POSSIBLE\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic capture\n                  totals(x) = min(totals(x), a(x, y))\n                  b(x, y) = totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = min(totals_comparison(x), a(x, y))\n          END DO\n        END DO\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed_a(y) = a(x, y)\n            passed_b(y) = b(x, y)\n          END DO\n          init = 0\n          IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_min_x_expr_list_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n      IMPLICIT NONE\n      INCLUDE \"acc_testsuite.Fh\"\n      INTEGER :: x, y !Iterators\n      REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c !Data\n      REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n      REAL(8),DIMENSION(10):: passed_a, passed_b, passed_c\n      REAL(8):: init\n      LOGICAL IS_POSSIBLE\n      INTEGER :: errors = 0\n\n      !Initilization\n      SEEDDIM(1) = 1\n#     ifdef SEED\n      SEEDDIM(1) = SEED\n#     endif\n      CALL RANDOM_SEED(PUT=SEEDDIM)\n\n      CALL RANDOM_NUMBER(a)\n      CALL RANDOM_NUMBER(b)\n\n      totals = 1\n      totals_comparison = 1\n\n      !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT, 1:10))\n        !$acc parallel\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            DO y = 1, 10\n              !$acc atomic capture\n                totals(x) = min(totals(x), a(x, y), b(x, y))\n                c(x, y) = totals(x)\n              !$acc end atomic\n            END DO\n          END DO\n        !$acc end parallel\n      !$acc end data\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          totals_comparison(x) = min(totals_comparison(x), a(x, y), b(x, y))\n        END DO\n      END DO\n      DO x = 1, LOOPCOUNT\n        IF (totals_comparison(x) .NE. totals(x)) THEN\n          errors = errors + 1\n          WRITE(*, *) totals_comparison(x)\n        END IF\n      END DO\n\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          passed_a(y) = a(x, y)\n          passed_b(y) = b(x, y)\n          passed_c(y) = c(x, y)\n        END DO\n        init = 1\n        IF (IS_POSSIBLE(passed_a, passed_b, passed_c, 10, init) .eqv. .FALSE.) THEN\n          errors = errors + 1\n        END IF\n      END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_and_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL IS_POSSIBLE\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  INTEGER :: errors = 0\n  LOGICAL :: init\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) < .933) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) .AND. a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = .FALSE.\n    IF (.FALSE. .eqv. IS_POSSIBLE(a(x, 1:10), b(x, 1:10), 10, .FALSE.)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_divided_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: b\n  REAL(8),DIMENSION(LOOPCOUNT):: totals\n  REAL(8),DIMENSION(10):: passed\n  REAL(8),DIMENSION(10):: passed_b\n  REAL(8) :: holder\n  INTEGER :: errors = 0\n  LOGICAL IS_POSSIBLE\n  LOGICAL IS_POSSIBLE_2\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 1\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) / a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed(y) = a(x, y)\n    END DO\n    holder = 1\n    IF (IS_POSSIBLE(passed, totals(x), 10, holder) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    holder = 1\n    IF (IS_POSSIBLE_2(passed, passed_b, 10, holder) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_eqv_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL:: init\n  INTEGER :: errors = 0\n  LOGICAL IS_POSSIBLE\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) > .5) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) .EQV. a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = .FALSE.\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_minus_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  LOGICAL IS_POSSIBLE\n  LOGICAL IS_POSSIBLE_2\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT, 1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) - a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n    END DO\n    IF (IS_POSSIBLE(passed_a, totals(x), 10, 0) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE_2(passed_a, passed_b, 10, init) .EQV. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_neqv_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) > .5) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) .NEQV. a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, .FALSE.) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_or_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  LOGICAL,DIMENSION(10):: passed_a, passed_b\n  LOGICAL IS_POSSIBLE\n  LOGICAL:: init\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      IF (randoms(x, y) > .933) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  totals = .FALSE.\n  totals_comparison = .FALSE.\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) .OR. a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NEQV. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = .FALSE.\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_plus_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 0\n  totals_comparison = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) + a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) + a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 0\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .FALSE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_capture_x_times_expr_assign.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, y !Iterators\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b !Data\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n  REAL(8),DIMENSION(10):: passed_a, passed_b\n  REAL(8):: init\n  LOGICAL IS_POSSIBLE\n  INTEGER :: errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  totals = 1\n  totals_comparison = 1\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT,1:10))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        DO y = 1, 10\n          !$acc atomic capture\n            totals(x) = totals(x) * a(x, y)\n            b(x, y) = totals(x)\n          !$acc end atomic\n        END DO\n      END DO\n    !$acc end parallel\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      totals_comparison(x) = totals_comparison(x) * a(x, y)\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    IF (totals_comparison(x) .NE. totals(x)) THEN\n      errors = errors + 1\n      WRITE(*, *) totals_comparison(x)\n    END IF\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      passed_a(y) = a(x, y)\n      passed_b(y) = b(x, y)\n    END DO\n    init = 1\n    IF (IS_POSSIBLE(passed_a, passed_b, 10, init) .eqv. .TRUE.) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_and_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .AND. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_and_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .AND. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_divided_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) / totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 1) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_divided_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) / totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 1) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_eqv_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .EQV. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_eqv_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .EQV. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_minus_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL IS_POSSIBLE\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        INTEGER :: errors = 0\n        REAL(8),DIMENSION(10):: passed\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) - totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 0) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_minus_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL IS_POSSIBLE\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        INTEGER :: errors = 0\n        REAL(8),DIMENSION(10):: passed\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) - totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 0) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_neqv_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .NEQV. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_neqv_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .NEQV. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_or_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .OR. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_or_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) .OR. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_plus_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) + totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_plus_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) + totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_times_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) * totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_expr_times_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = a(x, y) * totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_iand_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_iand_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_iand_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_iand_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ior_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ior_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ior_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ior_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ixor_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ixor_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ixor_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_ixor_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_expr_list_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_expr_list_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_x_expr_list.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_max_x_expr_list_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_expr_list_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_expr_list_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_x_expr_list.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_min_x_expr_list_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_and_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .AND. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_and_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .AND. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_divided_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) / totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 1) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_divided_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        REAL(8),DIMENSION(10):: passed\n        INTEGER :: errors = 0\n        LOGICAL IS_POSSIBLE\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) / totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 1) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_eqv_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .EQV. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_eqv_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .EQV. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_minus_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL IS_POSSIBLE\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        INTEGER :: errors = 0\n        REAL(8),DIMENSION(10):: passed\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) - totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 0) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_minus_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL IS_POSSIBLE\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals\n        INTEGER :: errors = 0\n        REAL(8),DIMENSION(10):: passed\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) - totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            passed(y) = a(x, y)\n          END DO\n          IF (IS_POSSIBLE(passed, totals(x), 10, 0) .eqv. .FALSE.) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_neqv_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .NEQV. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_neqv_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .NEQV. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_or_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .OR. totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_or_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) .OR. totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_plus_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) + totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_plus_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) + totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_times_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) * totals(x)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_expr_times_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = a(x, y) * totals(x)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_iand_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_iand_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_iand_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_iand_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .gt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          DO y = 0, 7\n            totals(x) = totals(x) + ISHFT(1, y)\n            totals_comparison(x) = totals_comparison(x) + ISHFT(1, y)\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = iand(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ior_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ior_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ior_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ior_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .933) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ior(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ixor_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ixor_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ixor_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_ixor_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT, 8):: randoms\n        INTEGER,DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = 0\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 8\n            IF (randoms(x, y) .lt. .5) THEN\n              a(x) = a(x) + ISHFT(1, y - 1)\n            END IF\n          END DO\n        END DO\n        totals = 0\n        totals_comparison = 0\n        DO x = 1, LOOPCOUNT/10 + 1\n          totals(x) = 0\n          totals_comparison(x) = 0\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = ieor(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_expr_list_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_expr_list_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_x_expr_list.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_max_x_expr_list_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = max(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_expr_list_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_expr_list_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), b(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_expr_x.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_expr_x_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(a(x), totals(MOD(x, LOOPCOUNT/10 + 1) + 1))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_x_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_x_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_x_expr_list.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_min_x_expr_list_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT/10 + 1):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(totals(1:(LOOPCOUNT/10 + 1)))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              !$acc atomic update\n                totals(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n              !$acc end atomic\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1) = min(totals_comparison(MOD(x, LOOPCOUNT/10 + 1) + 1), a(x), b(x))\n        END DO\n        DO x = 1, LOOPCOUNT/10 + 1\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_and_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .AND. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_and_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .AND. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_divided_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) / a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) / a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_divided_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) / a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) / a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_eqv_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .EQV. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_eqv_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .EQV. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_minus_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) - a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) - a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_minus_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) - a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) - a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_neqv_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .NEQV. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_neqv_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .NEQV. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_or_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .OR. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_or_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) .OR. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_plus_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) + a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_plus_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) + a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_times_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) * a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_update_x_times_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic update\n                  totals(x) = totals(x) * a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_and_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .AND. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_and_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) < .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .AND. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .AND. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_divided_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) / a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) / a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_divided_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) / a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) / a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_eqv_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .EQV. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_eqv_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .EQV. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .EQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_minus_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) - a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) - a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_minus_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) - a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) - a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_neqv_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .NEQV. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_neqv_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .5) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .NEQV. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .NEQV. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_or_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .OR. a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_or_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT, 10):: a !Data\n        LOGICAL,DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            IF (randoms(x, y) > .933) THEN\n              a(x, y) = .TRUE.\n            ELSE\n              a(x, y) = .FALSE.\n            END IF\n          END DO\n        END DO\n\n        totals = .FALSE.\n        totals_comparison = .FALSE.\n\n        !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) .OR. a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) .OR. a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NEQV. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_plus_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) + a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_plus_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 0\n        totals_comparison = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) + a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) + a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_times_expr.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) * a(x, y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "atomic_x_times_expr_end.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,atomic,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT, 10):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: totals, totals_comparison\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        totals = 1\n        totals_comparison = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(totals(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              DO y = 1, 10\n                !$acc atomic\n                  totals(x) = totals(x) * a(x, y)\n                !$acc end atomic\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 10\n            totals_comparison(x) = totals_comparison(x) * a(x, y)\n          END DO\n        END DO\n\n        DO x = 1, LOOPCOUNT\n          IF (totals_comparison(x) .NE. totals(x)) THEN\n            errors = errors + 1\n            WRITE(*, *) totals_comparison(x)\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "atomic"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_copy_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_copyin_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(:LOOPCOUNT), b(:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_copyout_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_copyout_reference_counts.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1)::devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n          !$acc data copyin(c(1:LOOPCOUNT))\n            !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n              !$acc parallel\n                !$acc loop\n                DO x = 1, LOOPCOUNT\n                  c(x) = c(x) + a(x) + b(x)\n                END DO\n              !$acc end parallel\n            !$acc end data\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n              EXIT\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,data_region,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1)::devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        IF (devtest(1) .eq. 1) THEN\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 2\n              EXIT\n            END IF\n          END DO\n        END IF\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 4\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:data,data_region,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1)::devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc exit data delete(c(1:LOOPCOUNT))\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 8\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_create.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0 \n\n        !$acc data create(b(1:LOOPCOUNT))\n          !$acc data copyin(a(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = a(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc data copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0\n \n        !$acc data present_or_create(b(1:LOOPCOUNT))\n          !$acc data copyin(a(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = a(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc data copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n        !$acc end data\n \n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 2\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0\n \n        !$acc data pcreate(b(1:LOOPCOUNT))\n          !$acc data copyin(a(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = a(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc data copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n        !$acc end data\n     \n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 4\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_create_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        e = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT)) create(c(:LOOPCOUNT)) copyout(e(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x) = c(x) + d(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_present_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,present,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n \n        !$acc enter data copyin(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data copyout(c(1:LOOPCOUNT))\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent",
                            "present"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_with_changing_subscript.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, indexer !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        indexer = LOOPCOUNT\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:indexer), b(1:indexer)) copyout(c(1:indexer))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, indexer\n              c(x) = a(x) + b(x)\n            END DO\n            indexer = 1\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "data_with_derived_type.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,data_region,construct-independent,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        TYPE multi_item\n          REAL(8) :: a\n          REAL(8) :: b\n          REAL(8) :: c\n        END TYPE multi_item\n        INTEGER :: x !Iterators\n        TYPE (multi_item),DIMENSION(LOOPCOUNT):: a !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        DO x = 1, LOOPCOUNT\n          CALL RANDOM_NUMBER(a(x)%a)\n          CALL RANDOM_NUMBER(a(x)%b)\n          a(x)%c = 0.0\n        END DO\n\n        !$acc data copy(a(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x)%c = a(x)%a + a(x)%b\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x)%c - (a(x)%a + a(x)%b)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "data_region",
                            "construct-independent"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_copyin.F90": {
                "num tests": 4,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  USE DECLARE_COPYIN_MOD\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  INTEGER :: x\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT)) present(fixed_size_array)\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x) + fixed_size_array(MOD(x, 10))\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x) - (a(x) + fixed_size_array(MOD(x, 10)))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:construct-independent,declare,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  USE DECLARE_COPYIN_MOD\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT)) present(scalar)\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x) + scalar\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x) - (a(x) + scalar)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:construct-independent,declare,V:1.0-2.7\n      LOGICAL FUNCTION test3()\n  USE OPENACC\n  USE DECLARE_COPYIN_MOD\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = a\n\n  !$acc data copy(a(1:LOOPCOUNT))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, 1\n        CALL externMultiplyData(a, LOOPCOUNT)\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - (b(x) * 2)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:construct-independent,declare,V:1.0-2.7\n      LOGICAL FUNCTION test4()\n  USE OPENACC\n  USE DECLARE_COPYIN_MOD\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = a\n\n  !$acc data copy(a(1:LOOPCOUNT))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, 1\n        CALL multiplyData(a)\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - (b(x) * 2)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_copyin_mod.F90": {
                "num tests": 0,
                "tests": {}
            },
            "declare_create.F90": {
                "num tests": 4,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,declare,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n  !$acc update device(n)\n  !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT)) present(fixed_size_array)\n    !$acc parallel\n      !$acc loop\n      DO x = 1, 10\n        fixed_size_array(x) = x * x\n      END DO\n    !$acc end parallel\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x) + fixed_size_array(MOD(x, 10))\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x) - (a(x) + (MOD(x, 10) * MOD(x, 10)))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:construct-independent,declare,update,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n  scalar = 10\n  !$acc update device(scalar)\n  !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT)) present(scalar)\n    !$acc parallel\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x) + scalar\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x) - (a(x) + scalar)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = a\n  !$acc update\n  !$acc data copy(a(1:LOOPCOUNT))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, 1\n        CALL externMultiplyData(a, LOOPCOUNT)\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - (b(x) * 2)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT) :: a, b\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = a\n\n  !$acc data copy(a(1:LOOPCOUNT))\n    !$acc parallel\n      !$acc loop\n      DO x = 1, 1\n        CALL multiplyData(a)\n      END DO\n    !$acc end parallel\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - (b(x) * 2)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_function_scope_copy.F90": {
                "num tests": 4,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 1\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      CALL copyin_copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n    END DO\n  !$acc end data\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (1 + a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 2\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      !$acc data copy(c(1:LOOPCOUNT, x:x))\n        CALL copyin_copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n      !$acc end data\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (2 + a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 3\n\n    !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n      DO x = 1, LOOPCOUNT\n        !$acc data copyin(c(1:LOOPCOUNT, x:x))\n          CALL copyin_copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n          DO y = 1, LOOPCOUNT\n            IF (abs(c(y, x) - 3) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        !$acc end data\n        DO y = 1, LOOPCOUNT\n          IF (abs(c(y, x) - 3) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n      END DO\n    !$acc end data\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 4\n\n    !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n      DO x = 1, LOOPCOUNT\n        !$acc data copy(c(1:LOOPCOUNT, x:x))\n          CALL copyin_copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n          DO y = 1, LOOPCOUNT\n            IF (abs(c(y, x) - 4) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        !$acc end data\n        DO y = 1, LOOPCOUNT\n          IF (abs(c(y, x) - (4 + a(y, x) + b(y, x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n      END DO\n    !$acc end data\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_function_scope_copyin.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, a_host, b_host\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 1\n\n  !$acc data copy(c(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      CALL function_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (1 + a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n        PRINT*, \"1\"\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, a_host, b_host\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 0\n    a_host = a\n    b_host = b\n\n    !$acc data copy(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT), c(1:LOOPCOUNT, 1:LOOPCOUNT))\n      DO x = 1, LOOPCOUNT\n        CALL function_test_dev_only(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n      END DO\n    !$acc end data\n\n    DO x = 1, LOOPCOUNT\n      DO y = 1, LOOPCOUNT\n        IF (abs(a(x, y) + 1) .gt. PRECISION) THEN\n          errors = errors + 1\n          PRINT*, \"2\"\n        END IF\n        IF (abs(b(x, y) + 1) .gt. PRECISION) THEN\n          errors = errors + 1\n          PRINT*, \"3\"\n        END IF\n        IF (abs(c(x, y) - (a_host(x, y) + b_host(x, y))) .gt. PRECISION) THEN\n          errors = errors + 1\n          PRINT*, \"4\"\n        END IF\n      END DO\n    END DO\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, a_host, b_host\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 1\n    a_host = a\n    b_host = b\n\n    !$acc data copy(c(1:LOOPCOUNT, 1:LOOPCOUNt))\n      DO x = 1, LOOPCOUNT\n        CALL function_test_dev_only(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n      END DO\n    !$acc end data\n\n    DO x = 1, LOOPCOUNT\n      DO y = 1, LOOPCOUNT\n        IF (abs(a(x, y) - a_host(x, y)) .gt. PRECISION) THEN\n          errors = errors + 1\n          PRINT*, \"5\"\n        END IF\n        IF (abs(b(x, y) - b_host(x, y)) .gt. PRECISION) THEN\n          errors = errors + 1\n          PRINT*, \"6\"\n        END IF\n        IF (abs(c(x, y) - (1 + a(x, y) + b(x, y))) .gt. PRECISION) THEN\n          errors = errors + 1\n          PRINT*, \"7\"\n        END IF\n      END DO\n    END DO\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_function_scope_copyout.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 1\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      CALL copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 2\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      !$acc data copy(c(1:LOOPCOUNT, x:x))\n        CALL copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n      !$acc end data\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 3\n\n    !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n      DO x = 1, LOOPCOUNT\n        !$acc data copyin(c(1:LOOPCOUNT, x:x))\n          CALL copyout_test(a(:,x), b(:,x), c(:,x), LOOPCOUNT)\n        !$acc end data\n        DO y = 1, LOOPCOUNT\n          IF (abs(c(y, x) - 3) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n      END DO\n    !$acc end data\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_function_scope_create.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, d\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 1\n  d = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT)) copyout(d(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      CALL create_test(a(x), b(x), c(x), d(x), LOOPCOUNT)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(d(x, y) - (a(x, y) * (a(x, y) + b(x, y)))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, d\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 2\n  d = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT)) copy(c(1:LOOPCOUNT, 1:LOOPCOUNT)) copyout(d(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      CALL create_as_present(a(x), b(x), c(x), d(x), LOOPCOUNT)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (2 + a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n      IF (abs(d(x, y) - (a(x, y) * c(x, y))) .gt. PRECISION * 2) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, d\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 3\n\n    !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n      DO x = 1, LOOPCOUNT\n        !$acc data copyin(c(x:x, 1:LOOPCOUNT)) copyout(d(x:x, 1:LOOPCOUNT))\n          CALL create_as_present(a(x), b(x), c(x), d(x), LOOPCOUNT)\n        !$acc end data\n        DO y = 1, LOOPCOUNT\n          IF (abs(c(x, y) - 3) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(d(x, y) - (a(x, y) * (3 + a(x, y) + b(x, y)))) .gt. PRECISION * 2) THEN\n            errors = errors + 1\n          END IF\n        END DO\n      END DO\n    !$acc end data\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "declare_function_scope_present.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, d\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 1\n  d = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT)) copyout(d(1:LOOPCOUNT, 1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      !$acc data copy(c(x:x, 1:LOOPCOUNT))\n        CALL present(a(x), b(x), c(x), d(x), LOOPCOUNT)\n      !$acc end data\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, LOOPCOUNT\n      IF (abs(c(x, y) - (1 + a(x, y) + b(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n      IF (abs(d(x, y) - (a(x, y) * c(x, y))) .gt. PRECISION * 2) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,construct-independent,declare,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n  USE OPENACC\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: errors = 0\n  INTEGER :: mult = 2\n  REAL(8),DIMENSION(LOOPCOUNT, LOOPCOUNT) :: a, b, c, d\n  INTEGER,DIMENSION(1) :: devtest\n  INTEGER :: x, y\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 3\n\n    !$acc data copyin(a(1:LOOPCOUNT, 1:LOOPCOUNT), b(1:LOOPCOUNT, 1:LOOPCOUNT))\n      DO x = 1, LOOPCOUNT\n        !$acc data copyin(c(x:x, 1:LOOPCOUNT)) copyout(d(x:x, 1:LOOPCOUNT))\n          CALL present(a(x), b(x), c(x), d(x), LOOPCOUNT)\n        !$acc end data\n        DO y = 1, LOOPCOUNT\n          IF (abs(c(x, y) - 3) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          IF (abs(d(x, y) - (a(x, y) * (3 + a(x, y) + b(x, y)))) .gt. PRECISION * 2) THEN\n            errors = errors + 1\n          END IF\n        END DO\n      END DO\n    !$acc end data\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "construct-independent",
                            "declare"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "enter_data_copyin_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(:LOOPCOUNT), b(:LOOPCOUNT))\n        !$acc data copyout(c(1:LOOPCOUNT)) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "enter_data_create.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0\n\n        !$acc enter data create(b(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel present(b(1:LOOPCOUNT))\n            !$acc loop \n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0\n        !$acc enter data present_or_create(b(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel present(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 2\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0\n \n        !$acc enter data pcreate(b(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel present(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc data copyout(c(1:LOOPCOUNT))\n          !$acc parallel present(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 4\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "enter_data_create_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        e = 0\n\n        !$acc enter data create(c(:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT)) copyout(e(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              e(x) = c(x) + d(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(e(x) - (a(x) + b(x) + d(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "enter_data_if.F90": {
                "num tests": 5,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,devonly,construct-independent,if,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b, b_copy, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        LOGICAL :: dev = .TRUE.\n        LOGICAL :: cpu = .FALSE.\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(dev)\n        !$acc data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(dev)\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,executable-data,devonly,construct-independent,if,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b, b_copy, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        LOGICAL :: dev = .TRUE.\n        LOGICAL :: cpu = .FALSE.\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(cpu)\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(cpu)\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:data,executable-data,devonly,construct-independent,if,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b, b_copy, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        LOGICAL :: dev = .TRUE.\n        LOGICAL :: cpu = .FALSE.\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          a_copy = a\n          CALL RANDOM_NUMBER(b)\n          b_copy = b\n          c = 0\n\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(dev)\n\n          a = 0\n          b = 0\n\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(dev)\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a_copy(x) + b_copy(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:data,executable-data,devonly,construct-independent,if,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b, b_copy, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        LOGICAL :: dev = .TRUE.\n        LOGICAL :: cpu = .FALSE.\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(cpu)\n          CALL RANDOM_NUMBER(a)\n          a_copy = a\n          CALL RANDOM_NUMBER(b)\n          b_copy = b\n\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(cpu)\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a_copy(x) + b_copy(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "5": {
                        "content": "#ifndef T5\n!T5:data,executable-data,devonly,construct-independent,if,V:2.0-2.7\n      LOGICAL FUNCTION test5()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b, b_copy, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        LOGICAL :: dev = .TRUE.\n        LOGICAL :: cpu = .FALSE.\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n\n          !$acc enter data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) if(cpu)\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test5 = .FALSE.\n        ELSE\n          test5 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T5\n        LOGICAL :: test5\n#endif\n#ifndef T5\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test5()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 4\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "exit_data.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        a_copy = a\n\n        IF (devtest(1) .eq. 1) THEN\n          !$acc enter data copyin(a(1:LOOPCOUNT))\n          !$acc parallel present(a(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) + 1\n            END DO\n          !$acc end parallel\n          !$acc exit data delete(a(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - a_copy(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,executable-data,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        a_copy = a\n        !$acc enter data copyin(a(1:LOOPCOUNT))\n        !$acc parallel present(a(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            a(x) = a(x) + 1\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(a(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - (a_copy(x) + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "exit_data_copyout_no_lower_bound.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        !$acc enter data create(c(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data copyout(c(:LOOPCOUNT))\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "exit_data_copyout_reference_counts.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        IF (devtest(1) .eq. 1) THEN\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc data copyin(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end parallel\n            !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n              EXIT\n            END IF\n          END DO \n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,executable-data,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc data copyin(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data copyout(c(1:LOOPCOUNT)) delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 2\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:data,executable-data,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc enter data copyin(c(1:LOOPCOUNT))\n        !$acc parallel\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = c(x) + a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data delete(c(1:LOOPCOUNT))\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 4\n            EXIT\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "exit_data_delete_no_lower_bound.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: has_device\n\n        has_device(1) = .TRUE.\n        !$acc enter data copyin(has_device(1:1))\n        !$acc parallel present(has_device(1:1))\n          has_device(1) = .FALSE.\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n        !$acc data copyout(c(1:LOOPCOUNT)) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        !$acc exit data delete(a(:LOOPCOUNT), b(:LOOPCOUNT))\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,executable-data,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: has_device\n\n        has_device(1) = .TRUE.\n        !$acc enter data copyin(has_device(1:1))\n        !$acc parallel present(has_device(1:1))\n          has_device(1) = .FALSE.\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (has_device(1) .eqv. .TRUE.) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 0\n          \n          !$acc enter data copyin(c(1:LOOPCOUNT))\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) present(c(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          !$acc exit data delete(c(:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "exit_data_finalize.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:data,executable-data,devonly,construct-independent,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1) :: devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc enter data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        IF (devtest(1) .eq. 1) THEN\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n        !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:data,executable-data,devonly,construct-independent,V:2.5-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1) :: devtest\n\n        devtest(1) = 1\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc enter data create(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(c(1:LOOPCOUNT)) delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) finalize\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "data",
                            "executable-data",
                            "devonly",
                            "construct-independent"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "id": 1,
            "init.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,init,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc init\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "init_device_num.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_num = acc_get_device_num(acc_get_device_type())\n        !$acc init device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "init_device_type.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc init device_type(host)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc init device_type(multicore)\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc init device_type(default)\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "init_device_type_num.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc init device_type(host) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc init device_type(multicore) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc init device_type(default) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "init_device_type_num_nvidia.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc init device_type(nvidia) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "init_device_type_nvidia.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,init,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc init device_type(nvidia)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "init",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "kernels_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,kernels,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f, g !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n        g = 0\n        !$acc enter data create(g(1:LOOPCOUNT), c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT))\n          !$acc kernels async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end kernels\n          !$acc kernels async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end kernels\n          !$acc kernels wait(1, 2) async(3)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              g(x) = c(x) + f(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n        !$acc wait(1, 2)\n        !$acc update host(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n        !$acc exit data copyout(g(1:LOOPCOUNT)) async(3)\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n            WRITE(*, *) x, \" a: \", c(x), \" = \", a(x), \" + \", b(x)\n          END IF\n          IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n            WRITE(*, *) x, \" b: \", f(x), \" = \", d(x), \" + \", e(x)\n          END IF\n        END DO\n        !$acc wait(3)\n        DO x = 1, LOOPCOUNT\n          IF (abs(g(x) - (c(x) + f(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n            WRITE(*, *) x, \" c: \", g(x), \" = \", c(x), \" + \", f(x)\n          END IF\n        END DO\n        !$acc exit data delete(c(1:LOOPCOUNT), f(1:LOOPCOUNT))\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "kernels",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_copy.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest)\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 1\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc kernels copy(c(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x) + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest)\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 1\n\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc kernels copy(c(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end kernels\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - 1) .gt. PRECISION) THEN\n              IF ((a(x) + b(x)) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest)\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 1\n\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n            DO x = 1, LOOPCOUNT\n              c(x) = 0\n            END DO\n            !$acc kernels copy(c(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end kernels\n            DO x = 1, LOOPCOUNT\n              IF (abs(c(x)) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            END DO\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (1 + a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_copyin.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copy(b(1:LOOPCOUNT))\n          !$acc kernels copyin(a(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) + a(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          b = 0\n          !$acc data copy(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            DO x = 1, LOOPCOUNT\n              a(x) = -1\n            END DO\n            !$acc kernels copyin(a(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = a(x)\n              END DO\n            !$acc end kernels\n            DO x = 1, LOOPCOUNT\n              IF (abs(a(x) + 1) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            END DO\n          !$acc end data\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          b = 0\n\n          !$acc kernels copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end kernels\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_copyout.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels copyout(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          b = 0\n          \n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc kernels copyout(b(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = a(x)\n              END DO\n            !$acc end kernels\n          !$acc end data\n          \n          DO x = 1, LOOPCOUNT\n            IF (abs(b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_create.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          b = 0\n          c = 0\n          !$acc data copyin(a(1:LOOPCOUNT))\n            !$acc kernels create(b(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = a(x)\n              END DO\n            !$acc end kernels\n          !$acc end data\n          DO x = 1, LOOPCOUNT\n            IF (abs(b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n          !$acc kernels create(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(b(x) - a(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: devtest\n        devtest(1) = 1\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = 0\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc kernels create(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = b(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - a(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_default_copy.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels\n          devtest(1) = .FALSE.\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc kernels\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels\n          devtest(1) = .FALSE.\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1)) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 1\n\n          !$acc enter data copyin(c(1:LOOPCOUNT))\n          c = 0\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc kernels\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end kernels\n          !$acc end data\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n          !$acc exit data copyout(c(1:LOOPCOUNT))\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x) + 1)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_default_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,default,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT)) create(b(1:LOOPCOUNT))\n        !$acc kernels default(present)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            b(x) = a(x)\n          END DO\n        !$acc end kernels\n        !$acc exit data delete(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT)) \n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "default"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_if.F90": {
                "num tests": 4,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,kernels,if,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        LOGICAL:: data_on_device = .FALSE.\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc kernels if(data_on_device) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            b(x) = a(x)\n          END DO\n        !$acc end kernels\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,kernels,if,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        LOGICAL:: data_on_device = .FALSE.\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        data_on_device = .TRUE.\n        !$acc enter data copyin(a(1:LOOPCOUNT)) create(b(1:LOOPCOUNT))\n        !$acc kernels if(data_on_device) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            b(x) = a(x)\n          END DO\n        !$acc end kernels\n        !$acc exit data copyout(b(1:LOOPCOUNT)) delete(a(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(b(x) - a(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,kernels,if,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        LOGICAL:: data_on_device = .FALSE.\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eqv. .TRUE.) THEN\n          CALL RANDOM_NUMBER(a)\n          b = 0\n\n          !$acc enter data copyin(a(1:LOOPCOUNT)) create(b(1:LOOPCOUNT))\n          DO x = 1, LOOPCOUNT\n            a(x) = -1\n          END DO\n\n          !$acc kernels if(data_on_device) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end kernels\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) + 1) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n            IF (abs(b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n\n          !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          data_on_device = .FALSE.\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "4": {
                        "content": "#ifndef T4\n!T4:devonly,kernels,if,V:2.0-2.7\n      LOGICAL FUNCTION test4()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        LOGICAL:: data_on_device = .FALSE.\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc kernels present(devtest(1:1))\n          devtest(1) = .FALSE.\n        !$acc end kernels\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1) .eq. 1) THEN\n          CALL RANDOM_NUMBER(a)\n          b = 0\n\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc kernels if(data_on_device) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end kernels\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n\n          !$acc exit data copyout(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(b(x)) .gt. PRECISION) THEN\n              IF (abs(b(x) - a(x)) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test4 = .FALSE.\n        ELSE\n          test4 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T4\n        LOGICAL :: test4\n#endif\n#ifndef T4\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test4()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 3\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "kernels",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9 !Iterators\n        REAL(8),DIMENSION(1024):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:1024)) copyout(b(1:1024))\n          !$acc kernels\n            !$acc loop\n            DO _0 = 0, 1\n              !$acc loop\n              DO _1 = 0, 1\n                !$acc loop\n                DO _2 = 0, 1\n                  !$acc loop\n                  DO _3 = 0, 1\n                    !$acc loop\n                    DO _4 = 0, 1\n                      !$acc loop\n                      DO _5 = 0, 1\n                        !$acc loop\n                        DO _6 = 0, 1\n                          !$acc loop\n                          DO _7 = 0, 1\n                            !$acc loop\n                            DO _8 = 0, 1\n                              !$acc loop\n                              DO _9 = 1, 2\n                                b(_0*512+_1*256+_2*128+_3*64+_4*32+_5*16+_6*8+_7*4+_8*2+_9)=a(_0*512+_1*256+_2*128+_3*64+_4*32+_5*16+_6*8+_7*4+_8*2+_9)\n                              END DO\n                            END DO\n                          END DO\n                        END DO\n                      END DO\n                    END DO\n                  END DO\n                END DO\n              END DO\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, 1024\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_independent.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(b(1:LOOPCOUNT))\n          !$acc kernels loop independent\n          DO x = 1, LOOPCOUNT\n            b(x) = b(x) + a(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_add_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8) :: total\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        total = 0\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(total)\n          !$acc parallel loop reduction(+:total)\n          DO x = 1, LOOPCOUNT\n            total = total + a(x) + b(x)\n          END DO\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          total = total - (a(x) + b(x))\n        END DO\n        IF (abs(total) .gt. LOOPCOUNT * PRECISION) THEN\n          WRITE(*, *) total\n          errors = 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_add_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b, c, d !Data\n        REAL(8) :: avg\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        avg = 0\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) create(c(1:10*LOOPCOUNT)) copyout(d(1:10*LOOPCOUNT))\n          !$acc kernels loop gang private(avg)\n          DO x = 0, 9\n            avg = 0\n            !$acc loop worker reduction(+:avg)\n            DO y = 1, LOOPCOUNT\n              avg = avg + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n              c(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            END DO\n            avg = avg / LOOPCOUNT\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              d(x * LOOPCOUNT + y) = c(x * LOOPCOUNT + y) / avg\n            END DO\n          END DO\n        !$acc end data\n        DO x = 0, 9\n          avg = 0\n          DO y = 1, LOOPCOUNT\n            avg = avg + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n          END DO\n          avg = avg / LOOPCOUNT\n          DO y = 1, LOOPCOUNT\n            IF (abs(d(x * LOOPCOUNT + y) - ((a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)) / avg)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_add_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10) :: c\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copyout(c(1:10))\n          !$acc kernels loop private(temp)\n          DO x = 0, 9\n            temp = 0.0\n            !$acc loop vector reduction(+:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            END DO\n            c(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = temp + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n          END DO\n          IF (abs(temp - c(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_and_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT):: a !Data\n        LOGICAL :: results = .TRUE.\n        LOGICAL :: host_results = .TRUE.\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        false_margin = exp(log(.5) / LOOPCOUNT)\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          IF (randoms(x) .lt. false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels loop reduction(.and.:results)\n          DO x = 1, LOOPCOUNT\n            results = results .and. a(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          host_results = host_results .and. a(x)\n        END DO\n        IF (host_results .neqv. results) THEN\n          errors = 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_and_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a, a_copy !Data\n        LOGICAL,DIMENSION(10) :: results, has_false\n        LOGICAL :: host_results = .TRUE.\n        LOGICAL :: temp = .TRUE.\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms\n        REAL(8) :: false_margin = exp(log(.5) / LOOPCOUNT)\n        INTEGER :: errors = 0\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, 10\n          results(x) = .TRUE.\n          has_false(x) = .FALSE.\n        END DO\n        DO x = 1, 10*LOOPCOUNT\n          IF (randoms(x) .lt. false_margin) THEN\n            a(x) = .TRUE.\n            a_copy(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n            a_copy(x) = .FALSE.\n            has_false(x / LOOPCOUNT) = .TRUE.\n          END IF\n        END DO\n\n        !$acc data copy(a(1:10*LOOPCOUNT), results(1:10))\n          !$acc kernels loop gang\n          DO x = 0, 9\n            temp = .TRUE.\n            !$acc loop worker reduction(.AND.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .AND. a(x * LOOPCOUNT + y)\n            END DO\n            results(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              IF (temp .eqv. .TRUE.) THEN\n                IF (a(x * LOOPCOUNT + y) .eqv. .TRUE.) THEN\n                  a(x * LOOPCOUNT + y) = .FALSE.\n                ELSE\n                  a(x * LOOPCOUNT + y) = .TRUE.\n                END IF\n              END IF\n            END DO\n          END DO\n        !$acc end data\n        DO x = 0, 9\n          temp = .TRUE.\n          DO y = 1, LOOPCOUNT\n            temp = temp .AND. a_copy(x * LOOPCOUNT + y)\n          END DO\n          IF (temp .neqv. results(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (temp .eqv. .TRUE.) THEN\n              IF (a(x * LOOPCOUNT + y) .eqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            ELSE\n              IF (a(x * LOOPCOUNT + y) .neqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_and_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a !Data\n        LOGICAL,DIMENSION(10):: b\n        LOGICAL,DIMENSION(10):: has_false\n        LOGICAL :: temp\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(10*LOOPCOUNT) :: randoms\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        false_margin = exp(log(.5) / LOOPCOUNT)\n        DO x = 1, 10\n          has_false(x) = .FALSE.\n          b(x) = .TRUE.\n        END DO\n\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            IF (randoms(x * LOOPCOUNT + y) .lt. false_margin) THEN\n              a(x * LOOPCOUNT + y) = .TRUE.\n            ELSE\n              a(x * LOOPCOUNT + y) = .FALSE.\n              has_false(x + 1) = .TRUE.\n            END IF\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10))\n          !$acc kernels loop private(temp)\n          DO x = 0, 9\n            temp = .TRUE.\n            !$acc loop vector reduction(.AND.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .AND. a(x * LOOPCOUNT + y)\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = .FALSE.\n          DO y = 1, LOOPCOUNT\n            IF (a(x * LOOPCOUNT + y) .eqv. .FALSE.) THEN\n              temp = .TRUE.\n            END IF\n          END DO\n          IF (temp .neqv. has_false(x + 1)) THEN\n            errors = 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitand_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        INTEGER :: b\n        REAL(8),DIMENSION(16 * LOOPCOUNT):: randoms\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        INTEGER :: temp = 1\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        false_margin = exp(log(.5)/n)\n        DO x = 1, LOOPCOUNT\n          DO y = 0, 15\n            IF (randoms(y * LOOPCOUNT + x) .lt. false_margin) THEN\n              temp = 1\n              DO z = 0, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n\n        b = a(1)\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels loop reduction(iand:b)\n          DO x = 1, LOOPCOUNT\n            b = iand(b, a(x))\n          END DO\n        !$acc end data\n\n        temp = a(1)\n        DO x = 2, LOOPCOUNT\n          temp = iand(a(x), temp)\n        END DO\n        IF (temp .ne. b) THEN\n          WRITE(*, *) temp\n          WRITE(*, *) b\n          errors = 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitand_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a, b, b_copy !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms2\n        INTEGER,DIMENSION(10) :: c\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(160*LOOPCOUNT)::randoms\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        CALL RANDOM_NUMBER(randoms2)\n        b = FLOOR(10000 * randoms2)\n        b_copy = b\n        false_margin = exp(log(.5)/LOOPCOUNT)\n        DO x = 1, 10 * LOOPCOUNT\n          DO y = 1, 16\n            IF (randoms((y - 1) * 10 * LOOPCOUNT + x) < false_margin) THEN\n              temp = 1\n              DO z = 1, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n\n        DO x = 1, 10\n         c(x) = a((x - 1) * LOOPCOUNT + x)\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10*LOOPCOUNT), c(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 1, 10\n            temp = a((x - 1) * LOOPCOUNT + 1)\n            !$acc loop worker reduction(iand:temp)\n            DO y = 2, LOOPCOUNT\n              temp = iand(temp, a((x - 1) * LOOPCOUNT + y))\n            END DO\n            c(x) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              b((x - 1) * LOOPCOUNT + y) = b((x - 1) * LOOPCOUNT + y) + c(x)\n            END DO\n          END DO\n        !$acc end data\n\n       DO x = 1, 10\n         temp = a((x - 1) * LOOPCOUNT + 1)\n         DO y = 2, LOOPCOUNT\n           temp = iand(temp, a((x - 1) * LOOPCOUNT + y))\n         END DO\n         IF (temp .ne. c(x)) THEN\n           errors = errors + 1\n         END IF\n         DO y = 1, LOOPCOUNT\n           IF (b((x - 1) * LOOPCOUNT + y) .ne. b_copy((x - 1) * LOOPCOUNT + y) + temp) THEN\n             errors = errors + 1\n           END IF\n         END DO\n       END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitand_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z, i !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a !Data\n        INTEGER,DIMENSION(10):: b\n        INTEGER :: c\n        REAL(8),DIMENSION(160*LOOPCOUNT):: random\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        false_margin = exp(log(.5) / n)\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            DO z = 1, 16\n              IF (random(x * 16 * LOOPCOUNT + (y - 1) * 16 + z - 1) < false_margin) THEN\n                temp = 1\n                DO i = 1, z\n                  temp = temp * 2\n                END DO\n                a(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + temp\n              END IF\n            END DO\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)), copy(b(1:10))\n          !$acc kernels loop private(c)\n          DO x = 0, 9\n            c = a(x * LOOPCOUNT + 1)\n            !$acc loop vector reduction(iand:c)\n            DO y = 1, LOOPCOUNT\n              c = iand(c, a(x * LOOPCOUNT + y))\n            END DO\n            b(x + 1) = c\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = a(x * LOOPCOUNT + 1)\n          DO y = 2, LOOPCOUNT\n            temp = iand(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (b(x + 1) .ne. temp) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitor_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(16*LOOPCOUNT):: random\n        INTEGER :: errors = 0\n        INTEGER :: temp\n        INTEGER :: b\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        false_margin = exp(log(.5)/n)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 16\n            IF (random((y - 1) * LOOPCOUNT + x) < false_margin) THEN\n              temp = 1\n              DO z = 1, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n        b = a(1)\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels loop reduction(ior:b)\n          DO x = 2, LOOPCOUNT\n            b = ior(b, a(x))\n          END DO\n        !$acc end data\n        temp = a(1)\n        DO x = 2, LOOPCOUNT\n          temp = ior(temp, a(x))\n        END DO\n        IF (temp .ne. b) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitor_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z, i !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a, b, b_copy !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms2\n        INTEGER,DIMENSION(10) :: c\n        REAL(8),DIMENSION(160*LOOPCOUNT):: randoms\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        CALL RANDOM_NUMBER(randoms2)\n        false_margin = exp(log(.5)/n)\n        b = FLOOR(6*randoms2)\n        b_copy = b\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            DO z = 1, 16\n              IF (randoms(x * 16 * LOOPCOUNT + y * 16 + z - 1) .gt. false_margin) THEN\n                temp = 1\n                DO i = 1, z\n                  temp = temp * 2\n                END DO\n                a(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + temp\n              END IF\n            END DO\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10*LOOPCOUNT), c(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop worker reduction(ior:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ior(temp, a(x * LOOPCOUNT + y))\n            END DO\n            c(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              b(x * LOOPCOUNT + y) = b(x * LOOPCOUNT + y) + c(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ior(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. c(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (b(x * LOOPCOUNT + y) .ne. b_copy(x * LOOPCOUNT + y) + c(x + 1)) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitor_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(10 * LOOPCOUNT):: a !Data\n        INTEGER,DIMENSION(10) :: b\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(160 * LOOPCOUNT) :: randoms\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        false_margin = exp(log(.5) / n)\n        DO x = 1, 10 * LOOPCOUNT\n          DO y = 1, 16\n            IF (randoms(y * 10 * LOOPCOUNT + y - 1) .gt. false_margin) THEN\n              temp = 1\n              DO z = 1, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10))\n          !$acc kernels loop private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop vector reduction(ior:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ior(temp, a(x * LOOPCOUNT + y))\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ior(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. b(x + 1)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitxor_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: randoms\n        INTEGER :: errors = 0\n        INTEGER :: b = 0\n        INTEGER :: temp = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = FLOOR(randoms*1000000)\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels loop reduction(ieor:b)\n          DO x = 1, LOOPCOUNT\n            b = ieor(b, a(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = ieor(temp, a(x))\n        END DO\n        IF (temp .ne. b) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitxor_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a, b, b_copy !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms, randoms2\n        INTEGER,DIMENSION(10):: c\n        REAL*8 :: RAND\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = FLOOR(randoms*1000000)\n        CALL RANDOM_NUMBER(randoms2)\n        b = FLOOR(randoms2*1000000)\n        b_copy = b\n        c = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10*LOOPCOUNT), c(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop worker reduction(ieor:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ieor(temp, a(x * LOOPCOUNT + y))\n            END DO\n            c(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              b(x * LOOPCOUNT + y) = b(x * LOOPCOUNT + y) + c(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ieor(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. c(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (b(x * LOOPCOUNT + y) .ne. b_copy(x * LOOPCOUNT + y) + c(x + 1)) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_bitxor_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms\n        INTEGER,DIMENSION(10):: b\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = FLOOR(randoms*1000000)\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop vector reduction(ieor:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ieor(temp, a(x * LOOPCOUNT + y))\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ieor(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. b(x + 1)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_max_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8) :: maximum, temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        maximum = 0\n        temp = 0\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc kernels loop reduction(max:maximum)\n          DO x = 1, LOOPCOUNT\n            maximum = max(maximum, a(x) * b(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = max(temp, a(x) * b(x))\n        END DO\n        IF (abs(temp - maximum) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_max_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(10):: maximum\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop worker reduction(max:temp)\n            DO y = 1, LOOPCOUNT\n              temp = max(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            maximum(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y)) / maximum(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            IF (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y) - maximum(x + 1) .gt. PRECISION) THEN\n              errors = errors + 1\n            ELSE IF ((c(x * LOOPCOUNT + y) - 1) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_max_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10):: maximum\n        INTEGER :: errors = 0\n        REAL(8) :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        maximum = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(maximum(1:10))\n          !$acc kernels loop private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop vector reduction(max:temp)\n            DO y = 1, LOOPCOUNT\n              temp = max(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            maximum(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = max(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - maximum(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_min_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8):: minimum = 1000\n        REAL(8):: temp = 1000\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc kernels loop reduction(min:minimum)\n          DO x = 1, LOOPCOUNT\n            minimum = min(minimum, a(x) * b(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = min(temp, a(x) * b(x))\n        END DO\n        IF (abs(temp - minimum) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_min_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(10):: minimum\n        REAL(8):: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a = a + 1\n        b = b + 1\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT)) copy(minimum(1:10))\n          !$acc kernels loop gang independent private(temp)\n          DO x = 0, 9\n            temp = 1000\n            !$acc loop worker independent reduction(min:temp)\n            DO y = 1, LOOPCOUNT\n              temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            minimum(x + 1) = temp\n            !$acc loop independent\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y)) / minimum(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1000\n          DO y = 1, LOOPCOUNT\n            temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - minimum(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n            WRITE(*, *) minimum(x + 1)\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (abs(c(x * LOOPCOUNT + y) - (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y) / temp)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_min_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y!Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10):: minimum\n        REAL(8):: temp = 1000\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(minimum(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = 1000\n            !$acc loop vector reduction(min:temp)\n            DO y = 1, LOOPCOUNT\n              temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            minimum(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1000\n          DO y = 1, LOOPCOUNT\n            temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - minimum(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_multiply_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        REAL(8) :: temp = 1\n        REAL(8) :: multiplied_total = 1\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        a = (999.4 + a)/1000\n        b = (999.4 + b)/1000\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels loop reduction(*:multiplied_total)\n          DO x = 1, LOOPCOUNT\n            multiplied_total = multiplied_total * (a(x) + b(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = temp * (a(x) + b(x))\n        END DO\n        IF (abs(temp - multiplied_total) .gt. ((temp / 2) + (multiplied_total / 2)) * PRECISION) THEN\n          WRITE(*, *) temp\n          WRITE(*, *) multiplied_total\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_multiply_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(10):: totals\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a = (999.4 + a) / 2000\n        b = (999.4 + b) / 2000\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT), totals(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = 1\n            !$acc loop worker reduction(*:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n            END DO\n            totals(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)) / totals(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1\n          DO y = 1, LOOPCOUNT\n            temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - totals(x + 1)) .gt. ((temp / 2) + (totals(x + 1) / 2)) * PRECISION) THEN\n            errors = errors + 1\n            WRITE(*, *) temp\n            WRITE(*, *) totals(x + 1)\n            WRITE(*, *) \" \"\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (abs(c(x * LOOPCOUNT + y) - ((a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)) / totals(x + 1))) .gt. c(x * LOOPCOUNT + y) * PRECISION) THEN\n              errors = errors + 1\n              WRITE(*, *) c(x * LOOPCOUNT + y)\n              WRITE(*, *) a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n              WRITE(*, *) \" \"\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_multiply_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10) :: c\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        a = (999.4 + a) / 1000\n        b = (999.4 + b) / 1000\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copyout(c(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = 1\n            !$acc loop vector reduction(*:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n            END DO\n            c(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1\n          DO y = 1, LOOPCOUNT\n            temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - c(x + 1)) .gt. ((temp / 2) + (c(x + 1) / 2)) * PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_or_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        LOGICAL,DIMENSION(LOOPCOUNT):: a !Data\n        LOGICAL :: results = .FALSE.\n        LOGICAL :: temp = .FALSE.\n        REAL(8) :: false_margin = exp(log(.5) / n)\n        REAL(8),DIMENSION(LOOPCOUNT):: random\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        DO x = 1, LOOPCOUNT\n          IF (random(x) > false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc kernels loop reduction(.OR.:results)\n          DO x = 1, LOOPCOUNT\n            results = results .OR. a(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = temp .OR. a(x)\n        END DO\n        IF (temp .neqv. results) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_or_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a, a_copy !Data\n        LOGICAL,DIMENSION(10) :: results\n        LOGICAL :: temp = .FALSE.\n        REAL(8),DIMENSION(10 * LOOPCOUNT) :: random\n        REAL(8) :: false_margin = exp(log(.5) / n)\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n\n        !Initilization\n        DO x = 1, 10 * LOOPCOUNT\n          IF (random(x) .gt. false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n          a_copy(x) = a(x)\n        END DO\n\n        DO x = 1, 10\n          results(x) = .FALSE.\n        END DO\n\n        !$acc data copy(a(1:10*LOOPCOUNT), results(1:10))\n          !$acc kernels loop gang private(temp)\n          DO x = 0, 9\n            temp = .FALSE.\n            !$acc loop worker reduction(.OR.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .OR. a(x * LOOPCOUNT + y)\n            END DO\n            results(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              IF (results(x + 1) .eqv. .TRUE.) THEN\n                IF(a(x * LOOPCOUNT + y) .eqv. .TRUE.) THEN\n                  a(x * LOOPCOUNT + y) = .FALSE.\n                ELSE\n                  a(x * LOOPCOUNT + y) = .TRUE.\n                END IF\n              END IF\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = .FALSE.\n          DO y = 1, LOOPCOUNT\n            temp = temp .OR. a_copy(x * LOOPCOUNT + y)\n          END DO\n          IF (temp .neqv. results(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (temp .eqv. .FALSE.) THEN\n              IF (a(x * LOOPCOUNT + y) .neqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            ELSE\n              IF (a(x * LOOPCOUNT + y) .eqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_reduction_or_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a !Data\n        LOGICAL,DIMENSION(10) :: b\n        LOGICAL :: temp\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms\n        REAL(8) :: false_margin = exp(log(.5) / 2)\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n\n        !Initilization\n        DO x = 1, 10 * LOOPCOUNT\n          IF (randoms(x) > false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)), copy(b(1:10))\n          !$acc kernels loop private(temp)\n          DO x = 0, 9\n            temp = .FALSE.\n            !$acc loop vector reduction(.OR.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .OR. a(x * LOOPCOUNT + y)\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = .FALSE.\n          DO y = 1, LOOPCOUNT\n            temp = temp .OR. a(x * LOOPCOUNT + y)\n          END DO\n          IF (temp .neqv. b(x + 1)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_seq.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(b(1:LOOPCOUNT))\n          !$acc kernels loop seq\n          DO x = 2, LOOPCOUNT\n            b(x) = b(x - 1) + a(x)\n          END DO\n        !$acc end data\n\n        DO x = 2, LOOPCOUNT\n          IF (abs(b(x) - (b(x - 1) + a(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_tile.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,combined-constructs,loop,tile,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        REAL(8),DIMENSION(SMALL_LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(SMALL_LOOPCOUNT,SMALL_LOOPCOUNT)::d\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(c)\n\n        !$acc data copyin(a(1:SMALL_LOOPCOUNT), b(1:SMALL_LOOPCOUNT), c(1:SMALL_LOOPCOUNT)) copyout(d(1:SMALL_LOOPCOUNT,1:SMALL_LOOPCOUNT))\n          !$acc kernels loop tile(*, *) reduction(+:temp)\n          DO x = 1, SMALL_LOOPCOUNT\n            DO y = 1, SMALL_LOOPCOUNT\n              temp = 0\n              DO z = 1, SMALL_LOOPCOUNT\n                temp = temp + a(z) + b(z) + c(z)\n              END DO\n              d(x,y) = temp\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 1, SMALL_LOOPCOUNT\n          DO y = 1, SMALL_LOOPCOUNT\n            temp = 0\n            DO z = 1, SMALL_LOOPCOUNT\n              temp = temp + a(z) + b(z) + c(z)\n            END DO\n            IF (abs(d(x,y) - temp) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction",
                            "combined-constructs",
                            "loop",
                            "tile"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_vector_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: multiplier\n        INTEGER :: errors = 0\n\n        multiplier = 1\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc kernels\n            !$acc loop vector\n            DO x = 1, LOOPCOUNT\n              c(x) = (a(x) + b(x)) * multiplier\n            END DO\n            multiplier = multiplier + 1\n            !$acc loop vector\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + ((a(x) + b(x)) * multiplier)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (3 * (a(x) + b(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_loop_worker_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: RAND\n        REAL(8) :: multiplier\n        INTEGER :: errors = 0\n\n        multiplier = 1\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc kernels\n            !$acc loop worker\n            DO x = 1, LOOPCOUNT\n              c(x) = (a(x) + b(x)) * multiplier\n            END DO\n            multiplier = multiplier + 1\n            !$acc loop worker\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + (a(x) + b(x)) * multiplier\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (3 * (a(x) + b(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_num_gangs.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,reduction,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        INTEGER :: results !Data\n        INTEGER :: errors = 0\n\n        results = 0\n\n        !$acc kernels num_gangs(8)\n          !$acc loop gang reduction(+:results)\n          DO x = 1, LOOPCOUNT\n            results = 1\n          END DO\n        !$acc end kernels\n          \n        IF (results .ne. 8) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels",
                            "reduction"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_num_workers.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n          !$acc kernels loop num_workers(16)\n          DO x = 1, LOOPCOUNT\n            b(x) = a(x)\n          END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT)) create(b(1:LOOPCOUNT))\n        !$acc kernels present(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            b(x) = a(x)\n          END DO\n        !$acc end kernels\n        !$acc exit data delete(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_scalar_default_copy.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        REAL(8) :: total = 0.0\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        DO x = 1, LOOPCOUNT\n          total = total + a(x)\n        END DO\n        !$acc data copyin(b(1:LOOPCOUNT))\n          !$acc kernels num_gangs(1) vector_length(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              total = total + b(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          total = total - (a(x) + b(x))\n        END DO\n        IF (abs(total) .gt. (2 * LOOPCOUNT - 2) * PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_vector_length.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:kernels,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n          !$acc kernels vector_length(16)\n            !$acc loop vector\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "kernels"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "kernels_wait.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,kernels,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT)) async(1)\n        !$acc kernels wait(1)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end kernels\n        !$acc exit data copyout(c(1:LOOPCOUNT)) delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "kernels"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "loop_collapse.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b, c !Data\n        REAL(8):: total\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        DO x = 0, 9\n          c(x*LOOPCOUNT + 1) = a(x*LOOPCOUNT + 1) + b(x*LOOPCOUNT + 1)\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT))\n          !$acc parallel\n            !$acc loop independent\n            DO x = 0, 9\n              DO y = 2, LOOPCOUNT\n                c(x*LOOPCOUNT + y) = c(x*LOOPCOUNT + y - 1) + a(x*LOOPCOUNT + y) + b(x*LOOPCOUNT + y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 0, 9\n          total = 0\n          DO y = 1, LOOPCOUNT\n            total = total + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            IF (abs(total - c(x * LOOPCOUNT + y)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:construct-independent,loop,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b, c !Data\n        REAL(8):: total\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copyout(c(1:10*LOOPCOUNT))\n          !$acc parallel\n            !$acc loop independent collapse(2)\n            DO x = 0, 9\n              DO y = 1, LOOPCOUNT\n                c(x*LOOPCOUNT + y) = a(x*LOOPCOUNT + y) + b(x*LOOPCOUNT + y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            IF (abs(c(x*LOOPCOUNT+y) - (a(x*LOOPCOUNT+y)+b(x*LOOPCOUNT+y))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "loop_no_collapse.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c !Data\n        REAL(8):: total\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        DO x = 0, 9\n          c(x * LOOPCOUNT + 1) = a(x * LOOPCOUNT + 1) + b(x * LOOPCOUNT + 1)\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT))\n          !$acc parallel\n            !$acc loop independent\n            DO x = 0, 9\n              DO y = 2, LOOPCOUNT\n                c(x * LOOPCOUNT + y) = c(x * LOOPCOUNT + y - 1) + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 0, 9\n          total = 0\n          DO y = 1, LOOPCOUNT\n            total = total + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            IF (abs(total - c(x * LOOPCOUNT + y)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:construct-independent,loop,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c !Data\n        REAL(8):: total\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        DO x = 0, 9\n          c(x * LOOPCOUNT + 1) = a(x * LOOPCOUNT + 1) + b(x * LOOPCOUNT + 1)\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT))\n          !$acc kernels\n            !$acc loop independent\n            DO x = 0, 9\n              DO y = 2, LOOPCOUNT\n                c(x * LOOPCOUNT + y) = c(x * LOOPCOUNT + y - 1) + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n              END DO\n            END DO\n          !$acc end kernels\n        !$acc end data\n\n        DO x = 0, 9\n          total = 0\n          DO y = 1, LOOPCOUNT\n            total = total + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            IF (abs(total - c(x * LOOPCOUNT + y)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, i_a, i_b, i_c, i_d, i_e, i_f, i_g, i_h, i_i, i_j !Iterators\n        INTEGER, PARAMETER :: PRIVATE_LOOPCOUNT = 1024\n        REAL(8),DIMENSION(PRIVATE_LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors\n        errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:PRIVATE_LOOPCOUNT), b(1:PRIVATE_LOOPCOUNT)) copy(c(1:PRIVATE_LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO i_a = 0, 1\n              !$acc loop\n              DO i_b = 0, 1\n                !$acc loop\n                DO i_c = 0, 1\n                  !$acc loop\n                  DO i_d = 0, 1\n                    !$acc loop\n                    DO i_e = 0, 1\n                      !$acc loop\n                      DO i_f = 0, 1\n                        !$acc loop\n                        DO i_g = 0, 1\n                          !$acc loop\n                          DO i_h = 0, 1\n                            !$acc loop\n                            DO i_i = 0, 1\n                              !$acc loop\n                              DO i_j = 0, 1\n                                c(i_a*512 + i_b*256 + i_c*128 + i_d*64 + i_e*32 + i_f*16 + i_g*8 + i_h*4 + i_i*2 + i_j + 1) = &\n                                a(i_a*512 + i_b*256 + i_c*128 + i_d*64 + i_e*32 + i_f*16 + i_g*8 + i_h*4 + i_i*2 + i_j + 1) + &\n                                b(i_a*512 + i_b*256 + i_c*128 + i_d*64 + i_e*32 + i_f*16 + i_g*8 + i_h*4 + i_i*2 + i_j + 1)\n                              END DO\n                            END DO\n                          END DO\n                        END DO\n                      END DO\n                    END DO\n                  END DO\n                END DO\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, PRIVATE_LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,parallel,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f, g !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(d)\n        CALL RANDOM_NUMBER(e)\n        f = 0\n        g = 0\n        \n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT), c(1:LOOPCOUNT), f(1:LOOPCOUNT), g(1:LOOPCOUNT))\n          !$acc parallel async(1)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              f(x) = d(x) + e(x)\n            END DO\n          !$acc end parallel\n          !$acc update host(c(1:LOOPCOUNT)) wait(1) async(4)\n          !$acc update host(f(1:LOOPCOUNT)) wait(2) async(5)\n          !$acc parallel wait(1, 2) async(3)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              g(x) = c(x) + f(x)\n            END DO\n          !$acc end parallel\n          !$acc update host(g(1:LOOPCOUNT)) async(3)\n        !$acc end data\n        !$acc wait\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          ELSE IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          ELSE IF (abs(g(x) - (f(x) + c(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "parallel",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_copy.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_host !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        a_host = a\n\n        !$acc parallel copy(a(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            a(x) = 2 * a(x)\n          END DO \n        !$acc end parallel\n    \n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a_host(x) - (a(x) / 2)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_copyin.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: hasDevice\n        hasDevice(1) = 1\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        a_copy = a\n        b = 0\n\n        !$acc enter data copyin(hasDevice(1:1))\n        !$acc parallel present(hasDevice(1:1))\n          hasDevice(1) = 0\n        !$acc end parallel\n\n\n        !$acc parallel copyin(a(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            a(x) = 0.0\n          END DO\n\n        !$acc end parallel\n\n        DO x = 1, LOOPCOUNT\n          IF ((abs(a(x) - a_copy(x)) > PRECISION .AND. hasDevice(1) .eq. 1) .OR. (hasDevice(1) .eq. 0 .AND. abs(a(x)) > PRECISION)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_copyout.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: hasDevice\n        hasDevice(1) = 1\n        !$acc enter data copyin(hasDevice(1:1))\n        !$acc parallel present(hasDevice(1:1))\n          hasDevice(1) = 0\n        !$acc end parallel\n\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel copyout(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:parallel,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: hasDevice\n        hasDevice(1) = 1\n        !$acc enter data copyin(hasDevice(1:1))\n        !$acc parallel present(hasDevice(1:1))\n          hasDevice(1) = 0\n        !$acc end parallel\n\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = a\n        IF (hasDevice(1) .eq. 1) THEN\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel copyout(b(1:LOOPCOUNT))\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                b(x) = b(x) - a(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:parallel,update,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        INTEGER,DIMENSION(1):: hasDevice\n        hasDevice(1) = 1\n        !$acc enter data copyin(hasDevice(1:1))\n        !$acc parallel present(hasDevice(1:1))\n          hasDevice(1) = 0\n        !$acc end parallel\n\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = a\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel copyout(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) - a(x)\n            END DO\n          !$acc end parallel\n          !$acc update host(b(1:LOOPCOUNT))\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(b(x)) > 2 * PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_create.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n          !$acc parallel create(b(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x)\n            END DO\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_default_copy.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,parallel,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,parallel,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL,DIMENSION(1):: devtest\n        devtest(1) = .TRUE.\n\n        !$acc enter data copyin(devtest(1:1))\n        !$acc parallel\n          devtest(1) = .FALSE.\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (devtest(1)) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = 1\n\n          !$acc enter data copyin(c(1:LOOPCOUNT))\n          c = 0\n          !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n            !$acc parallel\n              !$acc loop\n              DO x = 1, LOOPCOUNT\n                c(x) = c(x) + a(x) + b(x)\n              END DO\n            !$acc end parallel\n          !$acc end data\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n          !$acc exit data copyout(c(1:LOOPCOUNT))\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x) + 1)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_default_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,default,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        INTEGER :: errors = 0\n\n        a = 0\n\n        !$acc data copy(a(1:LOOPCOUNT))\n          !$acc parallel default(present)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = 1.0\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - 1) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "default"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_firstprivate.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,firstprivate,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, d !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: c, c_copy\n        REAL*8 :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(c)\n        c_copy = c\n        d = 0\n        \n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(d(1:10*LOOPCOUNT))\n          !$acc parallel firstprivate(c(1:LOOPCOUNT))\n            !$acc loop gang\n            DO x = 0, 9\n              !$acc loop worker\n              DO y = 1, LOOPCOUNT\n                d(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y) + c(y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            IF (abs(d(x * LOOPCOUNT + y) - (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y) + c(y))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "firstprivate"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:parallel,firstprivate,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, d !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: c, c_copy\n        REAL*8 :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        d = 0\n        \n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(d(1:10*LOOPCOUNT))\n          !$acc parallel firstprivate(c(1:LOOPCOUNT))\n            !$acc loop gang independent\n            DO x = 0, 9\n              !$acc loop worker independent\n              DO y = 1, LOOPCOUNT\n                c(y) = a(x * LOOPCOUNT + y) - b(x * LOOPCOUNT + y)\n              END DO\n              !$acc loop worker independent\n              DO y = 1, LOOPCOUNT\n                d(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y) + c(y)\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, 10 * LOOPCOUNT\n          IF (abs(d(x) - (2 * a(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO       \n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "firstprivate"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_if.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,parallel,if,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL :: host = .FALSE.\n        LOGICAL :: device = .TRUE.\n        INTEGER,DIMENSION(1) :: dev_test\n        dev_test(1) = 0\n\n        !$acc enter data copyin(dev_test(1:1))\n        !$acc parallel present(dev_test(1:1))\n          dev_test(1) = 1\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc parallel if(host)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end parallel\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "parallel",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,parallel,if,V:2.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL :: host = .FALSE.\n        LOGICAL :: device = .TRUE.\n        INTEGER,DIMENSION(1) :: dev_test\n        dev_test(1) = 0\n\n        !$acc enter data copyin(dev_test(1:1))\n        !$acc parallel present(dev_test(1:1))\n          dev_test(1) = 1\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        IF (dev_test(1) .eq. 0) THEN\n          CALL RANDOM_NUMBER(a)\n          CALL RANDOM_NUMBER(b)\n          c = a + b\n\n          !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc parallel if(host) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n          DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "parallel",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,parallel,if,V:2.0-2.7\n      LOGICAL FUNCTION test3()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n        LOGICAL :: host = .FALSE.\n        LOGICAL :: device = .TRUE.\n        INTEGER,DIMENSION(1) :: dev_test\n        dev_test(1) = 0\n\n        !$acc enter data copyin(dev_test(1:1))\n        !$acc parallel present(dev_test(1:1))\n          dev_test(1) = 1\n        !$acc end parallel\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = a + b\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc parallel if(device) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = c(x) + a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)), copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (2 * (a(x) + b(x)))) .gt. 2 * PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "parallel",
                            "if"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        a = 0\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        !$acc data copy(a(1:LOOPCOUNT))\n          !$acc parallel loop\n          DO x = 1, LOOPCOUNT\n            a(x) = 1\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - 1) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:parallel,loop,V:1.0-2.7\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        a = 0\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(c)\n\n        !$acc data copy(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = b(x)\n            END DO\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) + c(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - (b(x) + c(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c, d !Data\n\t\t\t\tINTEGER,DIMENSION(10):: errors_array\n        INTEGER :: errors\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        d = a + b\n\t\t\t\terrors = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT), c(1:10*LOOPCOUNT), d(1:10*LOOPCOUNT)) copy(errors_array(1:10))\n          DO x = 0, 9\n            !$acc parallel loop async(x)\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            END DO\n            !$acc parallel loop async(x) reduction(+:errors_array(x))\n            DO y = 1, LOOPCOUNT\n              IF (c(x * LOOPCOUNT + y) - d(x * LOOPCOUNT + y) .gt.  PRECISION .OR. &\n                d(x * LOOPCOUNT + y) - c(x * LOOPCOUNT + y) .gt. PRECISION) THEN\n                errors_array(x) = errors_array(x) + 1\n              END IF\n            END DO\n          END DO\n\t\t\t\t\t!$acc wait\n        !$acc end data\n\n\t\t\t\tDO x = 1, 10\n\t\t\t\t\terrors = errors + errors_array(x)\n\t\t\t\tEND DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_auto.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,combined-constructs,loop,auto,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b !Data\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        a_copy = a\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n          !$acc parallel loop auto\n          DO x = 1, LOOPCOUNT\n            b(x) = a(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        !$acc data copy(a(1:LOOPCOUNT))\n          !$acc parallel loop auto\n          DO x = 2, LOOPCOUNT\n            a(x) = a(x - 1) + a(x)\n          END DO\n        !$acc end data\n\n        temp = 0\n        DO x = 1, LOOPCOUNT\n          temp = temp + a_copy(x)\n          IF (abs(temp - a(x)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "combined-constructs",
                            "loop",
                            "auto"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_block.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,loop,V:3.1-3.3\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        a = 0\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        !$acc data copy(a(1:LOOPCOUNT))\n          block\n          !$acc parallel loop\n          DO x = 1, LOOPCOUNT\n            a(x) = 1\n          END DO\n          end block\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - 1) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "loop"
                        ],
                        "versions": [
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:parallel,loop,V:3.1-3.3\n      LOGICAL FUNCTION test2()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        a = 0\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(c)\n\n        !$acc data copy(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        block\n          !$acc parallel\n          block\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = b(x)\n            END DO\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) + c(x)\n            END DO\n          end block\n          !$acc end parallel\n        end block\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - (b(x) + c(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "loop"
                        ],
                        "versions": [
                            "3.1",
                            "3.2",
                            "3.3"
                        ]
                    }
                }
            },
            "parallel_loop_gang.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n          !$acc parallel loop gang\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_add_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8) :: total\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        total = 0\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(total)\n          !$acc parallel loop reduction(+:total)\n          DO x = 1, LOOPCOUNT\n            total = total + a(x) + b(x)\n          END DO\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          total = total - (a(x) + b(x))\n        END DO\n        IF (abs(total) .gt. LOOPCOUNT * PRECISION) THEN\n          WRITE(*, *) total\n          errors = 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_add_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b, c, d !Data\n        REAL(8) :: avg\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        avg = 0\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) create(c(1:10*LOOPCOUNT)) copyout(d(1:10*LOOPCOUNT))\n          !$acc parallel loop gang private(avg)\n          DO x = 0, 9\n            avg = 0\n            !$acc loop worker reduction(+:avg)\n            DO y = 1, LOOPCOUNT\n              avg = avg + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n              c(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            END DO\n            avg = avg / LOOPCOUNT\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              d(x * LOOPCOUNT + y) = c(x * LOOPCOUNT + y) / avg\n            END DO\n          END DO\n        !$acc end data\n        DO x = 0, 9\n          avg = 0\n          DO y = 1, LOOPCOUNT\n            avg = avg + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n          END DO\n          avg = avg / LOOPCOUNT\n          DO y = 1, LOOPCOUNT\n            IF (abs(d(x * LOOPCOUNT + y) - ((a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)) / avg)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_add_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10) :: c\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copyout(c(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = 0.0\n            !$acc loop vector reduction(+:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n            END DO\n            c(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = temp + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n          END DO\n          IF (abs(temp - c(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_and_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: randoms\n        LOGICAL,DIMENSION(LOOPCOUNT):: a !Data\n        LOGICAL :: results = .TRUE.\n        LOGICAL :: host_results = .TRUE.\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        false_margin = exp(log(.5) / LOOPCOUNT)\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, LOOPCOUNT\n          IF (randoms(x) .lt. false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel loop reduction(.and.:results)\n          DO x = 1, LOOPCOUNT\n            results = results .and. a(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          host_results = host_results .and. a(x)\n        END DO\n        IF (host_results .neqv. results) THEN\n          errors = 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_and_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a, a_copy !Data\n        LOGICAL,DIMENSION(10) :: results, has_false\n        LOGICAL :: host_results = .TRUE.\n        LOGICAL :: temp = .TRUE.\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms\n        REAL(8) :: false_margin = exp(log(.5) / LOOPCOUNT)\n        INTEGER :: errors = 0\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        DO x = 1, 10\n          results(x) = .TRUE.\n          has_false(x) = .FALSE.\n        END DO\n        DO x = 1, 10*LOOPCOUNT\n          IF (randoms(x) .lt. false_margin) THEN\n            a(x) = .TRUE.\n            a_copy(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n            a_copy(x) = .FALSE.\n            has_false(x / LOOPCOUNT) = .TRUE.\n          END IF\n        END DO\n\n        !$acc data copy(a(1:10*LOOPCOUNT), results(1:10))\n          !$acc parallel loop gang\n          DO x = 0, 9\n            temp = .TRUE.\n            !$acc loop worker reduction(.AND.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .AND. a(x * LOOPCOUNT + y)\n            END DO\n            results(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              IF (temp .eqv. .TRUE.) THEN\n                IF (a(x * LOOPCOUNT + y) .eqv. .TRUE.) THEN\n                  a(x * LOOPCOUNT + y) = .FALSE.\n                ELSE\n                  a(x * LOOPCOUNT + y) = .TRUE.\n                END IF\n              END IF\n            END DO\n          END DO\n        !$acc end data\n        DO x = 0, 9\n          temp = .TRUE.\n          DO y = 1, LOOPCOUNT\n            temp = temp .AND. a_copy(x * LOOPCOUNT + y)\n          END DO\n          IF (temp .neqv. results(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (temp .eqv. .TRUE.) THEN\n              IF (a(x * LOOPCOUNT + y) .eqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            ELSE\n              IF (a(x * LOOPCOUNT + y) .neqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_and_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a !Data\n        LOGICAL,DIMENSION(10):: b\n        LOGICAL,DIMENSION(10):: has_false\n        LOGICAL :: temp\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(10*LOOPCOUNT) :: randoms\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        false_margin = exp(log(.5) / LOOPCOUNT)\n        DO x = 1, 10\n          has_false(x) = .FALSE.\n          b(x) = .TRUE.\n        END DO\n\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            IF (randoms(x * LOOPCOUNT + y) .lt. false_margin) THEN\n              a(x * LOOPCOUNT + y) = .TRUE.\n            ELSE\n              a(x * LOOPCOUNT + y) = .FALSE.\n              has_false(x + 1) = .TRUE.\n            END IF\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = .TRUE.\n            !$acc loop vector reduction(.AND.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .AND. a(x * LOOPCOUNT + y)\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = .FALSE.\n          DO y = 1, LOOPCOUNT\n            IF (a(x * LOOPCOUNT + y) .eqv. .FALSE.) THEN\n              temp = .TRUE.\n            END IF\n          END DO\n          IF (temp .neqv. has_false(x + 1)) THEN\n            errors = 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitand_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        INTEGER :: b\n        REAL(8),DIMENSION(16 * LOOPCOUNT):: randoms\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        INTEGER :: temp = 1\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        false_margin = exp(log(.5)/n)\n        DO x = 1, LOOPCOUNT\n          DO y = 0, 15\n            IF (randoms(y * LOOPCOUNT + x) .lt. false_margin) THEN\n              temp = 1\n              DO z = 0, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n        \n        b = a(1)\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel loop reduction(iand:b)\n          DO x = 1, LOOPCOUNT\n            b = iand(b, a(x))\n          END DO\n        !$acc end data\n \n        temp = a(1)\n        DO x = 2, LOOPCOUNT\n          temp = iand(a(x), temp)\n        END DO\n        IF (temp .ne. b) THEN\n          WRITE(*, *) temp\n          WRITE(*, *) b\n          errors = 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitand_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a, b, b_copy !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms2\n        INTEGER,DIMENSION(10) :: c\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(160*LOOPCOUNT)::randoms\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        CALL RANDOM_NUMBER(randoms2)\n        b = FLOOR(10000 * randoms2)\n        b_copy = b\n        false_margin = exp(log(.5)/LOOPCOUNT)\n        DO x = 1, 10 * LOOPCOUNT\n          DO y = 1, 16\n            IF (randoms((y - 1) * 10 * LOOPCOUNT + x) < false_margin) THEN\n              temp = 1\n              DO z = 1, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n        \n        DO x = 1, 10\n         c(x) = a((x - 1) * LOOPCOUNT + x)\n        END DO\n        \n        \n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10*LOOPCOUNT), c(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 1, 10\n            temp = a((x - 1) * LOOPCOUNT + 1)\n            !$acc loop worker reduction(iand:temp)\n            DO y = 2, LOOPCOUNT\n              temp = iand(temp, a((x - 1) * LOOPCOUNT + y))\n            END DO\n            c(x) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              b((x - 1) * LOOPCOUNT + y) = b((x - 1) * LOOPCOUNT + y) + c(x)\n            END DO\n          END DO\n        !$acc end data\n\n       DO x = 1, 10\n         temp = a((x - 1) * LOOPCOUNT + 1)\n         DO y = 2, LOOPCOUNT\n           temp = iand(temp, a((x - 1) * LOOPCOUNT + y))\n         END DO\n         IF (temp .ne. c(x)) THEN\n           errors = errors + 1\n         END IF\n         DO y = 1, LOOPCOUNT\n           IF (b((x - 1) * LOOPCOUNT + y) .ne. b_copy((x - 1) * LOOPCOUNT + y) + temp) THEN\n             errors = errors + 1\n           END IF\n         END DO\n       END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitand_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z, i !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a !Data\n        INTEGER,DIMENSION(10):: b\n        INTEGER :: c\n        REAL(8),DIMENSION(160*LOOPCOUNT):: random\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        false_margin = exp(log(.5) / n)\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            DO z = 1, 16\n              IF (random(x * 16 * LOOPCOUNT + (y - 1) * 16 + z - 1) < false_margin) THEN\n                temp = 1\n                DO i = 1, z\n                  temp = temp * 2\n                END DO\n                a(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + temp\n              END IF\n            END DO\n          END DO\n        END DO\n                \n        !$acc data copyin(a(1:10*LOOPCOUNT)), copy(b(1:10))\n          !$acc parallel loop private(c)\n          DO x = 0, 9\n            c = a(x * LOOPCOUNT + 1)\n            !$acc loop vector reduction(iand:c)\n            DO y = 1, LOOPCOUNT\n              c = iand(c, a(x * LOOPCOUNT + y))\n            END DO\n            b(x + 1) = c\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = a(x * LOOPCOUNT + 1)\n          DO y = 2, LOOPCOUNT\n            temp = iand(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (b(x + 1) .ne. temp) THEN\n            errors = errors + 1\n          END IF\n        END DO       \n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitor_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(16*LOOPCOUNT):: random\n        INTEGER :: errors = 0\n        INTEGER :: temp\n        INTEGER :: b\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        false_margin = exp(log(.5)/n)\n        DO x = 1, LOOPCOUNT\n          DO y = 1, 16\n            IF (random((y - 1) * LOOPCOUNT + x) < false_margin) THEN\n              temp = 1\n              DO z = 1, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n        b = a(1)\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel loop reduction(ior:b)\n          DO x = 2, LOOPCOUNT\n            b = ior(b, a(x))\n          END DO\n        !$acc end data\n        temp = a(1)\n        DO x = 2, LOOPCOUNT\n          temp = ior(temp, a(x))\n        END DO\n        IF (temp .ne. b) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitor_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z, i !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a, b, b_copy !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms2\n        INTEGER,DIMENSION(10) :: c\n        REAL(8),DIMENSION(160*LOOPCOUNT):: randoms\n        REAL(8) :: false_margin\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        CALL RANDOM_NUMBER(randoms2)\n        false_margin = exp(log(.5)/n)\n        b = FLOOR(6*randoms2)\n        b_copy = b\n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            DO z = 1, 16\n              IF (randoms(x * 16 * LOOPCOUNT + y * 16 + z - 1) .gt. false_margin) THEN\n                temp = 1\n                DO i = 1, z\n                  temp = temp * 2\n                END DO\n                a(x * LOOPCOUNT + y) = a(x * LOOPCOUNT + y) + temp\n              END IF\n            END DO\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10*LOOPCOUNT), c(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop worker reduction(ior:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ior(temp, a(x * LOOPCOUNT + y))\n            END DO\n            c(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              b(x * LOOPCOUNT + y) = b(x * LOOPCOUNT + y) + c(x + 1)\n            END DO\n          END DO\n        !$acc end data\n        \n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ior(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. c(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (b(x * LOOPCOUNT + y) .ne. b_copy(x * LOOPCOUNT + y) + c(x + 1)) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitor_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        INTEGER,DIMENSION(10 * LOOPCOUNT):: a !Data\n        INTEGER,DIMENSION(10) :: b\n        REAL(8) :: false_margin\n        REAL(8),DIMENSION(160 * LOOPCOUNT) :: randoms\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        false_margin = exp(log(.5) / n)\n        DO x = 1, 10 * LOOPCOUNT\n          DO y = 1, 16\n            IF (randoms(y * 10 * LOOPCOUNT + y - 1) .gt. false_margin) THEN\n              temp = 1\n              DO z = 1, y\n                temp = temp * 2\n              END DO\n              a(x) = a(x) + temp\n            END IF\n          END DO\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop vector reduction(ior:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ior(temp, a(x * LOOPCOUNT + y))\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ior(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. b(x + 1)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitxor_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: randoms\n        INTEGER :: errors = 0\n        INTEGER :: b = 0\n        INTEGER :: temp = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = FLOOR(randoms*1000000)\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel loop reduction(ieor:b)\n          DO x = 1, LOOPCOUNT\n            b = ieor(b, a(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = ieor(temp, a(x))\n        END DO\n        IF (temp .ne. b) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitxor_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a, b, b_copy !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms, randoms2\n        INTEGER,DIMENSION(10):: c\n        REAL*8 :: RAND\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = FLOOR(randoms*1000000)\n        CALL RANDOM_NUMBER(randoms2)\n        b = FLOOR(randoms2*1000000)\n        b_copy = b\n        c = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10*LOOPCOUNT), c(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop worker reduction(ieor:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ieor(temp, a(x * LOOPCOUNT + y))\n            END DO\n            c(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              b(x * LOOPCOUNT + y) = b(x * LOOPCOUNT + y) + c(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ieor(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. c(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (b(x * LOOPCOUNT + y) .ne. b_copy(x * LOOPCOUNT + y) + c(x + 1)) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_bitxor_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        INTEGER,DIMENSION(10*LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms\n        INTEGER,DIMENSION(10):: b\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n        a = FLOOR(randoms*1000000)\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)) copy(b(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop vector reduction(ieor:temp)\n            DO y = 1, LOOPCOUNT\n              temp = ieor(temp, a(x * LOOPCOUNT + y))\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n        \n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = ieor(temp, a(x * LOOPCOUNT + y))\n          END DO\n          IF (temp .ne. b(x + 1)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_max_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8) :: maximum, temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        maximum = 0\n        temp = 0\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel loop reduction(max:maximum)\n          DO x = 1, LOOPCOUNT\n            maximum = max(maximum, a(x) * b(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = max(temp, a(x) * b(x))\n        END DO\n        IF (abs(temp - maximum) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_max_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(10):: maximum\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop worker reduction(max:temp)\n            DO y = 1, LOOPCOUNT\n              temp = max(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            maximum(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y)) / maximum(x + 1)\n            END DO\n          END DO\n        !$acc end data\n        \n        DO x = 0, 9\n          DO y = 1, LOOPCOUNT\n            IF (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y) - maximum(x + 1) .gt. PRECISION) THEN\n              errors = errors + 1\n            ELSE IF ((c(x * LOOPCOUNT + y) - 1) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_max_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10):: maximum\n        INTEGER :: errors = 0\n        REAL(8) :: temp\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        maximum = 0\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(maximum(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = 0\n            !$acc loop vector reduction(max:temp)\n            DO y = 1, LOOPCOUNT\n              temp = max(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            maximum(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = max(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - maximum(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_min_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8):: minimum = 1000\n        REAL(8):: temp = 1000\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n          !$acc parallel loop reduction(min:minimum)\n          DO x = 1, LOOPCOUNT\n            minimum = min(minimum, a(x) * b(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = min(temp, a(x) * b(x))\n        END DO\n        IF (abs(temp - minimum) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_min_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(10):: minimum\n        REAL(8):: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a = a + 1\n        b = b + 1\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT)) copy(minimum(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 1000\n            !$acc loop worker reduction(min:temp)\n            DO y = 1, LOOPCOUNT\n              temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            minimum(x + 1) = temp\n            !$acc loop\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y)) / minimum(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1000\n          DO y = 1, LOOPCOUNT\n            temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - minimum(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (abs(c(x * LOOPCOUNT + y) - (a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y) / temp)) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_min_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y!Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10):: minimum\n        REAL(8):: temp = 1000\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(minimum(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 1000\n            !$acc loop vector reduction(min:temp)\n            DO y = 1, LOOPCOUNT\n              temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n            END DO\n            minimum(x + 1) = temp\n          END DO\n        !$acc end data\n        \n        DO x = 0, 9\n          temp = 1000\n          DO y = 1, LOOPCOUNT\n            temp = min(temp, a(x * LOOPCOUNT + y) * b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - minimum(x + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_multiply_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n        REAL(8) :: temp = 1\n        REAL(8) :: multiplied_total = 1\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        a = (999.4 + a)/1000\n        b = (999.4 + b)/1000\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel loop reduction(*:multiplied_total)\n          DO x = 1, LOOPCOUNT\n            multiplied_total = multiplied_total * (a(x) + b(x))\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = temp * (a(x) + b(x))\n        END DO\n        IF (abs(temp - multiplied_total) .gt. ((temp / 2) + (multiplied_total / 2)) * PRECISION) THEN\n          WRITE(*, *) temp\n          WRITE(*, *) multiplied_total\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_multiply_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10*LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(10):: totals\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        a = (999.4 + a) / 2000\n        b = (999.4 + b) / 2000\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copy(c(1:10*LOOPCOUNT), totals(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = 1\n            !$acc loop worker reduction(*:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n            END DO\n            totals(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              c(x * LOOPCOUNT + y) = (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)) / totals(x + 1)\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1\n          DO y = 1, LOOPCOUNT\n            temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - totals(x + 1)) .gt. ((temp / 2) + (totals(x + 1) / 2)) * PRECISION) THEN\n            errors = errors + 1\n            WRITE(*, *) temp\n            WRITE(*, *) totals(x + 1)\n            WRITE(*, *) \" \"\n          END IF\n          DO y = 1, LOOPCOUNT \n            IF (abs(c(x * LOOPCOUNT + y) - ((a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)) / totals(x + 1))) .gt. c(x * LOOPCOUNT + y) * PRECISION) THEN\n              errors = errors + 1\n              WRITE(*, *) c(x * LOOPCOUNT + y)\n              WRITE(*, *) a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n              WRITE(*, *) \" \"\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_multiply_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(10) :: c\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        a = (999.4 + a) / 1000\n        b = (999.4 + b) / 1000\n\n        !$acc data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT)) copyout(c(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = 1\n            !$acc loop vector reduction(*:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n            END DO\n            c(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = 1\n          DO y = 1, LOOPCOUNT\n            temp = temp * (a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y))\n          END DO\n          IF (abs(temp - c(x + 1)) .gt. ((temp / 2) + (c(x + 1) / 2)) * PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_or_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        LOGICAL,DIMENSION(LOOPCOUNT):: a !Data\n        LOGICAL :: results = .FALSE.\n        LOGICAL :: temp = .FALSE.\n        REAL(8) :: false_margin = exp(log(.5) / n)\n        REAL(8),DIMENSION(LOOPCOUNT):: random\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        DO x = 1, LOOPCOUNT\n          IF (random(x) > false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n        END DO\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel loop reduction(.OR.:results)\n          DO x = 1, LOOPCOUNT\n            results = results .OR. a(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          temp = temp .OR. a(x)\n        END DO\n        IF (temp .neqv. results) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_or_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a, a_copy !Data\n        LOGICAL,DIMENSION(10) :: results\n        LOGICAL :: temp = .FALSE.\n        REAL(8),DIMENSION(10 * LOOPCOUNT) :: random\n        REAL(8) :: false_margin = exp(log(.5) / n)\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n\n        !Initilization\n        DO x = 1, 10 * LOOPCOUNT\n          IF (random(x) .gt. false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n          a_copy(x) = a(x)\n        END DO\n\n        DO x = 1, 10\n          results(x) = .FALSE.\n        END DO\n\n        !$acc data copy(a(1:10*LOOPCOUNT), results(1:10))\n          !$acc parallel loop gang private(temp)\n          DO x = 0, 9\n            temp = .FALSE.\n            !$acc loop worker reduction(.OR.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .OR. a(x * LOOPCOUNT + y)\n            END DO\n            results(x + 1) = temp\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              IF (results(x + 1) .eqv. .TRUE.) THEN\n                IF(a(x * LOOPCOUNT + y) .eqv. .TRUE.) THEN\n                  a(x * LOOPCOUNT + y) = .FALSE.\n                ELSE\n                  a(x * LOOPCOUNT + y) = .TRUE.\n                END IF\n              END IF\n            END DO\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = .FALSE.\n          DO y = 1, LOOPCOUNT\n            temp = temp .OR. a_copy(x * LOOPCOUNT + y)\n          END DO\n          IF (temp .neqv. results(x + 1)) THEN\n            errors = errors + 1\n          END IF\n          DO y = 1, LOOPCOUNT\n            IF (temp .eqv. .FALSE.) THEN\n              IF (a(x * LOOPCOUNT + y) .neqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            ELSE\n              IF (a(x * LOOPCOUNT + y) .eqv. a_copy(x * LOOPCOUNT + y)) THEN\n                errors = errors + 1\n              END IF\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_reduction_or_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,reduction,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        LOGICAL,DIMENSION(10*LOOPCOUNT):: a !Data\n        LOGICAL,DIMENSION(10) :: b\n        LOGICAL :: temp\n        REAL(8),DIMENSION(10*LOOPCOUNT):: randoms\n        REAL(8) :: false_margin = exp(log(.5) / 2)\n        INTEGER :: errors = 0\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(randoms)\n\n        !Initilization\n        DO x = 1, 10 * LOOPCOUNT\n          IF (randoms(x) > false_margin) THEN\n            a(x) = .TRUE.\n          ELSE\n            a(x) = .FALSE.\n          END IF\n        END DO\n\n        !$acc data copyin(a(1:10*LOOPCOUNT)), copy(b(1:10))\n          !$acc parallel loop private(temp)\n          DO x = 0, 9\n            temp = .FALSE.\n            !$acc loop vector reduction(.OR.:temp)\n            DO y = 1, LOOPCOUNT\n              temp = temp .OR. a(x * LOOPCOUNT + y)\n            END DO\n            b(x + 1) = temp\n          END DO\n        !$acc end data\n\n        DO x = 0, 9\n          temp = .FALSE.\n          DO y = 1, LOOPCOUNT\n            temp = temp .OR. a(x * LOOPCOUNT + y)\n          END DO\n          IF (temp .neqv. b(x + 1)) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_seq.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copy(b(1:LOOPCOUNT))\n          !$acc parallel loop seq\n          DO x = 2, LOOPCOUNT\n            b(x) = b(x - 1) + a(x)\n          END DO\n        !$acc end data\n        \n        DO x = 2, LOOPCOUNT\n          IF (abs(b(x) - (b(x - 1) + a(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_tile.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,combined-constructs,loop,tile,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y, z !Iterators\n        REAL(8),DIMENSION(SMALL_LOOPCOUNT):: a, b, c !Data\n        REAL(8),DIMENSION(SMALL_LOOPCOUNT,SMALL_LOOPCOUNT)::d\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        CALL RANDOM_NUMBER(c)\n\n        !$acc data copyin(a(1:SMALL_LOOPCOUNT), b(1:SMALL_LOOPCOUNT), c(1:SMALL_LOOPCOUNT)) copyout(d(1:SMALL_LOOPCOUNT,1:SMALL_LOOPCOUNT))\n          !$acc parallel loop tile(*, *) reduction(+:temp)\n          DO x = 1, SMALL_LOOPCOUNT\n            DO y = 1, SMALL_LOOPCOUNT \n              temp = 0\n              DO z = 1, SMALL_LOOPCOUNT\n                temp = temp + a(z) + b(z) + c(z)\n              END DO\n              d(x,y) = temp\n            END DO\n          END DO\n        !$acc end data\n        \n        DO x = 1, SMALL_LOOPCOUNT \n          DO y = 1, SMALL_LOOPCOUNT \n            temp = 0\n            DO z = 1, SMALL_LOOPCOUNT\n              temp = temp + a(z) + b(z) + c(z) \n            END DO\n            IF (abs(d(x,y) - temp) .gt. PRECISION) THEN\n              errors = errors + 1\n            END IF\n          END DO\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "combined-constructs",
                            "loop",
                            "tile"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_vector.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n          !$acc parallel loop vector\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end data\n        \n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_vector_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: multiplyer\n        INTEGER :: errors = 0\n\n        multiplyer = 1\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop vector\n            DO x = 1, LOOPCOUNT\n              c(x) = (a(x) + b(x)) * multiplyer\n            END DO\n            multiplyer = multiplyer + 1\n            !$acc loop vector\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + ((a(x) + b(x)) * multiplyer)\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (3 * (a(x) + b(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_worker.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,combined-constructs,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel loop worker\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_loop_worker_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        REAL(8) :: multiplyer\n        INTEGER :: errors = 0\n\n        multiplyer = 1\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop worker\n            DO x = 1, LOOPCOUNT\n              c(x) = (a(x) + b(x)) * multiplyer\n            END DO\n            multiplyer = multiplyer + 1\n            !$acc loop worker\n            DO x = 1, LOOPCOUNT\n              c(x) = c(x) + (a(x) + b(x)) * multiplyer\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (3 * (a(x) + b(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n        !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            c(x) = a(x) + b(x)\n          END DO\n        !$acc end parallel\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_private.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,private,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10 * LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(LOOPCOUNT):: c\n        REAL(8),DIMENSION(10)::d\n        REAL(8) :: temp\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        d = 0\n\n        !$acc enter data copyin(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT), d(1:10)) \n        !$acc parallel num_gangs(10) private(c(1:LOOPCOUNT))\n          !$acc loop gang\n          DO x = 1, 10\n            !$acc loop worker\n            DO y = 1, LOOPCOUNT\n              c(y) = a((x - 1) * LOOPCOUNT + y) + b((x - 1) * LOOPCOUNT + y)\n            END DO\n            !$acc loop seq\n            DO y = 1, LOOPCOUNT\n              d(x) = d(x) + c(y)\n            END DO\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(d(1:10)) delete(a(1:10*LOOPCOUNT), b(1:10*LOOPCOUNT))\n\n        DO x = 0, 9\n          temp = 0\n          DO y = 1, LOOPCOUNT\n            temp = temp + a(x * LOOPCOUNT + y) + b(x * LOOPCOUNT + y)\n          END DO\n          IF (abs(temp - d(x + 1)) .gt. 2 * PRECISION * LOOPCOUNT) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "private"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_reduction.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8) :: results = 0\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n\n        !$acc data copyin(a(1:LOOPCOUNT))\n          !$acc parallel reduction(+:results)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              results = results + a(x)\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          results = results - a(x)\n        END DO\n        IF (abs(results) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_scalar_default_firstprivate.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        REAL(8),DIMENSION(1):: random\n        INTEGER :: errors = 0\n        REAL(8) :: scalar\n        REAL(8) :: scalar_copy\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(random)\n        scalar = random(1)\n        scalar_copy = scalar\n        CALL RANDOM_NUMBER(a)\n        b = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = a(x) + scalar\n            END DO\n          !$acc end parallel\n        !$acc end data\n        DO x = 1, LOOPCOUNT\n          IF (abs(b(x) - (a(x) + scalar_copy)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n        IF (abs(scalar_copy - scalar) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_switch.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        INTEGER,DIMENSION(LOOPCOUNT):: a\n        REAL(8),DIMENSION(LOOPCOUNT):: b, c, randoms!Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(b)\n        c = 0\n        CALL RANDOM_NUMBER(randoms)\n        a = floor(randoms * 3)\n\n        !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n        !$acc parallel present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            SELECT CASE (a(x))\n              CASE (0)\n                c(x) = b(x) * b(x)\n              CASE (1)\n                c(x) = b(x) / b(x)\n              CASE (2)\n                c(x) = b(x) / 2\n            END SELECT\n          END DO\n        !$acc end parallel\n        !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          SELECT CASE (a(x))\n            CASE (0)\n              IF (abs(c(x) - (b(x) * b(x))) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            CASE (1)\n              IF (abs(c(x) - (b(x) / b(x))) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n            CASE (2)\n              IF (abs(c(x) - (b(x) / 2)) .gt. PRECISION) THEN\n                errors = errors + 1\n              END IF\n          END SELECT\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_wait.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,parallel,update,V:2.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b !Data\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        b = a\n\n        !$acc enter data create(a(1:LOOPCOUNT))\n        !$acc update device(a(1:LOOPCOUNT)) async(1)\n        !$acc parallel present(a(1:LOOPCOUNT)) wait(1)\n          !$acc loop\n          DO x = 1, LOOPCOUNT\n            a(x) = a(x) + 1\n          END DO\n        !$acc end parallel\n        !$acc exit data copyout(a(1:LOOPCOUNT))\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(a(x) - (b(x) + 1)) .gt. PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "parallel",
                            "update"
                        ],
                        "versions": [
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "parallel_while_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:parallel,reduction,loop,V:1.0-2.7\n      LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(10, LOOPCOUNT):: a !Data\n        REAL(8) :: avg\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n \n        !$acc data copy(a(1:10, 1:LOOPCOUNT))\n          !$acc parallel\n            !$acc loop\n            DO x = 1, 10\n              avg = 0.0\n              DO WHILE (avg - 1000 .lt. PRECISION * LOOPCOUNT)\n                avg = 0.0\n                !$acc loop\n                DO y = 1, LOOPCOUNT\n                  a(x, y) = a(x, y) * 1.5\n                END DO\n                !$acc loop reduction(+:avg)\n                DO y = 1, LOOPCOUNT\n                  avg = avg + (a(x, y) / LOOPCOUNT)\n                END DO\n              END DO\n            END DO\n          !$acc end parallel\n        !$acc end data\n\n        DO x = 1, 10\n          avg = 0.0\n          DO y = 1, LOOPCOUNT\n            avg = avg + (a(x, y) / LOOPCOUNT)\n          END DO\n          IF (avg < 1000 .OR. avg > 1600) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "parallel",
                            "reduction",
                            "loop"
                        ],
                        "versions": [
                            "1.0",
                            "2.0",
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER :: x, i_a, i_b, i_c, i_d, i_e, i_f, i_g, i_h, i_i, i_j !Iterators\n  INTEGER, PARAMETER :: PRIVATE_LOOPCOUNT = 1024\n  REAL(8),DIMENSION(PRIVATE_LOOPCOUNT):: a, b, c !Data\n  INTEGER :: errors\n  errors = 0\n\n  !Initilization\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:PRIVATE_LOOPCOUNT), b(1:PRIVATE_LOOPCOUNT)) copy(c(1:PRIVATE_LOOPCOUNT))\n    !$acc serial\n      !$acc loop\n      DO i_a = 0, 1\n        !$acc loop\n        DO i_b = 0, 1\n          !$acc loop\n          DO i_c = 0, 1\n            !$acc loop\n            DO i_d = 0, 1\n              !$acc loop\n              DO i_e = 0, 1\n                !$acc loop\n                DO i_f = 0, 1\n                  !$acc loop\n                  DO i_g = 0, 1\n                    !$acc loop\n                    DO i_h = 0, 1\n                      !$acc loop\n                      DO i_i = 0, 1\n                        !$acc loop\n                        DO i_j = 0, 1\n                          c(i_a*512 + i_b*256 + i_c*128 + i_d*64 + i_e*32 + i_f*16 + i_g*8 + i_h*4 + i_i*2 + i_j + 1) = &\n                          a(i_a*512 + i_b*256 + i_c*128 + i_d*64 + i_e*32 + i_f*16 + i_g*8 + i_h*4 + i_i*2 + i_j + 1) + &\n                          b(i_a*512 + i_b*256 + i_c*128 + i_d*64 + i_e*32 + i_f*16 + i_g*8 + i_h*4 + i_i*2 + i_j + 1)\n                        END DO\n                      END DO\n                    END DO\n                  END DO\n                END DO\n              END DO\n            END DO\n          END DO\n        END DO\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, PRIVATE_LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            ""
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,serial,update,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, d, e, f, g\n  INTEGER:: x\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n  CALL RANDOM_NUMBER(d)\n  CALL RANDOM_NUMBER(e)\n  f = 0\n  g = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT), d(1:LOOPCOUNT), e(1:LOOPCOUNT), f(1:LOOPCOUNT), g(1:LOOPCOUNT))\n    !$acc serial async(1)\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x) = a(x) + b(x)\n      END DO\n    !$acc end serial\n    !$acc serial async(2)\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        f(x) = d(x) + e(x)\n      END DO\n    !$acc end serial\n    !$acc serial wait(1, 2) async(3)\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        g(x) = c(x) + f(x)\n      END DO\n    !$acc end serial\n\n    !$acc update host(c(1:LOOPCOUNT)) async(1)\n    !$acc update host(f(1:LOOPCOUNT)) async(2)\n    !$acc update host(g(1:LOOPCOUNT)) async(3)\n\n    !$acc wait(1)\n    DO x = 1, LOOPCOUNT\n      IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n\n    !$acc wait(2)\n    DO x = 1, LOOPCOUNT\n      IF (abs(f(x) - (d(x) + e(x))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n\n    !$acc wait(3)\n    DO x = 1, LOOPCOUNT\n      IF (abs(g(x) - (a(x) + b(x) + d(x) + e(x))) .gt. 4 * PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  !$acc end data\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "serial",
                            "update"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_copy.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, a_host\n  INTEGER:: x\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  a_host = a\n\n  !$acc serial copy(a(1:LOOPCOUNT))\n    !$acc loop\n    DO x = 1, N\n      a(x) = 2 * a(x)\n    END DO\n  !$acc end serial\n\n  DO x = 1, N\n    IF (abs(a(x) - (2 * a_host(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_copyin.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b\n  INTEGER,DIMENSION(1):: hasDevice\n  INTEGER:: x\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  a_copy = a\n  b = 0\n\n  hasDevice(1) = 1\n  !$acc enter data copyin(hasDevice(1:1))\n  !$acc parallel present(hasDevice(1:1))\n    hasDevice(1) = 0\n  !$acc end parallel\n\n  !$acc serial copyin(a(1:LOOPCOUNT))\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      a(x) = 0\n    END DO\n  !$acc end serial\n\n  DO x = 1, LOOPCOUNT\n    IF (hasDevice(1) .eq. 1) THEN\n      IF (abs(a(x) - a_copy(x)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    ELSE\n      IF (abs(a(x)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:serial,V:2.6-2.7\n      LOGICAL FUNCTION test2()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b\n  INTEGER,DIMENSION(1):: hasDevice\n  INTEGER:: x\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  !$acc data copy(b(1:LOOPCOUNT))\n    !$acc serial copyin(a(1:LOOPCOUNT))\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_copyout.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  INTEGER:: x\n  INTEGER,DIMENSION(1):: hasDevice\n  errors = 0\n\n  hasDevice(1) = 1\n  !$acc enter data copyin(hasDevice(1:1))\n  !$acc parallel present(hasDevice(1:1))\n  hasDevice(1) = 0\n  !$acc end parallel\n  \n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n\n\n  !$acc data copyin(a(1:LOOPCOUNT))\n    !$acc serial copyout(b(1:LOOPCOUNT))\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:serial,V:2.6-2.7\n      LOGICAL FUNCTION test2()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  INTEGER:: x\n  INTEGER,DIMENSION(1):: hasDevice\n  errors = 0\n\n  hasDevice(1) = 1\n  !$acc enter data copyin(hasDevice(1:1))\n  !$acc parallel present(hasDevice(1:1))\n  hasDevice(1) = 0\n  !$acc end parallel\n  \n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (hasDevice(1) .eq. 1) THEN\n    !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n      !$acc serial copyout(b(1:LOOPCOUNT))\n        !$acc loop\n        DO x = 1, LOOPCOUNT\n          b(x) = b(x) - a(x)\n        END DO\n      !$acc end serial\n    !$acc end data\n\n    DO x = 1, LOOPCOUNT\n      IF (abs(a(x) - b(x)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:serial,update,V:2.6-2.7\n      LOGICAL FUNCTION test3()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  INTEGER:: x\n  INTEGER,DIMENSION(1):: hasDevice\n  errors = 0\n\n  hasDevice(1) = 1\n  !$acc enter data copyin(hasDevice(1:1))\n  !$acc parallel present(hasDevice(1:1))\n  hasDevice(1) = 0\n  !$acc end parallel\n  \n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n    !$acc serial copyout(b(1:LOOPCOUNT))\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = b(x) - a(x)\n      END DO\n    !$acc end serial\n    !$acc update host(b(1:LOOPCOUNT))\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x)) .gt. 2 * PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "update"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_create.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: x\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n    !$acc serial create(b(1:LOOPCOUNT))\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x)\n      END DO\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x) = b(x)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - c(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_default_copy.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER,DIMENSION(1):: devtest\n  INTEGER:: x\n  errors = 0\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n    !$acc serial\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x) = c(x) + b(x) + a(x)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,V:2.6-2.7\n      LOGICAL FUNCTION test2()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER,DIMENSION(1):: devtest\n  INTEGER:: x\n  errors = 0\n\n  devtest(1) = 1\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = 0\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1) .eq. 1) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = 1\n\n    !$acc enter data copyin(c(1:LOOPCOUNT))\n    DO x = 1, LOOPCOUNT\n      c(x) = 0\n    END DO\n\n    !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n      !$acc serial\n        !$acc loop\n        DO x = 1, LOOPCOUNT\n          c(x) = c(x) + a(x) + b(x)\n        END DO\n      !$acc end serial\n    !$acc end data\n\n    DO x = 1, LOOPCOUNT\n      if (abs(c(x)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n\n    !$acc exit data copyout(c(1:LOOPCOUNT))\n\n    DO x = 1, LOOPCOUNT\n      IF (abs(c(x) - (a(x) + b(x) + 1)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_default_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,default,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a\n  INTEGER:: x\n  errors = 0\n\n  a = 0\n\n  !$acc enter data copyin(a(1:LOOPCOUNT))\n  !$acc serial default(present)\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      a(x) = 1\n    END DO\n  !$acc end serial\n  !$acc exit data copyout(a(1:LOOPCOUNT))\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - 1) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "default"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_firstprivate.F90": {
                "num tests": 2,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,firstprivate,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(10, LOOPCOUNT):: a, b, d\n  REAL(8),DIMENSION(10):: c, c_copy\n  INTEGER:: x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  CALL RANDOM_NUMBER(c)\n  c_copy = c\n  d = 0\n  !$acc data copyin(a(1:10, 1:LOOPCOUNT), b(1:10, 1:LOOPCOUNT)) copy(d(1:10, 1:LOOPCOUNT))\n    !$acc serial firstprivate(c(1:10))\n      !$acc loop gang\n      DO y = 1, LOOPCOUNT\n        !$acc loop worker\n        DO x = 1, 10\n          d(x, y) = a(x, y) + b(x, y) + c(x)\n        END DO\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO y = 1, LOOPCOUNT\n    DO x = 1, 10\n      IF (abs(d(x, y) - (a(x, y) + b(x, y) + c_copy(x))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "firstprivate"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:serial,firstprivate,V:2.6-2.7\n      LOGICAL FUNCTION test2()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(10, LOOPCOUNT):: a, b, d\n  REAL(8),DIMENSION(10):: c, c_copy\n  INTEGER:: x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  d = 0\n  c = 0\n\n  !$acc data copyin(a(1:10, 1:LOOPCOUNT), b(1:10, 1:LOOPCOUNT)) copy(d(1:10, 1:LOOPCOUNT))\n    !$acc serial firstprivate(c(1:10))\n      !$acc loop gang independent\n      DO y = 1, LOOPCOUNT\n        !$acc loop worker independent\n        DO x = 1, 10\n          c(x) = a(x, y) - b(x, y)\n        END DO\n        !$acc loop worker independent\n        DO x = 1, 10\n          d(x, y) = a(x, y) + b(x, y) + c(x)\n        END DO\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO y = 1, LOOPCOUNT\n    DO x = 1, 10\n      IF (abs(d(x, y) - (2 * a(x, y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "firstprivate"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_if.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:devonly,serial,if,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  LOGICAL,DIMENSION(1):: devtest\n  LOGICAL:: host, device\n  INTEGER:: x\n  host = .FALSE.\n  device = .TRUE.\n  errors = 0\n\n  devtest(1) = .TRUE.\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = .FALSE.\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc serial if(host)\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      c(x) = a(x) + b(x)\n    END DO\n  !$acc end serial\n\n  DO x = 1, N\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "serial",
                            "if"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:devonly,serial,if,V:2.6-2.7\n      LOGICAL FUNCTION test2()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  LOGICAL,DIMENSION(1):: devtest\n  LOGICAL:: host, device\n  INTEGER:: x\n  host = .FALSE.\n  device = .TRUE.\n  errors = 0\n\n  devtest(1) = .TRUE.\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = .FALSE.\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  IF (devtest(1)) THEN\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    c = a + b\n\n    !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n    !$acc serial if(host) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x) = c(x) + a(x) + b(x)\n      END DO\n    !$acc end serial\n    !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n    DO x = 1, LOOPCOUNT\n      IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "serial",
                            "if"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:devonly,serial,if,V:2.6-2.7\n      LOGICAL FUNCTION test3()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  LOGICAL,DIMENSION(1):: devtest\n  LOGICAL:: host, device\n  INTEGER:: x\n  host = .FALSE.\n  device = .TRUE.\n  errors = 0\n\n  devtest(1) = .TRUE.\n  !$acc enter data copyin(devtest(1:1))\n  !$acc parallel present(devtest(1:1))\n    devtest(1) = .FALSE.\n  !$acc end parallel\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = a + b\n  \n  !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n  !$acc serial if(device) present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      c(x) = c(x) + a(x) + b(x)\n    END DO\n  !$acc end serial\n  !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (2 * (a(x) + b(x)))) .gt. PRECISION * 2) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "devonly",
                            "serial",
                            "if"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: x\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copy(c(1:LOOPCOUNT))\n    !$acc serial loop\n    DO x = 1, LOOPCOUNT\n      c(x) = 1\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - 1) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  !$acc data copy(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n    !$acc serial\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x) = b(x)\n      END DO\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x) = c(x) + a(x)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,serial,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c, d\n  INTEGER,DIMENSION(10):: error_array\n  INTEGER:: x, y\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      d(x, y) = a(x, y) + b(x, y)\n    END DO\n  END DO\n\n  error_array = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10), c(1:LOOPCOUNT, 1:10), d(1:LOOPCOUNT, 1:10)) copy(error_array(1:10))\n    DO y = 1, 10\n      !$acc serial loop async(y)\n      DO x = 1, LOOPCOUNT\n        c(x, y) = a(x, y) + b(x, y)\n      END DO\n      !$acc serial loop async(y)\n      DO x = 1, LOOPCOUNT\n        IF (((c(x, y) - d(x, y)) .gt. PRECISION) .OR. ((d(x, y) - c(x, y)) .gt. PRECISION)) THEN\n          error_array(y) = error_array(y) + 1\n        END IF\n      END DO\n    END DO\n  !$acc end data\n\n  DO x = 1, 10\n    errors = errors + error_array(x)\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "serial",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_auto.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,combined-constructs,loop,auto,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy, b\n  INTEGER:: x\n  REAL(8):: temp\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  a_copy = a\n  b = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n    !$acc serial loop auto\n    DO x = 1, LOOPCOUNT\n      b(x) = a(x)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x) - a(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  !$acc data copy(a(1:LOOPCOUNT))\n    !$acc serial loop auto\n    DO x = 2, LOOPCOUNT\n      a(x) = a(x - 1) + a(x)\n    END DO\n  !$acc end data\n\n  temp = 0\n  DO x = 1, LOOPCOUNT\n    temp = temp + a_copy(x)\n    IF (abs(temp - a(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "combined-constructs",
                            "loop",
                            "auto"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_gang.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: x\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n    !$acc serial loop gang\n    DO x = 1, LOOPCOUNT\n      c(x) = a(x) + b(x)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_gang_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:loop,V:2.6-2.7\n    LOGICAL FUNCTION test1()\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n        INTEGER:: multiplier\n        INTEGER:: x\n        INTEGER:: errors\n\n        errors = 0\n\n        SEEDDIM(1) = 1\n        # ifdef SEED\n        SEEDDIM(1) = SEED\n        # endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n            !$acc serial\n            !$acc loop gang\n            DO x = 1, LOOPCOUNT\n                c(x) = (a(x) + b(x)) * multiplier\n            END DO\n            multiplier = multiplier + 1\n            !$acc loop gang\n            DO x = 1, LOOPCOUNT\n                c(x) = c(x) + ((a(x) + b(x)) * multiplier)\n            END DO\n            !$acc end serial\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n            IF (abs(c(x) - (3 * (a(x) + b(x)))) .gt. PRECISION) THEN\n            errors = errors + 1\n            END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_add_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  REAL(8):: total\n  INTEGER:: x\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  total = 10\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n    !$acc serial loop reduction(+:total)\n    DO x = 1, LOOPCOUNT\n      total = total + a(x) + b(x)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    total = total - (a(x) + b(x))\n  END DO\n\n  IF (abs(total - 10) .gt. PRECISION) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_add_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c, d\n  REAL(8):: avg, temp\n  INTEGER:: x, y\n  avg = 0\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) create(c(1:LOOPCOUNT, 1:10)) copyout(d(1:LOOPCOUNT, 1:10))\n    !$acc serial loop gang private(avg)\n    DO y = 1, 10\n      avg = 0\n      !$acc loop worker reduction(+:avg)\n      DO x = 1, LOOPCOUNT\n        c(x, y) = a(x, y) + b(x, y)\n        avg = avg + c(x, y)\n      END DO\n      avg = avg / LOOPCOUNT\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        d(x, y) = c(x, y) - avg\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    temp = 0\n    DO x = 1, LOOPCOUNT\n      temp = temp + (a(x, y) + b(x, y))\n    END DO\n    temp = temp / LOOPCOUNT\n    DO x = 1, LOOPCOUNT\n      IF (abs(d(x, y) - ((a(x, y) + b(x, y)) - temp)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_add_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b\n  REAL(8),DIMENSION(10):: c\n  REAL(8):: temp\n  INTEGER:: x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10), b(1:LOOPCOUNT,1:10)) copyout(c(1:10))\n    !$acc serial loop private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop vector reduction(+:temp)\n      DO x = 1, LOOPCOUNT\n        temp = temp + (a(x, y) + b(x, y))\n      END DO\n      c(y) = temp\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      c(y) = c(y) - (a(x, y) + b(x, y))\n    END DO\n    IF (abs(c(y)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_and_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  INTEGER:: x\n  LOGICAL,DIMENSION(LOOPCOUNT):: a\n  LOGICAL:: result, host_result\n  REAL(8),DIMENSION(LOOPCOUNT):: randoms\n  REAL(8):: false_margin = EXP(LOG(.5) / LOOPCOUNT)\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    IF (randoms(x) .lt. false_margin) THEN\n      a(x) = .TRUE.\n    ELSE\n      a(x) = .FALSE.\n    END IF\n  END DO\n\n  result = .TRUE.\n  !$acc data copyin(a(1:LOOPCOUNT))\n    !$acc serial loop reduction(.AND.:result)\n    DO x = 1, LOOPCOUNT\n      result = result .AND. a(x)\n    END DO\n  !$acc end data\n\n  host_result = .TRUE.\n  DO x = 1, LOOPCOUNT\n    host_result = host_result .AND. a(x)\n  END DO\n\n  IF (host_result .NEQV. result) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_and_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, a_copy\n  LOGICAL,DIMENSIOn(10):: has_false\n  LOGICAL:: temp\n  INTEGER:: x, y\n  errors = 0\n  false_margin = EXP(LOG(.5) / LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  has_false = .FALSE.\n  a = .TRUE.\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      IF (randoms(x, y) .gt. false_margin) THEN\n        a(x, y) = .FALSE.\n        has_false(y) = .TRUE.\n      END IF\n    END DO\n  END DO\n  a_copy = a\n\n  !$acc data copy(a(1:LOOPCOUNT, 1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = .TRUE.\n      !$acc loop worker reduction(.AND.:temp)\n      DO x = 1, LOOPCOUNT\n        temp = temp .AND. a(x, y)\n      END DO\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        IF (temp) THEN\n          IF (a(x, y) .eq. 1) THEN\n            a(x, y) = .FALSE.\n          ELSE\n            a(x, y) = .TRUE.\n          END IF\n        END IF\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      IF ((has_false(y) .eqv. .TRUE.) .AND. (a(x, y) .neqv. a_copy(x, y))) THEN\n        errors = errors + 1\n      ELSEIF ((has_false(y) .eqv. .FALSE.) .AND. (a(x, y) .eqv. a_copy(x, y))) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_and_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a\n  LOGICAL,DIMENSION(10):: b, has_false\n  LOGICAL:: temp\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  REAL(8):: false_margin\n  INTEGER:: errors, x, y\n\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  has_false = .FALSE.\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      IF (randoms(x, y) .lt. false_margin) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n        has_false(y) = .TRUE.\n      END IF\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(b(1:10))\n    !$acc serial loop private(temp)\n    DO y = 1, 10\n      temp = .TRUE.\n      !$acc loop vector reduction(.AND.:temp)\n      DO x = 1, LOOPCOUNT\n        temp = temp .AND. a(x, y)\n      END DO\n      b(y) = temp\n    END DO\n  !$acc end data\n\n  DO x = 1, 10\n    IF (has_false(x) .eqv. b(x)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitand_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(N):: a\n  INTEGER:: b, host_b\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 16):: randoms\n  INTEGER:: x, y\n  INTEGER:: errors\n\n  errors = 0\n  false_margin = exp(log(.5)/LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 16\n      IF (randoms(x, y) .lt. false_margin) THEN\n        a(x) = a(x) + 2**(y - 1)\n      END IF\n    END DO\n  END DO\n\n  b = a(1)\n  host_b = a(1)\n  DO x = 2, LOOPCOUNT\n    host_b = iand(host_b, a(x))\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT))\n    !$acc serial loop reduction(iand: b)\n    DO x = 1, LOOPCOUNT\n      b = iand(b, a(x))\n    END DO\n  !$acc end data\n\n  IF (b .ne. host_b) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitand_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b, b_copy\n  INTEGER,DIMENSION(10):: c, host_c\n  INTEGER:: errors, x, y, z, temp\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 17):: randoms\n\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      b(x) = INT(10 * randoms(x, y, 17))\n      DO z = 1, 16\n        IF (randoms(x, y, z) .lt. false_margin) THEN\n          a(x) = a(x) + 2**(z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n\n  b_copy = b\n\n  DO y = 1, 10\n    temp = a(1, y)\n    DO x = 1, LOOPCOUNT\n      temp = iand(temp, a(x, y))\n    END DO\n    host_c(y) = temp\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(b(1:LOOPCOUNT, 1:10), c(1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = a(1, y)\n      !$acc loop worker reduction(iand:temp)\n      DO x = 1, LOOPCOUNT\n        temp = iand(temp, a(x, y))\n      END DO\n      c(y) = temp\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        b(x, y) = b(x, y) + c(y)\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    IF (host_c(y) .ne. c(y)) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, LOOPCOUNT\n      IF (b(x, y) .ne. b_copy(x, y) + c(y)) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitand_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n  LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a\n  INTEGER,DIMENSION(10):: b, b_host\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 16):: randoms\n  REAL(8):: false_margin\n  INTEGER:: x, y, temp, c, z\n  INTEGER:: errors\n\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n  SEEDDIM(1) = 1\n  #ifdef SEED\n  SEEDDIM(1) = SEED\n  #endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      DO z = 1, 16\n        IF (randoms(x, y, z) .lt. false_margin) THEN\n          a(x, y) = a(x, y) + 2**(z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n\n  DO y = 1, 10\n    b_host(y) = a(1, y)\n    DO x = 1, LOOPCOUNT\n      b_host(y) = iand(b_host(y), a(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(b(1:10))\n    !$acc serial loop private(c)\n    DO y = 1, 10\n      c = a(1, y)\n      !$acc loop vector reduction(iand:c)\n      DO x = 1, LOOPCOUNT\n        c = iand(c, a(x, y))\n      END DO\n      b(y) = c\n    END DO\n  !$acc end data\n\n  DO x = 1, 10\n    IF (b(x) .ne. b_host(x)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitor_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors, temp, x, y, b, host_b\n  INTEGER,DIMENSION(LOOPCOUNT):: a\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 16):: randoms\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 16\n      IF (randoms(x, y) .gt. false_margin) THEN\n        a(x) = a(x) + 2**(y - 1)\n      END IF\n    END DO\n  END DO\n\n  DO x = 1, LOOPCOUNT\n    host_b = ior(host_b, a(x))\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT))\n    !$acc serial loop reduction(ior:b)\n    DO x = 1, LOOPCOUNT\n      b = ior(b, a(x))\n    END DO\n  !$acc end data\n\n  IF (b .ne. host_b) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitor_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors, x, y, z, temp\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b, b_copy\n  INTEGER,DIMENSION(10):: c\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 17):: randoms\n\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      b(x, y) = INT(randoms(x, y, 17) * 1000)\n      DO z = 1, 16\n        IF (randoms(x, y, z) .gt. false_margin) THEN\n          a(x, y) = a(x, y) + 2**(z-1)\n        END IF\n      END DO\n    END DO\n  END DO\n\n  b_copy = b\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(b(1:LOOPCOUNT, 1:10), c(1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop worker reduction(ior:temp)\n      DO x = 1, LOOPCOUNT\n        temp = ior(temp, a(x, y))\n      END DO\n      c(y) = temp\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        b(x, y) = b(x, y) + c(y)\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    temp = a(1, y)\n    DO x = 2, LOOPCOUNT\n      temp = ior(temp, a(x, y))\n    END DO\n    IF (temp .ne. c(y)) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, LOOPCOUNT\n      IF (b(x, y) .ne. (b_copy(x, y) + temp)) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitor_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors, x, y, z, temp\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a\n  INTEGER,DIMENSION(10):: b\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 16):: randoms\n\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n  SEEDDIM(1) = 1\n  #ifdef SEED\n  SEEDDIM(1) = SEED\n  #endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      DO z = 1, 16\n        IF (randoms(x, y, z) .gt. false_margin) THEN\n          a(x, y) = a(x, y) + 2**(z - 1)\n        END IF\n      END DO\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT,1:10)) copy(b(1:10))\n    !$acc serial loop private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop vector reduction(ior:temp)\n      DO x = 1, LOOPCOUNT\n        temp = ior(temp, a(x, y))\n      END DO\n      b(y) = temp\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    temp = a(1, y)\n    DO x = 2, LOOPCOUNT\n      temp = ior(temp, a(x, y))\n    END DO\n    IF (temp .ne. b(y)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitxor_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(LOOPCOUNT):: a\n  REAL(8),DIMENSION(LOOPCOUNT):: randoms\n  INTEGER:: errors, b, host_b, x\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    a(x) = INT(randoms(x) * 100000)\n  END DO\n\n  b = 0\n  host_b = 0\n\n  DO x = 1, LOOPCOUNT\n    host_b = ieor(host_b, a(x))\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT))\n    !$acc serial loop reduction(ieor:b)\n    DO x = 1, LOOPCOUNT\n      b = ieor(b, a(x))\n    END DO\n  !$acc end data\n\n  IF (b .ne. host_b) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitxor_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a, b, host_b\n  INTEGER,DIMENSION(10):: c, host_c\n  REAL(8),DIMENSION(LOOPCOUNT, 10, 2):: randoms\n  INTEGER:: errors, x, y, temp\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  c = 0\n  host_c = 0\n  DO x = 1, LOOPCOUNT\n    DO y = 1, 10\n      b(x, y) = INT(randoms(x, y, 1) * 1000)\n      a(x, y) = INT(randoms(x, y, 2) * 1000)\n    END DO\n  END DO\n  host_b = b\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      host_c(y) = ieor(host_c(y), a(x, y))\n    END DO\n    DO x = 1, LOOPCOUNT\n      host_b(x, y) = host_b(x, y) + host_c(y)\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(b(1:LOOPCOUNT, 1:10), c(1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop worker reduction(ieor:temp)\n      DO x = 1, LOOPCOUNT\n        temp = ieor(temp, a(x, y))\n      END DO\n      c(y) = temp\n      DO x = 1, LOOPCOUNT\n        b(x, y) = b(x, y) + c(y)\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    IF (c(y) .ne. host_c(y)) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, LOOPCOUNT\n      IF (host_b(x, y) .ne. b(x, y)) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_bitxor_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(LOOPCOUNT, 10):: a\n  INTEGER,DIMENSION(10):: b, host_b\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  INTEGER:: errors, x, y, temp\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      a(x, y) = INT(randoms(x, y) * 10000)\n    END DO\n  END DO\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      host_b(y) = ieor(host_b(y), a(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10))\n    !$acc serial loop private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop vector reduction(ieor:temp)\n      DO x = 1, LOOPCOUNT\n        temp = ieor(temp, a(x, y))\n      END DO\n      b(y) = temp\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    IF (b(y) .ne. host_b(y)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_max_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  REAL(8):: maxval, host_max\n  INTEGER:: errors, x\n\n  SEEDDIM(1) = 1\n  #ifdef SEED\n  SEEDDIM(1) = SEED\n  #endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  errors = 0\n\n  DO x = 1, LOOPCOUNT\n    host_max = max(host_max, a(x) * b(x))\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n    !$acc serial loop reduction(max:maxval)\n    DO x = 1, LOOPCOUNT\n      maxval = max(maxval, a(x) * b(x))\n    END DO\n  !$acc end data\n\n  IF (abs(host_max - maxval) .gt. PRECISION) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_max_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c\n  REAL(8),DIMENSIOn(10):: host_maximums, maximums\n  REAL(8):: temp\n  INTEGER:: errors, x, y\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n  maximums = 0\n  host_maximums = 0\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      host_maximums(y) = max(host_maximums(y), a(x, y) * b(x, y))\n    ENDDO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(c(1:LOOPCOUNT, 1:10), maximums(1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop worker reduction(max:temp)\n      DO x = 1, LOOPCOUNT\n        temp = max(temp, a(x, y) * b(x, y))\n      END DO\n      maximums(y) = temp\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        c(x, y) = (a(x, y) * b(x, y)) / maximums(y)\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    IF (maximums(y) .ne. host_maximums(y)) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, LOOPCOUNT\n      IF (abs(c(x, y) - ((a(x, y) * b(x, y)) / maximums(y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_max_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b\n  REAL(8),DIMENSION(10):: maximums, host_maximums\n  REAL(8):: temp\n  INTEGER:: errors, x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  host_maximums = 0\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      host_maximums(y) = max(host_maximums(y), a(x, y) * b(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(maximums(1:10))\n    !$acc serial loop private(temp)\n    DO y = 1, 10\n      temp = 0\n      !$acc loop vector reduction(max:temp)\n      DO x = 1, LOOPCOUNT\n        temp = max(temp, a(x, y) * b(x, y))\n      END DO\n      maximums(y) = temp\n    END DO\n  !$acc end data\n\n  DO x = 1, 10\n    IF (abs(host_maximums(x) - maximums(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_min_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors, x\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  REAL(8):: minimum, host_minimum\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  minimum = a(1) * b(1)\n  host_minimum = minimum\n\n  DO x = 2, LOOPCOUNT\n    host_minimum = min(host_minimum, a(x) * b(x))\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT))\n    !$acc serial loop reduction(min:minimum)\n    DO x = 1, LOOPCOUNT\n      minimum = min(minimum, a(x) * b(x))\n    END DO\n  !$acc end data\n\n  IF (abs(host_minimum - minimum) .gt. PRECISION) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_min_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b, c\n  REAL(8),DIMENSION(10):: minimums, host_minimums\n  REAL(8):: temp\n  INTEGER:: errors, x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n  #ifdef SEED\n  SEEDDIM(1) = SEED\n  #endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n  minimums = 0\n  host_minimums = 0\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      host_minimums(y) = min(host_minimums(y), a(x, y) * b(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(c(1:LOOPCOUNT, 1:10), minimums(1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = 1\n      !$acc loop reduction(min: temp)\n      DO x = 1, LOOPCOUNT\n        temp = min(temp, a(x, y) * b(x, y))\n      END DO\n      minimums(y) = temp\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        c(x, y) = (a(x, y) * b(x, y)) / minimums(y)\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    IF (abs(minimums(y) - host_minimums(y)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, LOOPCOUNT\n      IF (abs(c(x, y) - ((a(x, y) * b(x, y)) / minimums(y))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_min_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b\n  REAL(8),DIMENSION(10):: minimums, host_minimums\n  REAL(8):: temp\n  INTEGER:: errors, x, y\n\n  errors = 0\n  minimums = 1\n  host_minimums = 1\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      host_minimums(y) = min(host_minimums(y), a(x, y) * b(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(minimums(1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = 1\n      !$acc loop vector reduction(min:temp)\n      DO x = 1, LOOPCOUNT\n        temp = min(temp, a(x, y) * b(x, y))\n      END DO\n      minimums(y) = temp\n    END DO\n  !$acc end data\n\n  DO x = 1, 10\n    IF (abs(host_minimums(x) - minimums(x)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_multiply_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(10):: a, b\n  REAL(8):: reduced, host_reduced\n  INTEGER:: errors, x, y\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  DO y = 1, LOOPCOUNT\n    CALL RANDOM_NUMBER(a)\n    CALL RANDOM_NUMBER(b)\n    reduced = 1\n    host_reduced = 1\n\n    DO x = 1, 10\n      host_reduced = host_reduced * (a(x) + b(x))\n    END DO\n\n    !$acc data copyin(a(1:10), b(1:10))\n      !$acc serial loop reduction(*:reduced)\n      DO x = 1, 10\n        reduced = reduced * (a(x) + b(x))\n      END DO\n    !$acc end data\n\n    IF (abs(host_reduced - reduced) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_multiply_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(10, LOOPCOUNT):: a, b, c\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, host_totals\n  REAL(8):: temp\n  INTEGER:: errors, x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n\n  host_totals = 1\n  DO y = 1, LOOPCOUNT\n    DO x = 1, 10\n      host_totals(y) = host_totals(y) * (a(x, y) + b(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:10, 1:LOOPCOUNT), b(1:10, 1:LOOPCOUNT)) copyout(c(1:10, 1:LOOPCOUNT)) copy(totals(1:LOOPCOUNT))\n    !$acc serial loop gang private(temp)\n    DO y = 1, LOOPCOUNT\n      temp = 1\n      !$acc loop worker reduction(*:temp)\n      DO x = 1, 10\n        temp = temp * (a(x, y) + b(x, y))\n      END DO\n      totals(y) = temp\n      !$acc loop worker\n      DO x = 1, 10\n        c(x, y) = (a(x, y) + b(x, y)) / totals(y)\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, LOOPCOUNT\n    IF (abs(host_totals(y) - totals(y)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, 10\n      IF (c(x, y) - ((a(x, y) + b(x, y)) / totals(y)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_multiply_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(10, LOOPCOUNT):: a, b\n  REAL(8),DIMENSION(LOOPCOUNT):: totals, host_totals\n  REAL(8):: temp\n  INTEGER:: errors, x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n  #ifdef SEED\n  SEEDDIM(1) = SEED\n  #endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n\n  host_totals = 1\n  DO y = 1, LOOPCOUNT\n    DO x = 1, 10\n      host_totals(y) = host_totals(y) * (a(x, y) + b(x, y))\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:10, 1:LOOPCOUNT), b(1:10, 1:LOOPCOUNT)) copyout(totals(1:LOOPCOUNT))\n    !$acc serial loop private(temp)\n    DO y = 1, LOOPCOUNT\n      temp = 1\n      !$acc loop vector reduction(*:temp)\n      DO x = 1, 10\n        temp = temp * (a(x, y) + b(x, y))\n      END DO\n      totals(y) = temp\n    END DO\n  !$acc end data\n\n  DO y = 1, LOOPCOUNT\n    IF (abs(host_totals(y) - totals(y)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_or_general.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  LOGICAL,DIMENSION(LOOPCOUNT):: a\n  LOGICAL:: result, host_result\n  REAL(8),DIMENSION(LOOPCOUNT):: randoms\n  REAL(8):: false_margin\n  INTEGER:: errors, x\n\n  errors = 0\n  false_margin = exp(log(.5) / LOOPCOUNT)\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO x = 1, LOOPCOUNT\n    IF (randoms(x) .gt. false_margin) THEN\n      a(x) = .TRUE.\n    ELSE\n      a(x) = .FALSE.\n    END IF\n  END DO\n\n  host_result = .FALSE.\n  result = .FALSE.\n\n  DO x = 1, LOOPCOUNT\n    host_result = host_result .OR. a(x)\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT))\n    !$acc serial loop reduction(.OR.: result)\n    DO x = 1, LOOPCOUNT\n      result = result .OR. a(x)\n    END DO\n  !$acc end data\n\n  IF (host_result .neqv. result) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_or_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a, a_copy\n  LOGICAL,DIMENSION(10):: results\n  LOGICAL:: temp\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  INTEGER:: errors\n  INTEGER:: x, y\n\n  errors = 0\n  SEEDDIM(1) = 1\n  #ifdef SEED\n  SEEDDIM(1) = SEED\n  #endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      IF (randoms(x, y) .gt. false_margin) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  a_copy = a\n\n  !$acc data copy(a(1:LOOPCOUNT, 1:10))\n    !$acc serial loop gang private(temp)\n    DO y = 1, 10\n      temp = .FALSE.\n      !$acc loop worker reduction(.OR.:temp)\n      DO x = 1, LOOPCOUNT\n        temp = temp .OR. a(x, y)\n      END DO\n      results(y) = temp\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        IF (results(y)) THEN\n          IF (a(x, y)) THEN\n            a(x, y) = .FALSE.\n          ELSE\n            a(x, y) = .TRUE.\n          END IF\n        END IF\n      END DO\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    temp = .FALSE.\n    DO x = 1, LOOPCOUNT\n      temp = temp .OR. a(x, y)\n    END DO\n    IF (temp .neqv. results(y)) THEN\n      errors = errors + 1\n    END IF\n    DO x = 1, LOOPCOUNT\n      IF (temp) THEN\n        IF (a(x, y) .eqv. a_copy(x, y)) THEN\n          errors = errors + 1\n        END IF\n      ELSE\n        IF (a(x, y) .neqv. a_copy(x, y)) THEN\n          errors = errors + 1\n        END IF\n      END IF\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_reduction_or_vector_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,reduction,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  LOGICAL,DIMENSION(LOOPCOUNT, 10):: a\n  LOGICAL,DIMENSION(10):: b\n  LOGICAL:: temp\n  REAL(8):: false_margin\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: randoms\n  INTEGER:: errors\n  INTEGER:: x, y\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(randoms)\n\n  DO y = 1, 10\n    DO x = 1, LOOPCOUNT\n      IF (randoms(x, y) .gt. false_margin) THEN\n        a(x, y) = .TRUE.\n      ELSE\n        a(x, y) = .FALSE.\n      END IF\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10)) copy(b(1:10))\n    !$acc serial loop private(temp)\n    DO y = 1, 10\n      temp = .FALSE.\n      !$acc loop vector reduction(.OR.:temp)\n      DO x = 1, LOOPCOUNT\n        temp = temp .OR. a(x, y)\n      END DO\n      b(y) = temp\n    END DO\n  !$acc end data\n\n  DO y = 1, 10\n    temp = .FALSE.\n    DO x = 1, LOOPCOUNT\n      temp = temp .OR. a(x, y)\n    END DO\n    IF (temp .neqv. b(y)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private",
                            "reduction",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_seq.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  REAL(8):: temp\n  INTEGER:: errors, x\n\n  errors = 0\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copy(b(1:LOOPCOUNT))\n    !$acc serial loop seq\n    DO x = 2, LOOPCOUNT\n      b(x) = b(x - 1) + a(x)\n    END DO\n  !$acc end data\n\n  temp = 0\n  DO x = 2, LOOPCOUNT\n    temp = temp + a(x)\n    IF (abs(b(x) - temp) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_tile.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,combined-constructs,loop,tile,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(100):: a, b, c\n  REAL(8),DIMENSION(100, 100):: d2\n  REAL(8),DIMENSION(100, 100, 100):: d3\n  INTEGER:: x, y, z\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  CALL RANDOM_NUMBER(c)\n  d2 = 0\n  d3 = 0\n\n  !$acc data copyin(a(1:100), b(1:100), c(1:100)) copyout(d2(1:100, 1:100))\n    !$acc serial loop tile(*, *)\n    DO x = 1, 100\n      DO y = 1, 100\n        DO z = 1, 100\n          d2(x, y) = d2(x, y) + (a(x) * b(y) * c(z))\n        END DO\n      END DO\n    END DO\n  !$acc end data\n\n  DO x = 1, 100\n    DO y = 1, 100\n      DO z = 1, 100\n        d2(x, y) = d2(x, y) - (a(x) * b(y) * c(z))\n      END DO\n      IF (abs(d2(x, y)) .gt. 10*PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END DO\n  END DO\n\n  !$acc data copyin(a(1:100), b(1:100), c(1:100)) copyout(d3(1:100, 1:100, 1:100))\n    !$acc serial loop tile(*, *, *)\n    DO x = 1, 100\n      DO y = 1, 100\n        DO z = 1, 100\n          d3(x, y, z) = a(x) * b(y) * c(z)\n        END DO\n      END DO\n    END DO\n  !$acc end data\n\n  DO x = 1, 100\n    DO y = 1, 100\n      DO z = 1, 100\n        IF (abs(d3(x, y, z) - (a(x) * b(y) * c(z))) .gt. PRECISION) THEN\n          errors = errors + 1\n        END IF\n      END DO\n    END DO\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "combined-constructs",
                            "loop",
                            "tile"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_vector.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: x\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n    !$acc serial loop vector\n    DO x = 1, LOOPCOUNT\n      c(x) = a(x) + b(x)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_vector_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER:: errors\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: multiplier, x\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n    !$acc serial\n      !$acc loop vector\n      DO x = 1, LOOPCOUNT\n        c(x) = (a(x) + b(x)) * multiplier\n      END DO\n      multiplier = multiplier + 1\n      !$acc loop vector\n      DO x = 1, LOOPCOUNT\n        c(x) = c(x) + ((a(x) + b(x)) * multiplier)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - ((a(x) + b(x)) * 3)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_worker.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,combined-constructs,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: x\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copy(c(1:LOOPCOUNT))\n    !$acc serial loop worker\n    DO x = 1, LOOPCOUNT\n      c(x) = a(x) + b(x)\n    END DO\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "combined-constructs",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_loop_worker_blocking.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: multiplier\n  INTEGER:: x\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n    !$acc serial\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        c(x) = (a(x) + b(x)) * multiplier\n      END DO\n      multiplier = multiplier + 1\n      !$acc loop worker\n      DO x = 1, LOOPCOUNT\n        c(x) = c(x) + ((a(x) + b(x)) * multiplier)\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (3 * (a(x) + b(x)))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_present.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b, c\n  INTEGER:: x\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n\n  !$acc enter data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) create(c(1:LOOPCOUNT))\n  !$acc serial present(a(1:LOOPCOUNT), b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      c(x) = a(x) + b(x)\n    END DO\n  !$acc end serial\n  !$acc exit data delete(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(c(x) - (a(x) + b(x))) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_private.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,private,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a, b\n  REAL(8),DIMENSION(LOOPCOUNT):: c\n  REAL(8),DIMENSION(10):: d\n  REAL(8):: temp\n  INTEGER:: x, y\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n  d = 0\n\n  !$acc data copyin(a(1:LOOPCOUNT, 1:10), b(1:LOOPCOUNT, 1:10)) copy(d(1:10))\n    !$acc serial private(c(1:LOOPCOUNT))\n      !$acc loop gang\n      DO y = 1, 10\n        !$acc loop worker\n        DO x = 1, LOOPCOUNT\n          c(x) = a(x, y) + b(x, y)\n        END DO\n        !$acc loop seq\n        DO x = 1, LOOPCOUNT\n          d(y) = d(y) + c(x)\n        END DO\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO y = 1, 10\n    temp = 0\n    DO x = 1, LOOPCOUNT\n      temp = temp + (a(x, y) + b(x, y))\n    END DO\n    IF (abs(d(x) - temp) .gt. (2 * PRECISION * LOOPCOUNT)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "private"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_reduction.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:serial,reduction,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a\n  REAL(8):: reduction\n  INTEGER:: errors, x\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  !$acc serial copyin(a(1:LOOPCOUNT)) reduction(+:reduction)\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      reduction = reduction + a(x)\n    END DO\n  !$acc end serial\n\n  DO x = 1, LOOPCOUNT\n    reduction = reduction - a(x)\n  END DO\n\n  IF (abs(reduction) .gt. PRECISION) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "serial",
                            "reduction"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_scalar_default_firstprivate.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, b\n  REAL(8):: scalar, scalar_copy\n  INTEGER:: x\n  INTEGER:: errors\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  b = 0\n  scalar = 5.5\n  scalar_copy = scalar\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copyout(b(1:LOOPCOUNT))\n    !$acc serial\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        b(x) = a(x) + scalar\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(b(x) - (a(x) + scalar_copy)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n  IF (abs(scalar_copy - scalar) .gt. PRECISION) THEN\n    errors = errors + 1\n  END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            ""
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_switch.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  INTEGER,DIMENSION(LOOPCOUNT):: a\n  REAL(8),DIMENSION(LOOPCOUNT):: a_randoms, b, b_host, c\n  INTEGER:: errors, x\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a_randoms)\n  CALL RANDOM_NUMBER(b)\n  c = 0\n  b_host = b\n\n  DO x = 1, LOOPCOUNT\n    a(x) = INT(a_randoms(x) * 4)\n  END DO\n\n  !$acc data copyin(a(1:LOOPCOUNT)) copy(b(1:LOOPCOUNT), c(1:LOOPCOUNT))\n    !$acc serial\n      !$acc loop\n      DO x = 1, LOOPCOUNT\n        SELECT CASE(a(x))\n        CASE (0)\n          c(x) = b(x) * b(x)\n        CASE (1)\n          c(x) = b(x) / b(x)\n        CASE (2)\n          b(x) = b(x) / 2\n        CASE DEFAULT\n          c(x) = a(x) + b(x)\n        END SELECT\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO x = 1, LOOPCOUNT\n    SELECT CASE(a(x))\n    CASE(0)\n      IF (abs(c(x) - (b_host(x) * b_host(x))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    CASE(1)\n      IF (abs(c(x) - 1) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    CASE(2)\n      IF (abs(c(x)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n      IF (abs(b(x) - (b_host(x) / 2)) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    CASE DEFAULT\n      IF (abs(c(x) - (b_host(x) + a(x))) .gt. PRECISION) THEN\n        errors = errors + 1\n      END IF\n    END SELECT\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            ""
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_wait.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,serial,update,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT):: a, a_copy\n  INTEGER:: errors, x\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n  a_copy = a\n\n  !$acc enter data create(a(1:LOOPCOUNT))\n  !$acc update device(a(1:LOOPCOUNT)) async(1)\n  !$acc serial present(a(1:lOOPCOUNT)) wait(1)\n    !$acc loop\n    DO x = 1, LOOPCOUNT\n      a(x) = a(x) + 1\n    END DO\n  !$acc end serial\n  !$acc exit data copyout(a(1:LOOPCOUNT))\n\n  DO x = 1, LOOPCOUNT\n    IF (abs(a(x) - (a_copy(x) + 1)) .gt. PRECISION) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "serial",
                            "update"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "serial_while_loop.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:reduction,loop,V:2.6-2.7\n      LOGICAL FUNCTION test1()\n  IMPLICIT NONE\n  INCLUDE \"acc_testsuite.Fh\"\n  REAL(8),DIMENSION(LOOPCOUNT, 10):: a\n  REAL(8):: avg\n  INTEGER:: errors, x, y\n\n  errors = 0\n\n  SEEDDIM(1) = 1\n# ifdef SEED\n  SEEDDIM(1) = SEED\n# endif\n  CALL RANDOM_SEED(PUT=SEEDDIM)\n\n  CALL RANDOM_NUMBER(a)\n\n  !$acc data copy(a(1:LOOPCOUNT, 1:10))\n    !$acc serial\n      !$acc loop\n      DO y = 1, 10\n        avg = 0\n        DO WHILE (avg .lt. 1000)\n          avg = 0\n          !$acc loop reduction(+:avg)\n          DO x = 1, LOOPCOUNT\n            a(x, y) = a(x, y) * 1.5\n            avg = avg + (a(x, y) / LOOPCOUNT)\n          END DO\n        END DO\n      END DO\n    !$acc end serial\n  !$acc end data\n\n  DO y = 1, 10\n    avg = 0\n    DO x = 1, LOOPCOUNT\n      avg = avg + (a(x, y) / LOOPCOUNT)\n    END DO\n    IF ((avg .lt. 1000) .or. (avg .gt. 1500)) THEN\n      errors = errors + 1\n    END IF\n  END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "reduction",
                            "loop"
                        ],
                        "versions": [
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "set_default_async.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:async,construct-independent,internal-control-values,set,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a, b, c, a_host, b_host !Data\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n\n        !Initilization\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        CALL RANDOM_NUMBER(a)\n        CALL RANDOM_NUMBER(b)\n        a_host = a\n        b_host = b\n        c = 0\n\n        !$acc data copyin(a(1:LOOPCOUNT), b(1:LOOPCOUNT)) copyout(c(1:LOOPCOUNT))\n          !$acc set default_async(1)\n          !$acc parallel async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              a(x) = a(x) * a(x)\n            END DO\n          !$acc end parallel\n          !$acc set default_async(2)\n          !$acc parallel async\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              b(x) = b(x) * b(x)\n            END DO\n          !$acc end parallel\n          !$acc parallel async(1) wait(2)\n            !$acc loop\n            DO x = 1, LOOPCOUNT\n              c(x) = a(x) + b(x)\n            END DO\n          !$acc end parallel\n          !$acc wait(1)\n        !$acc end data\n\n        DO x = 1, LOOPCOUNT\n          IF (abs(c(x) - (a_host(x) * a_host(x) + b_host(x) * b_host(x))) .gt. 4 * PRECISION) THEN\n            errors = errors + 1\n          END IF\n        END DO\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "async",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "set_device_num.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: x, y !Iterators\n        REAL(8),DIMENSION(LOOPCOUNT):: a !Data\n        REAL(8),DIMENSION(:, :),ALLOCATABLE :: host_copy\n        REAL(8) :: RAND\n        INTEGER :: errors = 0\n        INTEGER :: temp\n\n        SEEDDIM(1) = 1\n#       ifdef SEED\n        SEEDDIM(1) = SEED\n#       endif\n        CALL RANDOM_SEED(PUT=SEEDDIM)\n\n        ALLOCATE(host_copy(acc_get_num_devices(acc_get_device_type()), LOOPCOUNT))\n\n        IF (acc_get_device_type() .ne. acc_device_none) THEN\n          !host_copy(acc_get_num_devices(acc_get_device_type()), LOOPCOUNT)\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            CALL RANDOM_NUMBER(a)\n            host_copy(x, :) = a\n            !$acc set device_num(x)\n            !$acc enter data copyin(a(1:LOOPCOUNT))\n          END DO\n\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            !$acc set device_num(x)\n            !$acc data present(a(1:LOOPCOUNT))\n              !$acc parallel\n                !$acc loop\n                DO y = 1, LOOPCOUNT\n                  a(y) = a(y) + 1\n                END DO\n              !$acc end parallel\n            !$acc end data\n          END DO\n\n          DO x = 1, acc_get_num_devices(acc_get_device_type())\n            !$acc set device_num(x)\n            !$acc exit data copyout(a(1:LOOPCOUNT))\n            temp = errors\n            DO y = 1, LOOPCOUNT\n              IF (abs(a(y) - (host_copy(x, y) + 1)) .gt. PRECISION) THEN\n                PRINT*, a(y)\n                PRINT*, host_copy(x, y)\n                errors = errors + 1\n              END IF\n            END DO\n            IF (temp .ne. errors) THEN\n              PRINT*, x\n            END IF\n          END DO\n        END IF\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "set_device_type.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc set device_type(host)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,construct-independent,internal-control-values,set,V:2.5-3.2\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc set device_type(multicore)\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,construct-independent,internal-control-values,set,V:2.5-3.2\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc set device_type(default)\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "set_device_type_num.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc set device_type(host)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,construct-independent,internal-control-values,set,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc set device_type(multicore) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,construct-independent,internal-control-values,set,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc set device_type(default) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "set_device_type_num_nvidia.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc set device_type(nvidia) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "set_device_type_nvidia.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,set,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc set device_type(nvidia)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "set"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "shutdown.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:construct-independent,shutdown,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc shutdown\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "construct-independent",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "shutdown_device_num.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_num = acc_get_device_num(acc_get_device_type())\n        !$acc shutdown device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "shutdown_device_type.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc shutdown device_type(host)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc shutdown device_type(multicore)\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc shutdown device_type(default)\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "shutdown_device_type_num.F90": {
                "num tests": 3,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc shutdown device_type(host) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "2": {
                        "content": "#ifndef T2\n!T2:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test2()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc shutdown device_type(multicore) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test2 = .FALSE.\n        ELSE\n          test2 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T2\n        LOGICAL :: test2\n#endif\n#ifndef T2\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test2()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 1\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    },
                    "3": {
                        "content": "#ifndef T3\n!T3:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-3.2\n      LOGICAL FUNCTION test3()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc shutdown device_type(default) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test3 = .FALSE.\n        ELSE\n          test3 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T3\n        LOGICAL :: test3\n#endif\n#ifndef T3\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test3()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 2\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7",
                            "3.0",
                            "3.1",
                            "3.2"
                        ]
                    }
                }
            },
            "shutdown_device_type_num_nvidia.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: device_num\n        INTEGER :: device_type\n        INTEGER :: errors = 0\n\n        device_type = acc_get_device_type()\n        device_num = acc_get_device_num(device_type)\n        !$acc shutdown device_type(nvidia) device_num(device_num)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            },
            "shutdown_device_type_nvidia.F90": {
                "num tests": 1,
                "tests": {
                    "1": {
                        "content": "#ifndef T1\n!T1:runtime,construct-independent,internal-control-values,shutdown,nonvalidating,V:2.5-2.7\n      LOGICAL FUNCTION test1()\n        USE OPENACC\n        IMPLICIT NONE\n        INCLUDE \"acc_testsuite.Fh\"\n        INTEGER :: errors = 0\n\n        !$acc shutdown device_type(nvidia)\n\n        IF (errors .eq. 0) THEN\n          test1 = .FALSE.\n        ELSE\n          test1 = .TRUE.\n        END IF\n      END\n#endif\n#ifndef T1\n        LOGICAL :: test1\n#endif\n#ifndef T1\n        DO testrun = 1, NUM_TEST_CALLS\n          failed = failed .or. test1()\n        END DO\n        IF (failed) THEN\n          failcode = failcode + 2 ** 0\n          failed = .FALSE.\n        END IF\n#endif\n",
                        "tags": [
                            "runtime",
                            "construct-independent",
                            "internal-control-values",
                            "shutdown",
                            "nonvalidating"
                        ],
                        "versions": [
                            "2.5",
                            "2.6",
                            "2.7"
                        ]
                    }
                }
            }
        }
    ]
}

